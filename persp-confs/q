;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "mazen" "~/programming/matlab/mazen/" dired-mode) (def-buffer "2C/regression.m" nil text-mode) (def-buffer "1" "~/programming/c++/tdt4287/project/tasks/1/" dired-mode) (def-buffer "tasks" "~/programming/c++/tdt4287/project/tasks/" dired-mode) (def-buffer "2" "~/programming/c++/tdt4287/project/tasks/2/" dired-mode) (def-buffer "extra<ps3>" "~/programming/c++/parallel_computing/ps3/extra/" dired-mode) (def-buffer "extra<ps2>" "~/programming/c++/parallel_computing/ps2/extra/" dired-mode) (def-buffer "ps2" "~/programming/c++/parallel_computing/ps2/" dired-mode) (def-buffer "parallel_computing" "~/programming/c++/parallel_computing/" dired-mode) (def-buffer "ps1" "~/programming/c++/parallel_computing/ps1/" dired-mode) (def-buffer "extra<ps1>" "~/programming/c++/parallel_computing/ps1/extra/" dired-mode) (def-buffer "code<ps1>" "~/programming/c++/parallel_computing/ps1/code/" dired-mode) (def-buffer "code<ps2>" "~/programming/c++/parallel_computing/ps2/code/" dired-mode) (def-buffer "ps3" "~/programming/c++/parallel_computing/ps3/" dired-mode) (def-buffer "c++" "~/programming/c++/" dired-mode) (def-buffer "tdt4287" "~/programming/c++/tdt4287/" dired-mode) (def-buffer "ex" "~/programming/c++/tdt4287/ex/" dired-mode) (def-buffer "edit-distance" "~/programming/c++/tdt4287/ex/edit-distance/" dired-mode) (def-buffer "markus" "~/programming/c++/tdt4287/ex/edit-distance/markus/" dired-mode) (def-buffer "test5" "~/programming/c++/parallel_computing/test5/" dired-mode) (def-buffer "macbook" "~/" dired-mode) (def-buffer "alskdja" nil fundamental-mode) (def-buffer "etc" "/Applications/Emacs.app/Contents/Resources/etc/" dired-mode) (def-buffer "PROBLEMS" "/Applications/Emacs.app/Contents/Resources/etc/PROBLEMS" outline-mode) (def-buffer "subfiles" "/usr/local/texlive/2016/texmf-dist/tex/latex/subfiles/" dired-mode) (def-buffer "latex" "/usr/local/texlive/2016/texmf-dist/tex/latex/" dired-mode) (def-buffer "window.el.gz" "/Applications/Emacs.app/Contents/Resources/lisp/window.el.gz" emacs-lisp-mode) (def-buffer "sh-script.el.gz" "/Applications/Emacs.app/Contents/Resources/lisp/progmodes/sh-script.el.gz" emacs-lisp-mode) (def-buffer "project" "~/programming/c++/tdt4287/project/" dired-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 56) (min-pixel-width . 70) (min-pixel-height-ignore . 42) (min-pixel-width-ignore . 35) (min-pixel-height-safe . 14) (min-pixel-width-safe . 14)) leaf (pixel-width . 1275) (pixel-height . 1113) (total-width . 182) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (buffer "*GNU Emacs*" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 847) (start . 1)))) (def-params nil) t nil nil) (def-persp "tdt4287" ((def-buffer "naive.py" "/Users/macbook/programming/c++/tdt4287/project/tasks/1/naive.py" python-mode) (def-buffer "whats_happening.txt" "/Users/macbook/programming/c++/tdt4287/project/tasks/1/whats_happening.txt" text-mode) (def-buffer "result" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/result" fundamental-mode) (def-buffer "hamming.h" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/hamming.h" c-mode) (def-buffer "Makefile<2>" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/Makefile" makefile-bsdmake-mode) (def-buffer "main.cpp<1>" "/Users/macbook/programming/c++/tdt4287/project/tasks/1/main.cpp" c++-mode) (def-buffer "kmp.cpp" "/Users/macbook/programming/c++/tdt4287/project/tasks/1/kmp.cpp" c++-mode) (def-buffer "result.txt" "/Users/macbook/programming/c++/tdt4287/project/tasks/1/result.txt" text-mode) (def-buffer "test.txt" "/Users/macbook/programming/c++/tdt4287/project/tasks/1/test.txt" text-mode) (def-buffer ".gitignore" "/Users/macbook/programming/c++/tdt4287/.gitignore" fundamental-mode) (def-buffer "main.cpp<tasks/2>" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/main.cpp" c++-mode) (def-buffer "output_buffer.cpp" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/output_buffer.cpp" c++-mode) (def-buffer "output_buffer.h" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/output_buffer.h" c-mode) (def-buffer "hamming.cpp" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/hamming.cpp" c++-mode)) (def-wconf (((min-height . 8) (min-width . 30) (min-height-ignore . 6) (min-width-ignore . 24) (min-height-safe . 2) (min-width-safe . 6) (min-pixel-height . 112) (min-pixel-width . 210) (min-pixel-height-ignore . 84) (min-pixel-width-ignore . 168) (min-pixel-height-safe . 28) (min-pixel-width-safe . 42)) hc (pixel-width . 1912) (pixel-height . 1113) (total-width . 273) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 638) (pixel-height . 1113) (total-width . 91) (total-height . 79) (normal-height . 1.0) (normal-width . 0.33368200836820083) (buffer "naive.py" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))) (leaf (pixel-width . 637) (pixel-height . 1113) (total-width . 91) (total-height . 79) (normal-height . 1.0) (normal-width . 0.3331589958158996) (buffer "whats_happening.txt" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))) (vc (last . t) (pixel-width . 637) (pixel-height . 1113) (total-width . 91) (total-height . 79) (normal-height . 1.0) (normal-width . 0.3331589958158996) (combination-limit) (leaf (pixel-width . 637) (pixel-height . 557) (total-width . 91) (total-height . 39) (normal-height . 0.5004492362982929) (normal-width . 1.0) (buffer "*shell*" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 5) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 775690) (start . 774142))) (leaf (last . t) (pixel-width . 637) (pixel-height . 556) (total-width . 91) (total-height . 39) (normal-height . 0.4995507637017071) (normal-width . 1.0) (buffer "*compilation*" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 1) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))))) (def-params nil) nil nil nil) (def-persp "words_recogniser" ((def-buffer "prolina_8.audio" nil fundamental-mode) (def-buffer "load_audio.m" nil matlab-mode) (def-buffer "test-audio.dat" nil fundamental-mode) (def-buffer "audio_recorder.m" nil matlab-mode) (def-buffer "excecute.sh" nil sh-mode) (def-buffer "generate_weights_from_parameters.m" nil matlab-mode) (def-buffer "get_what_matters.m" nil matlab-mode) (def-buffer "refresh_database.m" nil matlab-mode) (def-buffer "elaborate_square_grph.m" nil matlab-mode) (def-buffer "make_square_grph_dat.m" nil matlab-mode) (def-buffer "give_weight_to_frequencies.m" nil matlab-mode) (def-buffer "record_and_compare.m" nil matlab-mode) (def-buffer "compare_sound.m" nil matlab-mode) (def-buffer "prepare_from_array_value.m" nil matlab-mode) (def-buffer "recording_series.m" nil matlab-mode) (def-buffer "analyze_spectrum.m" nil matlab-mode) (def-buffer "analyze_audio_file.m" nil matlab-mode) (def-buffer "test_from_web.m" nil matlab-mode) (def-buffer "get_recording.m" nil matlab-mode) (def-buffer "make_square_grph.m" nil matlab-mode) (def-buffer "get_word_split.m" nil matlab-mode) (def-buffer "get_next_word.m" nil matlab-mode) (def-buffer "scripts.m" nil matlab-mode) (def-buffer "analyze_spectrum_built_in.m" nil matlab-mode) (def-buffer "todo.todo" nil org-mode) (def-buffer "mass_split.m" nil matlab-mode) (def-buffer "mollifier.m" nil matlab-mode) (def-buffer "split_word.m" nil matlab-mode) (def-buffer "get_longest_word.m" nil matlab-mode) (def-buffer "view_intensities.m" nil matlab-mode) (def-buffer "plot_split.m" nil matlab-mode) (def-buffer "get_spectrogram.m" nil matlab-mode) (def-buffer "test_plot_q.m" nil matlab-mode) (def-buffer "test_plot_mean.m" nil matlab-mode) (def-buffer "test_cut_quantile.m" nil matlab-mode) (def-buffer "test_slider.m" nil matlab-mode) (def-buffer "generate_peak_file.m" nil matlab-mode) (def-buffer "parameters2.txt" nil text-mode) (def-buffer "parameters.txt" nil text-mode) (def-buffer "pfile_medium_result" nil sh-mode) (def-buffer "pfile_result" nil fundamental-mode) (def-buffer "parallelize_weights.m" nil matlab-mode) (def-buffer "run_training.sh" nil sh-mode) (def-buffer "execute.sh" nil sh-mode) (def-buffer "parameters_compare.txt" nil text-mode) (def-buffer "testtest" "/Users/macbook/testtest" fundamental-mode) (def-buffer "analyze_series.r" nil fundamental-mode) (def-buffer "README.txt" "/Users/macbook/Dropbox/words_recognizer/results/README.txt" text-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 3) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 3) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 78) (total-width . 135) (total-height . 78) (normal-height . 1.0) (normal-width . 1.0) (buffer "README.txt" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 1) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (def-params nil) nil nil nil) (def-persp "sanges" ((def-buffer "sanges" "/Users/macbook/sanges" fundamental-mode) (def-buffer "main.tex" "/Users/macbook/Dropbox/Università/Biology/main.tex" latex-mode) (def-buffer "notes0.tex" "/Users/macbook/Dropbox/Università/Biology/notes0.tex" latex-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 4) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 78) (total-width . 135) (total-height . 78) (normal-height . 1.0) (normal-width . 1.0) (buffer "analyze_series.r" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (def-params nil) nil nil nil) (def-persp "parallel_computing" ((def-buffer "makefile<ps2/extra>" "/Users/macbook/programming/c++/parallel_computing/ps2/extra/makefile" makefile-bsdmake-mode) (def-buffer "Makefile<code>" "/Users/macbook/programming/c++/parallel_computing/ps1/code/Makefile" makefile-bsdmake-mode) (def-buffer "CA_pthread.c" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/CA_pthread.c" c-mode) (def-buffer "RPS_pthread.c" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/RPS_pthread.c" c-mode) (def-buffer "RPS_omp.c" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/RPS_omp.c" c-mode) (def-buffer "makefile<ps3/extra>" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/makefile" makefile-bsdmake-mode) (def-buffer "Makefile<markus>" "/Users/macbook/programming/c++/tdt4287/ex/edit-distance/markus/Makefile" makefile-bsdmake-mode) (def-buffer "CA_omp.c" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/CA_omp.c" c-mode) (def-buffer "RPS.h" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/RPS.h" c-mode) (def-buffer "RPS_serial.c" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/RPS_serial.c" c-mode) (def-buffer "xor_shift.h" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/xor_shift.h" c-mode) (def-buffer "xor_shift.c" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/xor_shift.c" c-mode) (def-buffer "CA_serial.c" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/CA_serial.c" c-mode) (def-buffer "CA.h<extra>" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/CA.h" c-mode) (def-buffer "bitmap.c<extra>" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/bitmap.c" c-mode) (def-buffer "bitmap.h" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/bitmap.h" c-mode) (def-buffer "makefile_server" "/Users/macbook/programming/c++/parallel_computing/ps3/extra/makefile_server" makefile-bsdmake-mode)) (def-wconf (((min-height . 8) (min-width . 30) (min-height-ignore . 6) (min-width-ignore . 25) (min-height-safe . 2) (min-width-safe . 6) (min-pixel-height . 112) (min-pixel-width . 210) (min-pixel-height-ignore . 84) (min-pixel-width-ignore . 175) (min-pixel-height-safe . 28) (min-pixel-width-safe . 42)) hc (pixel-width . 1912) (pixel-height . 1113) (total-width . 273) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 640) (pixel-height . 1113) (total-width . 91) (total-height . 79) (normal-height . 1.0) (normal-width . 0.3339130434782609) (buffer "RPS_pthread.c" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 3594) (start . 2626))) (leaf (pixel-width . 640) (pixel-height . 1113) (total-width . 92) (total-height . 79) (normal-height . 1.0) (normal-width . 0.33391304347826084) (buffer "makefile<ps3/extra>" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 51) (start . 1))) (vc (last . t) (pixel-width . 632) (pixel-height . 1113) (total-width . 90) (total-height . 79) (normal-height . 1.0) (normal-width . 0.33217391304347826) (combination-limit) (leaf (pixel-width . 632) (pixel-height . 574) (total-width . 90) (total-height . 41) (normal-height . 0.5142857142857142) (normal-width . 1.0) (buffer "*shell*" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 5) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 775690) (start . 774105))) (leaf (last . t) (pixel-width . 632) (pixel-height . 539) (total-width . 90) (total-height . 38) (normal-height . 0.4857142857142857) (normal-width . 1.0) (buffer "*compilation*" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 1) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 277) (start . 1)))))) (def-params nil) nil nil nil) (def-persp "various" ((def-buffer "list" "/Users/macbook/list" fundamental-mode) (def-buffer "cabin_trip" "/Users/macbook/cabin_trip" fundamental-mode) (def-buffer "expenses.exp" "/Users/macbook/expenses.exp" tcl-mode) (def-buffer "init.el" "/Users/macbook/.emacs.d/init.el" emacs-lisp-mode) (def-buffer "persp-mode.el" "/Users/macbook/.emacs.d/lisp/persp-mode.el" emacs-lisp-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 5) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 79) (total-width . 135) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (buffer "list" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 2444) (start . 1011)))) (def-params nil) nil nil nil) (def-persp "notes0.tex<ParallelComputing>" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 5) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 79) (total-width . 135) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (buffer "list" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 2444) (start . 1011)))) (def-params nil) nil nil nil) (def-persp "test3" nil (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 5) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 5) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 79) (total-width . 135) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 25556) (start . 23252)))) (def-params nil) nil nil nil) (def-persp "debugger" ((def-buffer "ex2.cpp" nil c++-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 4) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 78) (total-width . 135) (total-height . 78) (normal-height . 1.0) (normal-width . 1.0) (buffer "ex2.cpp" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (def-params nil) nil nil nil) (def-persp "r" ((def-buffer "split_word_graph.r" nil fundamental-mode) (def-buffer "plot_cut.r" nil fundamental-mode) (def-buffer "PrimoEsempioNumerico.tex" "/Users/macbook/Library/Mobile Documents/M6HJR9W95L~com~textasticapp~textastic/Documents/tesina2015/PrimoEsempioNumerico.tex" latex-mode) (def-buffer "compare_sound.r" nil fundamental-mode) (def-buffer "record_and_compare.r" nil fundamental-mode) (def-buffer "get_what_matters.r" nil fundamental-mode) (def-buffer "spectrogram_plot.r" nil fundamental-mode) (def-buffer "analyze_spectrum_built_in.r" nil fundamental-mode) (def-buffer "recording_series.r" nil fundamental-mode) (def-buffer "get_recording.r" nil fundamental-mode) (def-buffer "mass_split.r" nil fundamental-mode) (def-buffer "generate_peak_file.r" nil fundamental-mode) (def-buffer "play_audio.r" nil fundamental-mode) (def-buffer "populate_database.r" nil fundamental-mode) (def-buffer "sources.h" nil c-mode) (def-buffer "compare_sound_multiple.r" nil fundamental-mode) (def-buffer "parameters.txt_result" nil fundamental-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 4) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 79) (total-width . 135) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (buffer "compare_sound.r" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (def-params nil) nil nil nil) (def-persp "compare" ((def-buffer "compare.cpp" nil c++-mode) (def-buffer "pfile_medium" nil fundamental-mode) (def-buffer "parameters.cpp" nil c++-mode) (def-buffer "pfile" nil fundamental-mode) (def-buffer "compare" nil fundamental-mode) (def-buffer "pfile_mini<weights>" nil hexl-mode) (def-buffer "par_gen.cpp" "/Users/macbook/programming/_projects/words_recogniser/cpp/par_gen.cpp" c++-mode) (def-buffer "pfile_mini_result" nil fundamental-mode) (def-buffer "run_all_lines.sh" nil sh-mode) (def-buffer "main.cpp<cpp>" nil c++-mode) (def-buffer "pfile_mini<cpp>" nil fundamental-mode) (def-buffer "parameters.h" nil c-mode) (def-buffer "common.cpp" nil c++-mode) (def-buffer "common.h" "/Users/macbook/programming/c++/parallel_computing/ps2/code/common.h" c-mode) (def-buffer "peaks.h" nil c-mode) (def-buffer "peaks.cpp" nil c++-mode) (def-buffer "Makefile<cpp>" nil makefile-bsdmake-mode) (def-buffer "compare.h" nil c-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 10) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 4) (min-pixel-width . 20) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 10) (min-pixel-height-safe . 1) (min-pixel-width-safe . 4)) hc (pixel-width . 135) (pixel-height . 79) (total-width . 135) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 45) (pixel-height . 79) (total-width . 45) (total-height . 79) (normal-height . 1.0) (normal-width . 0.33333333333333337) (buffer "compare.cpp" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))) (leaf (last . t) (pixel-width . 90) (pixel-height . 79) (total-width . 90) (total-height . 79) (normal-height . 1.0) (normal-width . 0.6666666666666666) (buffer "persp-mode-projectile-bridge.el" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))))) (def-params nil) nil nil nil) (def-persp "waves" ((def-buffer "size_of_training_set.txt" "/Users/macbook/Dropbox/words_recogniser/waves/alanina/training/split/size_of_training_set.txt" text-mode) (def-buffer "candidates.txt" "/Users/macbook/Dropbox/words_recogniser/waves/current_file/candidates.txt" text-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 4) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 135) (pixel-height . 79) (total-width . 135) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (buffer "*Completions*" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))) (def-params nil) nil nil nil) (def-persp "latex" ((def-buffer "conclusioni.tex" nil latex-mode) (def-buffer "parametri.tex" nil latex-mode) (def-buffer "knn.tex" nil latex-mode) (def-buffer "compare.tex" nil latex-mode) (def-buffer "picchi.tex" nil latex-mode) (def-buffer "analisi_segnale.tex" nil latex-mode) (def-buffer "introduzione.tex" nil latex-mode) (def-buffer "main.log" nil latex-mode) (def-buffer "main.tex<latex>" nil latex-mode) (def-buffer "polloEIntroduzione.tex" nil latex-mode) (def-buffer "subfiles.cls" "/usr/local/texlive/2016/texmf-dist/tex/latex/subfiles/subfiles.cls" latex-mode) (def-buffer "polloEIntroduzione.log" nil latex-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 4) (min-pixel-width . 20) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 8) (min-pixel-height-safe . 1) (min-pixel-width-safe . 4)) hc (pixel-width . 135) (pixel-height . 79) (total-width . 135) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 68) (pixel-height . 79) (total-width . 68) (total-height . 79) (normal-height . 1.0) (normal-width . 0.5037037037037038) (buffer "introduzione.tex" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))) (leaf (last . t) (pixel-width . 67) (pixel-height . 79) (total-width . 67) (total-height . 79) (normal-height . 1.0) (normal-width . 0.4962962962962963) (buffer "parametri.tex" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 589) (start . 1))))) (def-params nil) nil nil nil) (def-persp "test_mpi" ((def-buffer "Makefile<test4>" "/Users/macbook/programming/c++/parallel_computing/test4/Makefile" makefile-bsdmake-mode) (def-buffer "main.c" "/Users/macbook/programming/c++/parallel_computing/test4/main.c" c-mode) (def-buffer "test.c" nil c-mode)) (def-wconf (((min-height . 8) (min-width . 30) (min-height-ignore . 6) (min-width-ignore . 23) (min-height-safe . 2) (min-width-safe . 6) (min-pixel-height . 112) (min-pixel-width . 210) (min-pixel-height-ignore . 84) (min-pixel-width-ignore . 161) (min-pixel-height-safe . 28) (min-pixel-width-safe . 42)) hc (pixel-width . 1912) (pixel-height . 1113) (total-width . 273) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 638) (pixel-height . 1113) (total-width . 91) (total-height . 79) (normal-height . 1.0) (normal-width . 0.33368200836820083) (buffer "RPS_MPI.c" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1117) (start . 1))) (leaf (pixel-width . 637) (pixel-height . 1113) (total-width . 91) (total-height . 79) (normal-height . 1.0) (normal-width . 0.3331589958158996) (buffer "main.c" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1278) (start . 94))) (vc (last . t) (pixel-width . 637) (pixel-height . 1113) (total-width . 91) (total-height . 79) (normal-height . 1.0) (normal-width . 0.3331589958158996) (combination-limit) (leaf (pixel-width . 637) (pixel-height . 557) (total-width . 91) (total-height . 40) (normal-height . 0.5004492362982929) (normal-width . 1.0) (buffer "*shell*" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 35667) (start . 34340))) (leaf (last . t) (pixel-width . 637) (pixel-height . 556) (total-width . 91) (total-height . 39) (normal-height . 0.4995507637017071) (normal-width . 1.0) (buffer "*compilation*" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 1) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)))))) (def-params nil) nil nil nil) (def-persp "r_2" ((def-buffer "result" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/result" fundamental-mode) (def-buffer "graph.r<2>" "/Users/macbook/programming/c++/tdt4287/project/tasks/2/graph.r" ess-mode) (def-buffer "graph.r<1>" "/Users/macbook/programming/c++/tdt4287/project/tasks/1/graph.r" ess-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 16) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 56) (min-pixel-width . 140) (min-pixel-height-ignore . 42) (min-pixel-width-ignore . 112) (min-pixel-height-safe . 14) (min-pixel-width-safe . 28)) hc (pixel-width . 1912) (pixel-height . 1106) (total-width . 273) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 956) (pixel-height . 1106) (total-width . 136) (total-height . 79) (normal-height . 1.0) (normal-width . 0.5) (buffer "graph.r<2>" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 2844) (start . 791))) (leaf (last . t) (pixel-width . 956) (pixel-height . 1106) (total-width . 137) (total-height . 79) (normal-height . 1.0) (normal-width . 0.5) (buffer "*R:tdt4287*" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 3) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 47517) (start . 43181))))) (def-params nil) nil nil nil) (def-persp "mazen" ((def-buffer "WAM10_7119N_2803E.txt" "/Users/macbook/programming/matlab/mazen/WAM10_7119N_2803E.txt" text-mode) (def-buffer "scatter_plot.m" "/Users/macbook/programming/matlab/mazen/scatter_plot.m" matlab-mode) (def-buffer "run__all.m" "/Users/macbook/programming/matlab/mazen/run__all.m" matlab-mode) (def-buffer "run_all.m" "/Users/macbook/programming/matlab/mazen/run_all.m" matlab-mode) (def-buffer "return_period.m" "/Users/macbook/programming/matlab/mazen/return_period.m" matlab-mode) (def-buffer "regression.m" "/Users/macbook/programming/matlab/mazen/regression.m" matlab-mode) (def-buffer "get_position_from_grid.m" "/Users/macbook/programming/matlab/mazen/get_position_from_grid.m" matlab-mode) (def-buffer "load_audio.m<words_recogniser>" "/Users/macbook/programming/_projects/words_recogniser/load_audio.m" matlab-mode) (def-buffer "load_all.m" "/Users/macbook/programming/matlab/mazen/load_all.m" matlab-mode) (def-buffer "extrapolation.m" "/Users/macbook/programming/matlab/mazen/extrapolation.m" matlab-mode) (def-buffer ".projectile" "/Users/macbook/programming/matlab/mazen/.projectile" fundamental-mode) (def-buffer "table_W.m" "/Users/macbook/programming/matlab/mazen/table_W.m" matlab-mode) (def-buffer "get_first_index_above_threshold.m" "/Users/macbook/programming/matlab/mazen/get_first_index_above_threshold.m" matlab-mode) (def-buffer "table_Y.m" "/Users/macbook/programming/matlab/mazen/table_Y.m" matlab-mode) (def-buffer "table_Q.csv" "/Users/macbook/programming/matlab/mazen/table_Q.csv" fundamental-mode) (def-buffer "table_Q.csv_2" "/Users/macbook/programming/matlab/mazen/table_Q.csv_2" fundamental-mode) (def-buffer "table_P.csv_2" "/Users/macbook/programming/matlab/mazen/table_P.csv_2" fundamental-mode) (def-buffer "table.csv_2" "/Users/macbook/programming/matlab/mazen/table.csv_2" fundamental-mode) (def-buffer "table_Z.csv_2" "/Users/macbook/programming/matlab/mazen/table_Z.csv_2" fundamental-mode) (def-buffer "table_Z" "/Users/macbook/programming/matlab/mazen/table_Z" fundamental-mode) (def-buffer "table_Z.csv" "/Users/macbook/programming/matlab/mazen/table_Z.csv" fundamental-mode) (def-buffer "table_P.csv" "/Users/macbook/programming/matlab/mazen/table_P.csv" fundamental-mode) (def-buffer "table_Z.m" "/Users/macbook/programming/matlab/mazen/table_Z.m" matlab-mode) (def-buffer "table_PQG.m" "/Users/macbook/programming/matlab/mazen/table_PQG.m" matlab-mode) (def-buffer "table.csv" "/Users/macbook/programming/matlab/mazen/table.csv" fundamental-mode) (def-buffer "visualize.m" "/Users/macbook/programming/matlab/mazen/visualize.m" matlab-mode) (def-buffer "find_peaks.m" "/Users/macbook/programming/matlab/mazen/find_peaks.m" matlab-mode) (def-buffer "create_table.m" "/Users/macbook/programming/matlab/mazen/create_table.m" matlab-mode)) (def-wconf (((min-height . 8) (min-width . 20) (min-height-ignore . 6) (min-width-ignore . 14) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 112) (min-pixel-width . 140) (min-pixel-height-ignore . 84) (min-pixel-width-ignore . 98) (min-pixel-height-safe . 28) (min-pixel-width-safe . 28)) hc (pixel-width . 1275) (pixel-height . 1106) (total-width . 182) (total-height . 79) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 634) (pixel-height . 1106) (total-width . 90) (total-height . 79) (normal-height . 1.0) (normal-width . 0.5) (buffer "extrapolation.m" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 888) (start . 1))) (vc (last . t) (pixel-width . 641) (pixel-height . 1106) (total-width . 92) (total-height . 79) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 641) (pixel-height . 557) (total-width . 92) (total-height . 39) (normal-height . 0.5004492362982929) (normal-width . 1.0) (buffer "extrapolation.m" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 888) (start . 1))) (leaf (last . t) (pixel-width . 641) (pixel-height . 549) (total-width . 92) (total-height . 39) (normal-height . 0.4995507637017071) (normal-width . 1.0) (buffer "load_all.m" (selected) (hscroll . 0) (fringes 0 0 nil) (margins 2) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 744) (start . 1)))))) (def-params nil) nil nil nil))