;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("algorithm" include (:system-flag t) nil [15 35])
            ("array" include (:system-flag t) nil [49 65])
            ("ciso646" include (:system-flag t) nil [75 93])
            ("forward_list" include (:system-flag t) nil [106 129])
            ("iterator" include (:system-flag t) nil [146 165])
            ("string" include (:system-flag t) nil [199 216])
            ("tuple" include (:system-flag t) nil [227 243])
            ("type_traits" include (:system-flag t) nil [265 287])
            ("utility" include (:system-flag t) nil [356 374])
            ("valarray" include (:system-flag t) nil [392 411])
            ("nlohmann/detail/exceptions.hpp" include (:system-flag t) nil [425 466])
            ("nlohmann/detail/macro_scope.hpp" include (:system-flag t) nil [467 509])
            ("nlohmann/detail/meta.hpp" include (:system-flag t) nil [510 545])
            ("nlohmann/detail/value_t.hpp" include (:system-flag t) nil [546 584])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("get_arithmetic_value" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [953 976])
                                    ("val" variable
                                       (:reference 1
                                        :type ("ArithmeticType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [977 997]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [927 1764])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1814 1837])
                                    ("b" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::boolean_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1838 1875]))                                  )
                                (reparse-symbol namespacesubparts) [1766 2114])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2164 2187])
                                    ("s" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2188 2224]))                                  )
                                (reparse-symbol namespacesubparts) [2116 2460])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2510 2533])
                                    ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::number_float_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2534 2578]))                                  )
                                (reparse-symbol namespacesubparts) [2462 2616])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2666 2689])
                                    ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::number_unsigned_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2690 2737]))                                  )
                                (reparse-symbol namespacesubparts) [2618 2775])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2825 2848])
                                    ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::number_integer_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2849 2895]))                                  )
                                (reparse-symbol namespacesubparts) [2777 2933])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3064 3087])
                                    ("e" variable
                                       (:reference 1
                                        :type ("EnumType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3088 3100]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [3049 3229])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3279 3302])
                                    ("arr" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3303 3340]))                                  )
                                (reparse-symbol namespacesubparts) [3231 3575])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3780 3803])
                                    ("l" variable
                                       (:reference 1
                                        :type ("std::forward_list" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("Allocator" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3804 3839]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [3765 4163])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4344 4367])
                                    ("l" variable
                                       (:reference 1
                                        :type ("std::valarray" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [4368 4388]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [4329 4654])
                            ("from_json_array_impl" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("CompatibleArrayType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4745 4768])
                                    ("arr" variable
                                       (:reference 1
                                        :type ("CompatibleArrayType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4769 4794])
                                    ("" variable (:type ("priority_tag" type
                                         (:template-specifier (("0"))
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [4795 4822]))                                  )
                                (reparse-symbol namespacesubparts) [4656 5178])
                            ("decltype" function
                               (:arguments 
                                  ( ("" variable (:type ("arr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5364 5368])
                                    ("" variable (:type ("reserve" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5368 5432])
                                    ("" variable (:type "void") (reparse-symbol arg-sub-list) [5438 5444]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5350 5828])
                            ("from_json_array_impl" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil)
                                    ("std::size_t" type (:typevar "N") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5916 5939])
                                    ("arr" variable
                                       (:reference 1
                                        :type ("std::array" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil)
                                                  ("N" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [5940 5962])
                                    ("" variable (:type ("priority_tag" type
                                         (:template-specifier (("2"))
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [5963 5990]))                                  )
                                (reparse-symbol namespacesubparts) [5830 6090])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6519 6542])
                                    ("arr" variable
                                       (:reference 1
                                        :type ("CompatibleArrayType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6543 6568]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6504 6823])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7006 7029])
                                    ("obj" variable
                                       (:reference 1
                                        :type ("CompatibleObjectType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7030 7056]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [6991 7673])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8491 8514])
                                    ("val" variable
                                       (:reference 1
                                        :type ("ArithmeticType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8515 8535]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [8476 9484])
                            ("from_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil)
                                    ("A1" type (:type "class") nil nil)
                                    ("A2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9560 9583])
                                    ("p" variable
                                       (:reference 1
                                        :type ("std::pair" type
                                             (:template-specifier 
                                                ( ("A1" type nil nil nil)
                                                  ("A2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [9584 9605]))                                  )
                                (reparse-symbol namespacesubparts) [9486 9675])
                            ("from_json_tuple_impl" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9772 9795])
                                    ("t" variable
                                       (:reference 1
                                        :type ("Tuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9796 9805])
                                    ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9806 9821])
                                    ("" variable (:type ("Idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9821 9825]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [9746 9934])
                            ("from_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10002 10025])
                                    ("" variable (:type ("std::tuple" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10026 10037])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10037 10042])
                                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10047 10049]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [9987 10117])
                            ("from_json_fn" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [10143 10151])
                                    ("decltype" function
                                       (:arguments 
                                          ( ("" variable (:type ("from_json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10339 10356])
                                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [10358 10364]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [10330 10411])
                                    ("public" label nil (reparse-symbol classsubparts) [10997 11004])
                                    ("noexcept" function
                                       (:constant-flag t
                                        :arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11125 11196]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [11106 11258]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [10119 11261]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [607 11263])
                    ("unnamed" type
                       (:members 
                          ( ("detail::static_const::value" variable (:type "int") (reparse-symbol namespacesubparts) [11466 11516]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [11420 11518]))                  
                :type "namespace")
                nil [586 11520]))          
      :file "from_json.hpp"
      :pointmax 11521
      :fsize 11520
      :lastmodtime '(23254 8838 643014 671000)
      :unmatched-syntax '((punctuation 11464 . 11465) (symbol 11454 . 11463) (punctuation 11452 . 11453) (symbol 11448 . 11452) (CONST 11442 . 11447) (symbol 11432 . 11441) (semantic-list 11133 . 11196) (semantic-list 11073 . 11105) (semantic-list 11071 . 11073) (OPERATOR 11063 . 11071) (VOID 11058 . 11062) (punctuation 11052 . 11053) (symbol 11051 . 11052) (TYPENAME 11042 . 11050) (punctuation 11040 . 11041) (symbol 11027 . 11040) (TYPENAME 11018 . 11026) (punctuation 11017 . 11018) (TEMPLATE 11009 . 11017) (semantic-list 10571 . 10993) (symbol 10558 . 10566) (CONST 10552 . 10557) (semantic-list 10475 . 10551) (symbol 10471 . 10475) (VOID 10466 . 10470) (punctuation 10460 . 10461) (symbol 10459 . 10460) (TYPENAME 10450 . 10458) (punctuation 10448 . 10449) (symbol 10435 . 10448) (TYPENAME 10426 . 10434) (punctuation 10425 . 10426) (TEMPLATE 10417 . 10425) (semantic-list 10362 . 10364) (semantic-list 10348 . 10356) (punctuation 10328 . 10329) (punctuation 10327 . 10328) (semantic-list 10293 . 10322) (symbol 10285 . 10293) (semantic-list 10302 . 10321) (CONST 10275 . 10280) (semantic-list 10302 . 10321) (semantic-list 10214 . 10274) (symbol 10210 . 10214) (symbol 10205 . 10209) (punctuation 10199 . 10200) (symbol 10198 . 10199) (TYPENAME 10189 . 10197) (punctuation 10187 . 10188) (symbol 10174 . 10187) (TYPENAME 10165 . 10173) (punctuation 10164 . 10165) (TEMPLATE 10156 . 10164) (punctuation 10045 . 10046) (punctuation 10044 . 10045) (punctuation 10043 . 10044) (punctuation 10042 . 10043) (punctuation 10041 . 10042) (punctuation 10036 . 10037) (punctuation 9985 . 9986) (symbol 9981 . 9985) (punctuation 9979 . 9980) (punctuation 9978 . 9979) (punctuation 9977 . 9978) (TYPENAME 9969 . 9977) (punctuation 9967 . 9968) (symbol 9954 . 9967) (TYPENAME 9945 . 9953) (punctuation 9944 . 9945) (TEMPLATE 9936 . 9944) (punctuation 9827 . 9828) (punctuation 9826 . 9827) (punctuation 9825 . 9826) (punctuation 9824 . 9825) (punctuation 9820 . 9821) (punctuation 9744 . 9745) (symbol 9741 . 9744) (punctuation 9739 . 9740) (punctuation 9738 . 9739) (punctuation 9737 . 9738) (symbol 9731 . 9737) (punctuation 9730 . 9731) (punctuation 9729 . 9730) (symbol 9726 . 9729) (punctuation 9724 . 9725) (symbol 9719 . 9724) (TYPENAME 9710 . 9718) (punctuation 9708 . 9709) (symbol 9695 . 9708) (TYPENAME 9686 . 9694) (punctuation 9685 . 9686) (TEMPLATE 9677 . 9685) (punctuation 8474 . 8475) (number 8473 . 8474) (punctuation 8471 . 8472) (punctuation 8469 . 8470) (INT 8466 . 8469) (punctuation 8451 . 8452) (symbol 8446 . 8451) (punctuation 8445 . 8446) (punctuation 8444 . 8445) (punctuation 8443 . 8444) (symbol 8434 . 8443) (punctuation 8433 . 8434) (punctuation 8432 . 8433) (symbol 8419 . 8432) (TYPENAME 8410 . 8418) (punctuation 8408 . 8409) (symbol 8394 . 8408) (punctuation 8393 . 8394) (symbol 8386 . 8393) (punctuation 8385 . 8386) (punctuation 8384 . 8385) (symbol 8381 . 8384) (symbol 8377 . 8380) (symbol 8360 . 8363) (symbol 8354 . 8359) (punctuation 8353 . 8354) (punctuation 8352 . 8353) (punctuation 8351 . 8352) (symbol 8337 . 8351) (punctuation 8336 . 8337) (punctuation 8335 . 8336) (symbol 8322 . 8335) (TYPENAME 8313 . 8321) (punctuation 8311 . 8312) (symbol 8297 . 8311) (punctuation 8296 . 8297) (symbol 8289 . 8296) (punctuation 8288 . 8289) (punctuation 8287 . 8288) (symbol 8284 . 8287) (symbol 8280 . 8283) (symbol 8263 . 8266) (symbol 8257 . 8262) (punctuation 8256 . 8257) (punctuation 8255 . 8256) (punctuation 8254 . 8255) (symbol 8238 . 8254) (punctuation 8237 . 8238) (punctuation 8236 . 8237) (symbol 8223 . 8236) (TYPENAME 8214 . 8222) (punctuation 8212 . 8213) (symbol 8198 . 8212) (punctuation 8197 . 8198) (symbol 8190 . 8197) (punctuation 8189 . 8190) (punctuation 8188 . 8189) (symbol 8185 . 8188) (symbol 8181 . 8184) (symbol 8164 . 8167) (symbol 8158 . 8163) (punctuation 8157 . 8158) (punctuation 8156 . 8157) (punctuation 8155 . 8156) (symbol 8138 . 8155) (punctuation 8137 . 8138) (punctuation 8136 . 8137) (symbol 8123 . 8136) (TYPENAME 8114 . 8122) (punctuation 8112 . 8113) (symbol 8098 . 8112) (punctuation 8097 . 8098) (symbol 8090 . 8097) (punctuation 8089 . 8090) (punctuation 8088 . 8089) (symbol 8085 . 8088) (symbol 8081 . 8084) (symbol 8064 . 8067) (symbol 8058 . 8063) (punctuation 8057 . 8058) (punctuation 8056 . 8057) (punctuation 8055 . 8056) (symbol 8041 . 8055) (punctuation 8040 . 8041) (symbol 8027 . 8040) (punctuation 8026 . 8027) (punctuation 8025 . 8026) (symbol 8022 . 8025) (punctuation 8007 . 8008) (symbol 7995 . 8006) (punctuation 7984 . 7985) (symbol 7970 . 7984) (TYPENAME 7961 . 7969) (punctuation 7959 . 7960) (symbol 7946 . 7959) (TYPENAME 7937 . 7945) (punctuation 7936 . 7937) (TEMPLATE 7928 . 7936) (punctuation 6989 . 6990) (number 6988 . 6989) (punctuation 6986 . 6987) (punctuation 6984 . 6985) (INT 6981 . 6984) (punctuation 6979 . 6980) (symbol 6974 . 6979) (punctuation 6973 . 6974) (punctuation 6972 . 6973) (punctuation 6971 . 6972) (symbol 6951 . 6971) (punctuation 6949 . 6950) (symbol 6936 . 6949) (punctuation 6935 . 6936) (symbol 6910 . 6935) (punctuation 6909 . 6910) (symbol 6898 . 6909) (punctuation 6887 . 6888) (symbol 6867 . 6887) (TYPENAME 6858 . 6866) (punctuation 6856 . 6857) (symbol 6843 . 6856) (TYPENAME 6834 . 6842) (punctuation 6833 . 6834) (TEMPLATE 6825 . 6833) (punctuation 6502 . 6503) (number 6500 . 6501) (punctuation 6498 . 6499) (punctuation 6496 . 6497) (INT 6492 . 6495) (punctuation 6482 . 6483) (symbol 6477 . 6482) (punctuation 6476 . 6477) (punctuation 6475 . 6476) (punctuation 6474 . 6475) (symbol 6463 . 6473) (punctuation 6462 . 6463) (punctuation 6461 . 6462) (symbol 6442 . 6461) (TYPENAME 6433 . 6441) (punctuation 6431 . 6432) (symbol 6418 . 6431) (punctuation 6404 . 6405) (symbol 6387 . 6403) (punctuation 6386 . 6387) (punctuation 6385 . 6386) (symbol 6382 . 6385) (symbol 6370 . 6373) (symbol 6364 . 6369) (punctuation 6363 . 6364) (punctuation 6362 . 6363) (punctuation 6361 . 6362) (symbol 6342 . 6361) (punctuation 6315 . 6316) (symbol 6308 . 6315) (punctuation 6307 . 6308) (punctuation 6306 . 6307) (symbol 6293 . 6306) (TYPENAME 6284 . 6292) (punctuation 6283 . 6284) (symbol 6276 . 6283) (punctuation 6275 . 6276) (punctuation 6274 . 6275) (symbol 6271 . 6274) (symbol 6267 . 6270) (symbol 6255 . 6258) (symbol 6249 . 6254) (punctuation 6248 . 6249) (punctuation 6247 . 6248) (punctuation 6246 . 6247) (symbol 6227 . 6246) (punctuation 6225 . 6226) (symbol 6212 . 6225) (punctuation 6211 . 6212) (symbol 6187 . 6211) (punctuation 6177 . 6178) (symbol 6165 . 6176) (punctuation 6159 . 6160) (symbol 6140 . 6159) (TYPENAME 6131 . 6139) (punctuation 6129 . 6130) (symbol 6116 . 6129) (TYPENAME 6107 . 6115) (punctuation 6101 . 6102) (TEMPLATE 6092 . 6100) (semantic-list 5442 . 5444) (semantic-list 5375 . 5432) (punctuation 5367 . 5368) (punctuation 5348 . 5349) (punctuation 5347 . 5348) (semantic-list 5268 . 5346) (symbol 5248 . 5268) (symbol 5243 . 5247) (punctuation 5241 . 5242) (symbol 5222 . 5241) (TYPENAME 5213 . 5221) (punctuation 5211 . 5212) (symbol 5198 . 5211) (TYPENAME 5189 . 5197) (punctuation 5188 . 5189) (TEMPLATE 5180 . 5188) (punctuation 4327 . 4328) (number 4326 . 4327) (punctuation 4324 . 4325) (punctuation 4322 . 4323) (INT 4319 . 4322) (punctuation 4317 . 4318) (symbol 4312 . 4317) (punctuation 4311 . 4312) (punctuation 4310 . 4311) (punctuation 4309 . 4310) (symbol 4308 . 4309) (punctuation 4306 . 4307) (symbol 4293 . 4306) (punctuation 4292 . 4293) (symbol 4278 . 4292) (punctuation 4277 . 4278) (punctuation 4276 . 4277) (symbol 4273 . 4276) (punctuation 4272 . 4273) (symbol 4261 . 4272) (punctuation 4250 . 4251) (symbol 4249 . 4250) (TYPENAME 4240 . 4248) (punctuation 4238 . 4239) (symbol 4225 . 4238) (TYPENAME 4216 . 4224) (punctuation 4215 . 4216) (TEMPLATE 4207 . 4215) (punctuation 3763 . 3764) (number 3762 . 3763) (punctuation 3760 . 3761) (punctuation 3758 . 3759) (INT 3755 . 3758) (punctuation 3753 . 3754) (symbol 3748 . 3753) (punctuation 3747 . 3748) (punctuation 3746 . 3747) (punctuation 3745 . 3746) (symbol 3744 . 3745) (punctuation 3742 . 3743) (symbol 3729 . 3742) (punctuation 3728 . 3729) (symbol 3714 . 3728) (punctuation 3713 . 3714) (punctuation 3712 . 3713) (symbol 3709 . 3712) (punctuation 3708 . 3709) (symbol 3697 . 3708) (punctuation 3686 . 3687) (symbol 3677 . 3686) (TYPENAME 3668 . 3676) (punctuation 3666 . 3667) (symbol 3665 . 3666) (TYPENAME 3656 . 3664) (punctuation 3654 . 3655) (symbol 3641 . 3654) (TYPENAME 3632 . 3640) (punctuation 3631 . 3632) (TEMPLATE 3623 . 3631) (punctuation 3047 . 3048) (number 3046 . 3047) (punctuation 3044 . 3045) (punctuation 3042 . 3043) (INT 3039 . 3042) (punctuation 3037 . 3038) (symbol 3032 . 3037) (punctuation 3031 . 3032) (punctuation 3030 . 3031) (punctuation 3029 . 3030) (symbol 3021 . 3029) (punctuation 3020 . 3021) (symbol 3013 . 3020) (punctuation 3012 . 3013) (punctuation 3011 . 3012) (symbol 3008 . 3011) (punctuation 3007 . 3008) (symbol 2996 . 3007) (punctuation 2985 . 2986) (symbol 2977 . 2985) (TYPENAME 2968 . 2976) (punctuation 2966 . 2967) (symbol 2953 . 2966) (TYPENAME 2944 . 2952) (punctuation 2943 . 2944) (TEMPLATE 2935 . 2943) (punctuation 925 . 926) (number 924 . 925) (punctuation 922 . 923) (punctuation 920 . 921) (INT 917 . 920) (punctuation 894 . 895) (symbol 889 . 894) (punctuation 888 . 889) (punctuation 887 . 888) (punctuation 886 . 887) (symbol 877 . 886) (punctuation 876 . 877) (punctuation 875 . 876) (symbol 862 . 875) (TYPENAME 853 . 861) (punctuation 851 . 852) (symbol 837 . 851) (punctuation 836 . 837) (symbol 829 . 836) (punctuation 828 . 829) (punctuation 827 . 828) (symbol 824 . 827) (symbol 820 . 823) (symbol 795 . 798) (symbol 789 . 794) (punctuation 788 . 789) (punctuation 787 . 788) (punctuation 786 . 787) (symbol 772 . 786) (punctuation 771 . 772) (symbol 758 . 771) (punctuation 757 . 758) (punctuation 756 . 757) (symbol 753 . 756) (punctuation 752 . 753) (symbol 741 . 752) (punctuation 730 . 731) (symbol 716 . 730) (TYPENAME 707 . 715) (punctuation 705 . 706) (symbol 692 . 705) (TYPENAME 683 . 691) (punctuation 682 . 683) (TEMPLATE 674 . 682) (symbol 9 . 13) (symbol 2 . 8) (punctuation 1 . 2)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("ciso646" include (:system-flag t) nil [15 33])
            ("iterator" include (:system-flag t) nil [50 69])
            ("tuple" include (:system-flag t) nil [84 100])
            ("type_traits" include (:system-flag t) nil [115 137])
            ("utility" include (:system-flag t) nil [212 230])
            ("valarray" include (:system-flag t) nil [263 282])
            ("vector" include (:system-flag t) nil [295 312])
            ("nlohmann/detail/meta.hpp" include (:system-flag t) nil [324 359])
            ("nlohmann/detail/value_t.hpp" include (:system-flag t) nil [360 398])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("external_constructor" type
                               (:template 
                                  ( ("value_t" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [498 544])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::boolean" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [546 836])
                            ("external_constructor" type
                               (:type "struct"
                                :members 
                                  ( ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [959 976])
                                            ("s" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [977 1019]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [900 1120])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1185 1202])
                                            ("" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1203 1237])
                                            ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1238 1240]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1126 1352]))                                  
                                :template-specifier 
                                  ( ("value_t::string" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [838 1355])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::number_float" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1357 1666])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::number_unsigned" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1668 1986])
                            ("external_constructor" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("value_t::number_integer" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1988 2303])
                            ("external_constructor" type
                               (:type "struct"
                                :members 
                                  ( ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2425 2442])
                                            ("arr" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2443 2486]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2366 2588])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2653 2670])
                                            ("" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2671 2704])
                                            ("" variable (:type ("arr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2705 2709]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2594 2822])
                                    ("construct" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3056 3073])
                                            ("arr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CompatibleArrayType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3074 3105]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [3034 3332])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3397 3414])
                                            ("arr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::vector" type
                                                     (:template-specifier 
                                                        ( ("bool" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3415 3444]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [3338 3699])
                                    ("construct" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3857 3874])
                                            ("arr" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("std::valarray" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [3875 3903]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [3835 4138]))                                  
                                :template-specifier 
                                  ( ("value_t::array" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2305 4141])
                            ("external_constructor" type
                               (:type "struct"
                                :members 
                                  ( ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4264 4281])
                                            ("obj" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :constant-flag t
                                                :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4282 4326]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [4205 4429])
                                    ("construct" function
                                       (:template 
                                          ( ("BasicJsonType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4494 4511])
                                            ("" variable
                                               (:reference 1
                                                :typemodifiers ("typename")
                                                :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4512 4546])
                                            ("" variable (:type ("obj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4547 4551]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [4435 4665])
                                    ("construct" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("j" variable
                                               (:reference 1
                                                :type ("BasicJsonType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4877 4894])
                                            ("obj" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("CompatibleObjectType" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4895 4927]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [4855 5158]))                                  
                                :template-specifier 
                                  ( ("value_t::object" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4143 5161])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5638 5655])
                                    ("s" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CompatibleString" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5656 5682]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [5625 5746])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5794 5811])
                                    ("" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5812 5846])
                                    ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5847 5849]))                                  )
                                (reparse-symbol namespacesubparts) [5748 5924])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7451 7468])
                                    ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("std::vector" type
                                             (:template-specifier 
                                                ( ("bool" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7469 7496]))                                  )
                                (reparse-symbol namespacesubparts) [7405 7559])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7856 7873])
                                    ("arr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CompatibleArrayType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7874 7905]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [7843 7970])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8107 8124])
                                    ("arr" variable (:type ("std::valarray" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [8125 8146]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [8094 8222])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8270 8287])
                                    ("" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::array_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8288 8321])
                                    ("" variable (:type ("arr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8322 8326]))                                  )
                                (reparse-symbol namespacesubparts) [8224 8402])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8583 8600])
                                    ("obj" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("CompatibleObjectType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8601 8633]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [8570 8699])
                            ("to_json" function
                               (:template 
                                  ( ("BasicJsonType" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8747 8764])
                                    ("" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :type ("BasicJsonType::object_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8765 8799])
                                    ("" variable (:type ("obj" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8800 8804]))                                  )
                                (reparse-symbol namespacesubparts) [8701 8881])
                            ("T" function (:type "int") (reparse-symbol namespacesubparts) [9024 9032])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9065 9082])
                                    ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9083 9091]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [9052 9160])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9226 9243])
                                    ("" variable
                                       (:constant-flag t
                                        :type ("std::pair" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9244 9260])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9260 9265])
                                    ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9270 9272]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [9213 9305])
                            ("to_json_tuple_impl" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9400 9417])
                                    ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Tuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9418 9433])
                                    ("" variable (:type ("index_sequence" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9434 9449])
                                    ("" variable (:type ("Idx" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9449 9453]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [9376 9492])
                            ("to_json" function
                               (:arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9558 9575])
                                    ("" variable
                                       (:constant-flag t
                                        :type ("std::tuple" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9576 9593])
                                    ("" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9593 9598])
                                    ("" variable (:type ("t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9603 9605]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [9545 9671])
                            ("to_json_fn" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [9695 9703])
                                    ("decltype" function
                                       (:arguments 
                                          ( ("" variable (:type ("to_json" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9897 9929])
                                            ("" variable (:type "void") (reparse-symbol arg-sub-list) [9931 9937]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [9888 9999])
                                    ("public" label nil (reparse-symbol classsubparts) [10579 10586])
                                    ("noexcept" function
                                       (:constant-flag t
                                        :arguments 
                                          ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10702 10788]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [10683 10867]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9673 10870]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [421 10872])
                    ("unnamed" type
                       (:members 
                          ( ("detail::static_const::value" variable (:type "int") (reparse-symbol namespacesubparts) [10967 11015]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [10923 11017]))                  
                :type "namespace")
                nil [400 11019]))          
      :file "to_json.hpp"
      :pointmax 11020
      :fsize 11019
      :lastmodtime '(23254 8838 645402 353000)
      :unmatched-syntax '((punctuation 10965 . 10966) (symbol 10957 . 10964) (punctuation 10955 . 10956) (symbol 10951 . 10955) (CONST 10945 . 10950) (symbol 10935 . 10944) (semantic-list 10710 . 10788) (semantic-list 10655 . 10682) (semantic-list 10653 . 10655) (OPERATOR 10645 . 10653) (punctuation 10676 . 10677) (VOID 10640 . 10644) (punctuation 10676 . 10677) (punctuation 10634 . 10635) (symbol 10633 . 10634) (TYPENAME 10624 . 10632) (punctuation 10622 . 10623) (symbol 10609 . 10622) (TYPENAME 10600 . 10608) (punctuation 10599 . 10600) (TEMPLATE 10591 . 10599) (punctuation 10676 . 10677) (semantic-list 10154 . 10575) (symbol 10141 . 10149) (CONST 10135 . 10140) (semantic-list 10063 . 10134) (symbol 10059 . 10063) (punctuation 10093 . 10094) (VOID 10054 . 10058) (punctuation 10093 . 10094) (punctuation 10048 . 10049) (symbol 10047 . 10048) (TYPENAME 10038 . 10046) (punctuation 10036 . 10037) (symbol 10023 . 10036) (TYPENAME 10014 . 10022) (punctuation 10013 . 10014) (TEMPLATE 10005 . 10013) (punctuation 10093 . 10094) (semantic-list 9935 . 9937) (semantic-list 9904 . 9929) (punctuation 9886 . 9887) (punctuation 9885 . 9886) (semantic-list 9836 . 9880) (symbol 9828 . 9836) (semantic-list 9845 . 9879) (CONST 9822 . 9827) (semantic-list 9845 . 9879) (semantic-list 9766 . 9821) (symbol 9762 . 9766) (punctuation 9787 . 9788) (symbol 9757 . 9761) (punctuation 9787 . 9788) (punctuation 9751 . 9752) (symbol 9750 . 9751) (TYPENAME 9741 . 9749) (punctuation 9739 . 9740) (symbol 9726 . 9739) (TYPENAME 9717 . 9725) (punctuation 9716 . 9717) (TEMPLATE 9708 . 9716) (punctuation 9787 . 9788) (punctuation 9601 . 9602) (punctuation 9600 . 9601) (punctuation 9599 . 9600) (punctuation 9598 . 9599) (punctuation 9597 . 9598) (punctuation 9592 . 9593) (punctuation 9543 . 9544) (symbol 9539 . 9543) (punctuation 9537 . 9538) (punctuation 9536 . 9537) (punctuation 9535 . 9536) (TYPENAME 9527 . 9535) (punctuation 9525 . 9526) (symbol 9512 . 9525) (TYPENAME 9503 . 9511) (punctuation 9502 . 9503) (TEMPLATE 9494 . 9502) (punctuation 9455 . 9456) (punctuation 9454 . 9455) (punctuation 9453 . 9454) (punctuation 9452 . 9453) (punctuation 9448 . 9449) (punctuation 9374 . 9375) (symbol 9371 . 9374) (punctuation 9369 . 9370) (punctuation 9368 . 9369) (punctuation 9367 . 9368) (symbol 9361 . 9367) (punctuation 9360 . 9361) (punctuation 9359 . 9360) (symbol 9356 . 9359) (punctuation 9354 . 9355) (symbol 9349 . 9354) (TYPENAME 9340 . 9348) (punctuation 9338 . 9339) (symbol 9325 . 9338) (TYPENAME 9316 . 9324) (punctuation 9315 . 9316) (TEMPLATE 9307 . 9315) (punctuation 9268 . 9269) (punctuation 9267 . 9268) (punctuation 9266 . 9267) (punctuation 9265 . 9266) (punctuation 9264 . 9265) (punctuation 9259 . 9260) (punctuation 9211 . 9212) (symbol 9207 . 9211) (punctuation 9205 . 9206) (punctuation 9204 . 9205) (punctuation 9203 . 9204) (TYPENAME 9195 . 9203) (punctuation 9193 . 9194) (symbol 9180 . 9193) (TYPENAME 9171 . 9179) (punctuation 9170 . 9171) (TEMPLATE 9162 . 9170) (semantic-list 9091 . 9094) (semantic-list 9085 . 9091) (punctuation 9050 . 9051) (number 9049 . 9050) (punctuation 9047 . 9048) (punctuation 9045 . 9046) (INT 9042 . 9045) (punctuation 9040 . 9041) (symbol 9035 . 9040) (punctuation 9034 . 9035) (punctuation 9033 . 9034) (punctuation 9032 . 9033) (punctuation 9027 . 9028) (punctuation 9022 . 9023) (symbol 9014 . 9022) (punctuation 9013 . 9014) (punctuation 9012 . 9013) (symbol 8999 . 9012) (TYPENAME 8990 . 8998) (punctuation 8989 . 8990) (symbol 8973 . 8989) (punctuation 8972 . 8973) (punctuation 8971 . 8972) (symbol 8968 . 8971) (symbol 8964 . 8967) (punctuation 8963 . 8964) (symbol 8952 . 8963) (punctuation 8941 . 8942) (symbol 8940 . 8941) (symbol 8933 . 8939) (punctuation 8932 . 8933) (punctuation 8931 . 8932) (symbol 8928 . 8931) (punctuation 8926 . 8927) (symbol 8925 . 8926) (TYPENAME 8916 . 8924) (punctuation 8914 . 8915) (symbol 8901 . 8914) (TYPENAME 8892 . 8900) (punctuation 8891 . 8892) (TEMPLATE 8883 . 8891) (punctuation 8798 . 8799) (punctuation 8568 . 8569) (number 8567 . 8568) (punctuation 8565 . 8566) (punctuation 8563 . 8564) (INT 8560 . 8563) (punctuation 8558 . 8559) (symbol 8553 . 8558) (punctuation 8552 . 8553) (punctuation 8551 . 8552) (punctuation 8550 . 8551) (symbol 8530 . 8550) (punctuation 8528 . 8529) (symbol 8515 . 8528) (punctuation 8514 . 8515) (symbol 8489 . 8514) (punctuation 8488 . 8489) (symbol 8477 . 8488) (punctuation 8466 . 8467) (symbol 8446 . 8466) (TYPENAME 8437 . 8445) (punctuation 8435 . 8436) (symbol 8422 . 8435) (TYPENAME 8413 . 8421) (punctuation 8412 . 8413) (TEMPLATE 8404 . 8412) (punctuation 8320 . 8321) (punctuation 8092 . 8093) (number 8091 . 8092) (punctuation 8089 . 8090) (punctuation 8087 . 8088) (INT 8084 . 8087) (punctuation 8082 . 8083) (symbol 8077 . 8082) (punctuation 8076 . 8077) (punctuation 8075 . 8076) (punctuation 8074 . 8075) (symbol 8061 . 8074) (punctuation 8059 . 8060) (symbol 8058 . 8059) (punctuation 8057 . 8058) (symbol 8043 . 8057) (punctuation 8042 . 8043) (punctuation 8041 . 8042) (symbol 8038 . 8041) (punctuation 8037 . 8038) (symbol 8026 . 8037) (punctuation 8015 . 8016) (symbol 8014 . 8015) (TYPENAME 8005 . 8013) (punctuation 8003 . 8004) (symbol 7990 . 8003) (TYPENAME 7981 . 7989) (punctuation 7980 . 7981) (TEMPLATE 7972 . 7980) (punctuation 7841 . 7842) (number 7840 . 7841) (punctuation 7838 . 7839) (punctuation 7836 . 7837) (INT 7833 . 7836) (punctuation 7810 . 7811) (symbol 7805 . 7810) (punctuation 7804 . 7805) (punctuation 7803 . 7804) (punctuation 7802 . 7803) (symbol 7783 . 7802) (punctuation 7781 . 7782) (symbol 7774 . 7781) (punctuation 7773 . 7774) (punctuation 7772 . 7773) (symbol 7759 . 7772) (TYPENAME 7750 . 7758) (punctuation 7749 . 7750) (symbol 7742 . 7749) (punctuation 7741 . 7742) (punctuation 7740 . 7741) (symbol 7737 . 7740) (symbol 7713 . 7715) (symbol 7707 . 7712) (punctuation 7706 . 7707) (punctuation 7705 . 7706) (punctuation 7704 . 7705) (symbol 7685 . 7704) (punctuation 7683 . 7684) (symbol 7670 . 7683) (punctuation 7669 . 7670) (symbol 7645 . 7669) (punctuation 7644 . 7645) (symbol 7633 . 7644) (punctuation 7622 . 7623) (symbol 7603 . 7622) (TYPENAME 7594 . 7602) (punctuation 7592 . 7593) (symbol 7579 . 7592) (TYPENAME 7570 . 7578) (punctuation 7569 . 7570) (TEMPLATE 7561 . 7569) (semantic-list 7227 . 7403) (symbol 7218 . 7226) (semantic-list 7187 . 7217) (symbol 7180 . 7187) (VOID 7175 . 7179) (punctuation 7173 . 7174) (number 7172 . 7173) (punctuation 7170 . 7171) (punctuation 7168 . 7169) (INT 7165 . 7168) (punctuation 7163 . 7164) (symbol 7158 . 7163) (punctuation 7157 . 7158) (punctuation 7156 . 7157) (punctuation 7155 . 7156) (symbol 7147 . 7155) (punctuation 7146 . 7147) (symbol 7139 . 7146) (punctuation 7138 . 7139) (punctuation 7137 . 7138) (symbol 7134 . 7137) (punctuation 7133 . 7134) (symbol 7122 . 7133) (punctuation 7111 . 7112) (symbol 7103 . 7111) (TYPENAME 7094 . 7102) (punctuation 7092 . 7093) (symbol 7079 . 7092) (TYPENAME 7070 . 7078) (punctuation 7069 . 7070) (TEMPLATE 7061 . 7069) (semantic-list 6931 . 7059) (symbol 6922 . 6930) (semantic-list 6870 . 6921) (symbol 6863 . 6870) (VOID 6858 . 6862) (punctuation 6856 . 6857) (number 6855 . 6856) (punctuation 6853 . 6854) (punctuation 6851 . 6852) (INT 6848 . 6851) (punctuation 6846 . 6847) (symbol 6841 . 6846) (punctuation 6840 . 6841) (punctuation 6839 . 6840) (punctuation 6838 . 6839) (symbol 6811 . 6838) (punctuation 6809 . 6810) (symbol 6793 . 6809) (punctuation 6792 . 6793) (punctuation 6791 . 6792) (symbol 6778 . 6791) (TYPENAME 6769 . 6777) (punctuation 6768 . 6769) (symbol 6742 . 6768) (punctuation 6741 . 6742) (symbol 6730 . 6741) (punctuation 6719 . 6720) (symbol 6692 . 6719) (TYPENAME 6683 . 6691) (punctuation 6681 . 6682) (symbol 6668 . 6681) (TYPENAME 6659 . 6667) (punctuation 6658 . 6659) (TEMPLATE 6650 . 6658) (semantic-list 6518 . 6648) (symbol 6509 . 6517) (semantic-list 6456 . 6508) (symbol 6449 . 6456) (VOID 6444 . 6448) (punctuation 6442 . 6443) (number 6441 . 6442) (punctuation 6439 . 6440) (punctuation 6437 . 6438) (INT 6434 . 6437) (punctuation 6432 . 6433) (symbol 6427 . 6432) (punctuation 6426 . 6427) (punctuation 6425 . 6426) (punctuation 6424 . 6425) (symbol 6396 . 6424) (punctuation 6394 . 6395) (symbol 6377 . 6394) (punctuation 6376 . 6377) (punctuation 6375 . 6376) (symbol 6362 . 6375) (TYPENAME 6353 . 6361) (punctuation 6352 . 6353) (symbol 6326 . 6352) (punctuation 6325 . 6326) (symbol 6314 . 6325) (punctuation 6303 . 6304) (symbol 6275 . 6303) (TYPENAME 6266 . 6274) (punctuation 6264 . 6265) (symbol 6251 . 6264) (TYPENAME 6242 . 6250) (punctuation 6241 . 6242) (TEMPLATE 6233 . 6241) (semantic-list 6107 . 6231) (symbol 6098 . 6106) (semantic-list 6064 . 6097) (symbol 6057 . 6064) (VOID 6052 . 6056) (punctuation 6050 . 6051) (number 6049 . 6050) (punctuation 6047 . 6048) (punctuation 6045 . 6046) (INT 6042 . 6045) (punctuation 6040 . 6041) (symbol 6035 . 6040) (punctuation 6034 . 6035) (punctuation 6033 . 6034) (punctuation 6032 . 6033) (symbol 6023 . 6032) (punctuation 6022 . 6023) (symbol 6005 . 6022) (punctuation 6004 . 6005) (punctuation 6003 . 6004) (symbol 6000 . 6003) (punctuation 5999 . 6000) (symbol 5988 . 5999) (punctuation 5977 . 5978) (symbol 5968 . 5977) (TYPENAME 5959 . 5967) (punctuation 5957 . 5958) (symbol 5944 . 5957) (TYPENAME 5935 . 5943) (punctuation 5934 . 5935) (TEMPLATE 5926 . 5934) (punctuation 5845 . 5846) (punctuation 5623 . 5624) (number 5622 . 5623) (punctuation 5620 . 5621) (punctuation 5618 . 5619) (INT 5615 . 5618) (punctuation 5613 . 5614) (symbol 5608 . 5613) (punctuation 5607 . 5608) (punctuation 5606 . 5607) (punctuation 5605 . 5606) (symbol 5589 . 5605) (punctuation 5587 . 5588) (symbol 5579 . 5587) (punctuation 5578 . 5579) (punctuation 5577 . 5578) (symbol 5564 . 5577) (TYPENAME 5555 . 5563) (punctuation 5554 . 5555) (symbol 5538 . 5554) (punctuation 5537 . 5538) (punctuation 5536 . 5537) (symbol 5533 . 5536) (punctuation 5532 . 5533) (symbol 5521 . 5532) (punctuation 5510 . 5511) (symbol 5494 . 5510) (TYPENAME 5485 . 5493) (punctuation 5483 . 5484) (symbol 5470 . 5483) (TYPENAME 5461 . 5469) (punctuation 5460 . 5461) (TEMPLATE 5452 . 5460) (semantic-list 5386 . 5450) (symbol 5377 . 5385) (semantic-list 5353 . 5376) (symbol 5346 . 5353) (VOID 5341 . 5345) (punctuation 5339 . 5340) (number 5338 . 5339) (punctuation 5336 . 5337) (punctuation 5334 . 5335) (INT 5331 . 5334) (punctuation 5329 . 5330) (symbol 5324 . 5329) (punctuation 5323 . 5324) (punctuation 5322 . 5323) (punctuation 5321 . 5322) (symbol 5312 . 5321) (punctuation 5311 . 5312) (punctuation 5310 . 5311) (symbol 5297 . 5310) (TYPENAME 5288 . 5296) (punctuation 5286 . 5287) (symbol 5285 . 5286) (punctuation 5284 . 5285) (symbol 5277 . 5284) (punctuation 5276 . 5277) (punctuation 5275 . 5276) (symbol 5272 . 5275) (punctuation 5271 . 5272) (symbol 5260 . 5271) (punctuation 5249 . 5250) (symbol 5248 . 5249) (TYPENAME 5239 . 5247) (punctuation 5237 . 5238) (symbol 5224 . 5237) (TYPENAME 5215 . 5223) (punctuation 5214 . 5215) (TEMPLATE 5206 . 5214) (punctuation 4849 . 4850) (number 4848 . 4849) (punctuation 4846 . 4847) (punctuation 4844 . 4845) (INT 4841 . 4844) (punctuation 4839 . 4840) (symbol 4834 . 4839) (punctuation 4833 . 4834) (punctuation 4832 . 4833) (punctuation 4831 . 4832) (symbol 4823 . 4831) (punctuation 4822 . 4823) (punctuation 4821 . 4822) (symbol 4808 . 4821) (TYPENAME 4799 . 4807) (punctuation 4797 . 4798) (symbol 4777 . 4797) (punctuation 4776 . 4777) (symbol 4769 . 4776) (punctuation 4768 . 4769) (punctuation 4767 . 4768) (symbol 4764 . 4767) (symbol 4760 . 4763) (punctuation 4759 . 4760) (symbol 4748 . 4759) (punctuation 4733 . 4734) (symbol 4713 . 4733) (TYPENAME 4704 . 4712) (punctuation 4702 . 4703) (symbol 4689 . 4702) (TYPENAME 4680 . 4688) (punctuation 4679 . 4680) (TEMPLATE 4671 . 4679) (punctuation 4545 . 4546) (punctuation 3829 . 3830) (number 3828 . 3829) (punctuation 3826 . 3827) (punctuation 3824 . 3825) (INT 3821 . 3824) (punctuation 3819 . 3820) (symbol 3814 . 3819) (punctuation 3813 . 3814) (punctuation 3812 . 3813) (punctuation 3811 . 3812) (symbol 3798 . 3811) (punctuation 3796 . 3797) (symbol 3795 . 3796) (punctuation 3794 . 3795) (symbol 3780 . 3794) (punctuation 3779 . 3780) (punctuation 3778 . 3779) (symbol 3775 . 3778) (punctuation 3774 . 3775) (symbol 3763 . 3774) (punctuation 3748 . 3749) (symbol 3747 . 3748) (TYPENAME 3738 . 3746) (punctuation 3736 . 3737) (symbol 3723 . 3736) (TYPENAME 3714 . 3722) (punctuation 3713 . 3714) (TEMPLATE 3705 . 3713) (punctuation 3028 . 3029) (number 3027 . 3028) (punctuation 3025 . 3026) (punctuation 3023 . 3024) (INT 3020 . 3023) (punctuation 2993 . 2994) (symbol 2988 . 2993) (punctuation 2987 . 2988) (punctuation 2986 . 2987) (punctuation 2985 . 2986) (symbol 2978 . 2985) (punctuation 2977 . 2978) (punctuation 2976 . 2977) (symbol 2963 . 2976) (TYPENAME 2954 . 2962) (punctuation 2952 . 2953) (symbol 2933 . 2952) (punctuation 2932 . 2933) (symbol 2925 . 2932) (punctuation 2924 . 2925) (punctuation 2923 . 2924) (symbol 2920 . 2923) (symbol 2916 . 2919) (punctuation 2915 . 2916) (symbol 2904 . 2915) (punctuation 2889 . 2890) (symbol 2870 . 2889) (TYPENAME 2861 . 2869) (punctuation 2859 . 2860) (symbol 2846 . 2859) (TYPENAME 2837 . 2845) (punctuation 2836 . 2837) (TEMPLATE 2828 . 2836) (punctuation 2703 . 2704) (semantic-list 2194 . 2300) (symbol 2181 . 2189) (semantic-list 2116 . 2180) (symbol 2107 . 2116) (VOID 2102 . 2106) (STATIC 2095 . 2101) (punctuation 2089 . 2090) (symbol 2076 . 2089) (TYPENAME 2067 . 2075) (punctuation 2066 . 2067) (TEMPLATE 2058 . 2066) (semantic-list 1876 . 1983) (symbol 1863 . 1871) (semantic-list 1797 . 1862) (symbol 1788 . 1797) (VOID 1783 . 1787) (STATIC 1776 . 1782) (punctuation 1770 . 1771) (symbol 1757 . 1770) (TYPENAME 1748 . 1756) (punctuation 1747 . 1748) (TEMPLATE 1739 . 1747) (semantic-list 1559 . 1663) (symbol 1546 . 1554) (semantic-list 1483 . 1545) (symbol 1474 . 1483) (VOID 1469 . 1473) (STATIC 1462 . 1468) (punctuation 1456 . 1457) (symbol 1443 . 1456) (TYPENAME 1434 . 1442) (punctuation 1433 . 1434) (TEMPLATE 1425 . 1433) (punctuation 1236 . 1237) (semantic-list 736 . 833) (symbol 723 . 731) (semantic-list 667 . 722) (symbol 658 . 667) (VOID 653 . 657) (STATIC 646 . 652) (punctuation 640 . 641) (symbol 627 . 640) (TYPENAME 618 . 626) (punctuation 617 . 618) (TEMPLATE 609 . 617) (symbol 9 . 13) (symbol 2 . 8) (punctuation 1 . 2)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("cassert" include (:system-flag t) nil [15 33])
            ("ciso646" include (:system-flag t) nil [44 62])
            ("cmath" include (:system-flag t) nil [79 95])
            ("cstdint" include (:system-flag t) nil [119 137])
            ("cstring" include (:system-flag t) nil [157 175])
            ("nlohmann" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("dtoa_impl" type
                               (:members 
                                  ( ("reinterpret_bits" function
                                       (:template 
                                          ( ("Target" type (:type "class") nil nil)
                                            ("Source" type (:type "class") nil nil))                                          
                                        :type ("Target" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("source" variable
                                               (:constant-flag t
                                                :type ("Source" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1120 1140]))                                          )
                                        (reparse-symbol namespacesubparts) [1052 1304])
                                    ("diyfp" type
                                       (:members 
                                          ( ("kPrecision" variable
                                               (:default-value "64"
                                                :type "int")
                                                (reparse-symbol classsubparts) [1353 1373])
                                            ("f" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1386 1397])
                                            ("e" variable (:type "int") (reparse-symbol classsubparts) [1402 1408])
                                            ("f" function
                                               (:constructor-flag t
                                                :type ("diyfp" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [1443 1456])
                                            ("f" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("f_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1511 1514]))                                                  
                                                :type ("diyfp" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [1509 1524]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1306 5032])
                                    ("boundaries" type
                                       (:members 
                                          ( ("w" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5058 5066])
                                            ("minus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5071 5083])
                                            ("plus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5088 5099]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [5034 5102])
                                    ("compute_boundaries" function
                                       (:template 
                                          ( ("FloatType" type (:type "class") nil nil))                                          
                                        :type ("boundaries" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("value" variable (:type ("FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5300 5316]))                                          )
                                        (reparse-symbol namespacesubparts) [5240 8066])
                                    ("kAlpha" variable
                                       (:default-value "-60"
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [9998 10015])
                                    ("kGamma" variable
                                       (:default-value "-32"
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [10026 10043])
                                    ("cached_power" type
                                       (:members 
                                          ( ("f" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10094 10105])
                                            ("e" variable (:type "int") (reparse-symbol classsubparts) [10110 10116])
                                            ("k" variable (:type "int") (reparse-symbol classsubparts) [10121 10127]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10045 10130])
                                    ("get_cached_power_for_binary_exponent" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("e" variable (:type "int") (reparse-symbol arg-sub-list) [10423 10429]))                                          
                                        :type ("cached_power" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [10366 16893])
                                    ("find_largest_pow10" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("n" variable
                                               (:constant-flag t
                                                :type ("uint32_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17039 17056])
                                            ("pow10" variable
                                               (:reference 1
                                                :type ("uint32_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17057 17073]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [17009 17904])
                                    ("grisu2_round" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [17931 17941])
                                            ("len" variable (:type "int") (reparse-symbol arg-sub-list) [17942 17950])
                                            ("dist" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17951 17965])
                                            ("delta" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17966 17981])
                                            ("rest" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18007 18021])
                                            ("ten_k" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18022 18037]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [17906 19254])
                                    ("grisu2_digit_gen" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("buffer" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [19435 19448])
                                            ("length" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [19449 19461])
                                            ("decimal_exponent" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [19462 19484])
                                            ("M_minus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19514 19528])
                                            ("w" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19529 19537])
                                            ("M_plus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19538 19551]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [19406 27741])
                                    ("grisu2" function
                                       (:typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [27913 27923])
                                            ("len" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [27924 27933])
                                            ("decimal_exponent" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [27934 27956])
                                            ("m_minus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27976 27990])
                                            ("v" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [27991 27999])
                                            ("m_plus" variable (:type ("diyfp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28000 28013]))                                          
                                        :type "void")
                                        (reparse-symbol namespacesubparts) [27894 30115])
                                    ("grisu2" function
                                       (:template 
                                          ( ("FloatType" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [30310 30320])
                                            ("len" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [30321 30330])
                                            ("decimal_exponent" variable
                                               (:reference 1
                                                :type "int")
                                                (reparse-symbol arg-sub-list) [30331 30353])
                                            ("value" variable (:type ("FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30354 30370]))                                          )
                                        (reparse-symbol namespacesubparts) [30268 31874])
                                    ("append_exponent" function
                                       (:pointer 1
                                        :typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [32043 32053])
                                            ("e" variable (:type "int") (reparse-symbol arg-sub-list) [32054 32060]))                                          
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [32014 32840])
                                    ("format_buffer" function
                                       (:pointer 1
                                        :typemodifiers ("inline")
                                        :arguments 
                                          ( ("buf" variable
                                               (:pointer 1
                                                :type "char")
                                                (reparse-symbol arg-sub-list) [33102 33112])
                                            ("len" variable (:type "int") (reparse-symbol arg-sub-list) [33113 33121])
                                            ("decimal_exponent" variable (:type "int") (reparse-symbol arg-sub-list) [33122 33143])
                                            ("min_exp" variable (:type "int") (reparse-symbol arg-sub-list) [33171 33183])
                                            ("max_exp" variable (:type "int") (reparse-symbol arg-sub-list) [33184 33196]))                                          
                                        :type "char")
                                        (reparse-symbol namespacesubparts) [33075 34728]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1029 34731])
                            ("to_chars" function
                               (:template 
                                  ( ("FloatType" type (:type "class") nil nil))                                  
                                :type "char"
                                :arguments 
                                  ( ("first" variable
                                       (:pointer 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [35222 35234])
                                    ("last" variable
                                       (:pointer 1
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [35235 35246])
                                    ("value" variable (:type ("FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35247 35263]))                                  
                                :pointer 1)
                                (reparse-symbol namespacesubparts) [35177 36750]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [217 36753]))                  
                :type "namespace")
                nil [196 36775]))          
      :file "to_chars.hpp"
      :pointmax 36798
      :fsize 36797
      :lastmodtime '(23254 8838 644453 673000)
      :unmatched-syntax '((symbol 10016 . 10025) (symbol 9988 . 9997) (semantic-list 4840 . 5029) (symbol 4827 . 4835) (semantic-list 4783 . 4826) (symbol 4771 . 4783) (symbol 4765 . 4770) (STATIC 4758 . 4764) (semantic-list 4460 . 4608) (symbol 4447 . 4455) (semantic-list 4437 . 4446) (symbol 4428 . 4437) (symbol 4422 . 4427) (STATIC 4415 . 4421) (semantic-list 1948 . 4313) (symbol 1935 . 1943) (semantic-list 1902 . 1934) (symbol 1899 . 1902) (symbol 1893 . 1898) (STATIC 1886 . 1892) (semantic-list 1667 . 1769) (symbol 1654 . 1662) (semantic-list 1621 . 1653) (symbol 1618 . 1621) (symbol 1612 . 1617) (STATIC 1605 . 1611) (punctuation 1507 . 1508) (symbol 1498 . 1506) (semantic-list 1476 . 1497) (symbol 1471 . 1476) (symbol 1461 . 1470) (number 1445 . 1446) (punctuation 1441 . 1442) (symbol 1432 . 1440) (semantic-list 1429 . 1431) (symbol 1424 . 1429) (symbol 1414 . 1423) (symbol 1343 . 1352) (STATIC 1336 . 1342) (symbol 9 . 13) (symbol 2 . 8) (punctuation 1 . 2))))
  :file "!Users!macbook!programming!_projects!pdf-something!dependencies!nlohmann!detail!conversions!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
