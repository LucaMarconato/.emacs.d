;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("_LIBCPP_BITSET" variable (:constant-flag t) nil [404 418])
            ("__config" include (:system-flag t) nil [4271 4290])
            ("__bit_reference" include (:system-flag t) nil [4291 4317])
            ("cstddef" include (:system-flag t) nil [4318 4336])
            ("climits" include (:system-flag t) nil [4337 4355])
            ("string" include (:system-flag t) nil [4356 4373])
            ("stdexcept" include (:system-flag t) nil [4374 4394])
            ("iosfwd" include (:system-flag t) nil [4395 4412])
            ("__functional_base" include (:system-flag t) nil [4413 4441])
            ("__undef_macros" include (:system-flag t) nil [4547 4572])
            ("__bitset" type
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "class"
                :prototype t)
                nil [4604 4660])
            ("__has_storage_type" type
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "struct"
                :members 
                  ( ("value" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "true"
                        :type "bool")
                        (reparse-symbol classsubparts) [4763 4794]))                  
                :template-specifier 
                  ( ("__bitset" type (:template-specifier 
                      ( ("_N_words" type nil nil nil)
                        ("_Size" type nil nil nil))                      ) nil nil))                  )
                nil [4662 4797])
            ("__bitset" type
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [4857 4864])
                    ("difference_type" type
                       (:typedef ("ptrdiff_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4869 4916])
                    ("size_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4921 4962])
                    ("__storage_type" type
                       (:typedef ("size_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [4967 5013])
                    ("protected" label nil (reparse-symbol classsubparts) [5014 5024])
                    ("__self" type
                       (:typedef ("__bitset" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5029 5053])
                    ("__storage_pointer" type
                       (:typedef ("__storage_type" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [5058 5107])
                    ("__const_storage_pointer" type
                       (:typedef ("__storage_type" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [5112 5167])
                    ("__bits_per_word" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "static_cast<unsigned>(sizeof(__storage_type) * CHAR_BIT)"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [5172 5269])
                    ("__bit_reference" friend nil (reparse-symbol classsubparts) [5275 5303])
                    ("__bit_const_reference" friend nil (reparse-symbol classsubparts) [5319 5353])
                    ("__bit_iterator" friend nil (reparse-symbol classsubparts) [5369 5396])
                    ("__bit_iterator" friend nil (reparse-symbol classsubparts) [5419 5446])
                    ("__bit_array" type
                       (:prototype t
                        :template-specifier 
                          ( ("__bitset" type nil nil nil))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [5475 5504])
                    ("__first_" variable
                       (:dereference 1
                        :type ("__storage_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5510 5544])
                    ("reference" type
                       (:typedef ("__bit_reference" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5550 5611])
                    ("const_reference" type
                       (:typedef ("__bit_const_reference" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5616 5683])
                    ("iterator" type
                       (:typedef ("__bit_iterator" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil)
                                  ("false" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5688 5748])
                    ("const_iterator" type
                       (:typedef ("__bit_iterator" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil)
                                  ("true" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5753 5819])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [5884 5894])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [5989 5999])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [6823 6833])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [6905 6915])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [6987 6997])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [7015 7025])
                    ("to_ulong" function
                       (:methodconst-flag t
                        :type "unsigned long")
                        (reparse-symbol classsubparts) [7056 7182])
                    ("to_ullong" function
                       (:methodconst-flag t
                        :type "unsigned long long")
                        (reparse-symbol classsubparts) [7213 7351])
                    ("_NOEXCEPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [7368 7384])
                    ("_NOEXCEPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [7400 7416])
                    ("_NOEXCEPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [7472 7488])
                    ("private" label nil (reparse-symbol classsubparts) [7489 7497])
                    ("to_ulong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7736 7747]))                          
                        :type "unsigned long")
                        (reparse-symbol classsubparts) [7713 7754])
                    ("to_ulong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7812 7822]))                          
                        :type "unsigned long")
                        (reparse-symbol classsubparts) [7789 7829])
                    ("to_ullong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7863 7874]))                          
                        :type "unsigned long long")
                        (reparse-symbol classsubparts) [7834 7881])
                    ("to_ullong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7945 7955]))                          
                        :type "unsigned long long")
                        (reparse-symbol classsubparts) [7916 7962])
                    ("to_ullong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8026 8036])
                            ("" variable (:type ("false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8037 8048]))                          
                        :type "unsigned long long")
                        (reparse-symbol classsubparts) [7997 8055])
                    ("to_ullong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :arguments 
                          ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8089 8099])
                            ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8100 8110]))                          
                        :type "unsigned long long")
                        (reparse-symbol classsubparts) [8060 8117]))                  )
                nil [4799 8120])
            ("to_ulong" function
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11514 11525]))                  
                :parent "__bitset"
                :methodconst-flag t)
                nil [11423 11787])
            ("to_ulong" function
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long"
                :arguments 
                  ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11887 11897]))                  
                :typemodifiers ("inline")
                :parent "__bitset"
                :methodconst-flag t)
                nil [11789 11931])
            ("to_ullong" function
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long long"
                :arguments 
                  ( ("" variable (:type ("false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12030 12041]))                  
                :parent "__bitset"
                :methodconst-flag t)
                nil [11933 12320])
            ("to_ullong" function
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long long"
                :arguments 
                  ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12426 12436]))                  
                :typemodifiers ("inline")
                :parent "__bitset"
                :methodconst-flag t)
                nil [12322 12561])
            ("to_ullong" function
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long long"
                :arguments 
                  ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12667 12677])
                    ("" variable (:type ("false_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12678 12689]))                  
                :typemodifiers ("inline")
                :parent "__bitset"
                :methodconst-flag t)
                nil [12563 12723])
            ("to_ullong" function
               (:template 
                  ( ("size_t" type (:typevar "_N_words") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long long"
                :arguments 
                  ( ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12822 12832])
                    ("" variable (:type ("true_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12833 12843]))                  
                :parent "__bitset"
                :methodconst-flag t)
                nil [12725 13109])
            ("__bitset" type
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [14417 14424])
                    ("difference_type" type
                       (:typedef ("ptrdiff_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [14429 14476])
                    ("size_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [14481 14522])
                    ("__storage_type" type
                       (:typedef ("size_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [14527 14573])
                    ("protected" label nil (reparse-symbol classsubparts) [14574 14584])
                    ("__self" type
                       (:typedef ("__bitset" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [14589 14613])
                    ("__storage_pointer" type
                       (:typedef ("__storage_type" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [14618 14667])
                    ("__const_storage_pointer" type
                       (:typedef ("__storage_type" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [14672 14727])
                    ("__bits_per_word" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "static_cast<unsigned>(sizeof(__storage_type) * CHAR_BIT)"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [14732 14829])
                    ("__bit_reference" friend nil (reparse-symbol classsubparts) [14835 14863])
                    ("__bit_const_reference" friend nil (reparse-symbol classsubparts) [14879 14913])
                    ("__bit_iterator" friend nil (reparse-symbol classsubparts) [14929 14956])
                    ("__bit_iterator" friend nil (reparse-symbol classsubparts) [14979 15006])
                    ("__bit_array" type
                       (:prototype t
                        :template-specifier 
                          ( ("__bitset" type nil nil nil))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [15035 15064])
                    ("__first_" variable (:type ("__storage_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15070 15094])
                    ("reference" type
                       (:typedef ("__bit_reference" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [15100 15161])
                    ("const_reference" type
                       (:typedef ("__bit_const_reference" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [15166 15233])
                    ("iterator" type
                       (:typedef ("__bit_iterator" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil)
                                  ("false" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [15238 15298])
                    ("const_iterator" type
                       (:typedef ("__bit_iterator" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil)
                                  ("true" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [15303 15369])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [15434 15444])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [15539 15549])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [16289 16299])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [16371 16381])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [16453 16463])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [16511 16521])
                    ("to_ulong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :type "unsigned long")
                        (reparse-symbol classsubparts) [16557 16588])
                    ("to_ullong" function
                       (:prototype-flag t
                        :methodconst-flag t
                        :type "unsigned long long")
                        (reparse-symbol classsubparts) [16623 16660])
                    ("_NOEXCEPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [16707 16723])
                    ("_NOEXCEPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [16769 16785])
                    ("_NOEXCEPT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [16842 16858]))                  
                :template-specifier (("1") ("_Size" type nil nil nil)))
                nil [14366 16861])
            ("__first_" function (:type "int") nil [16959 16974])
            ("__first_" function
               (:arguments 
                  ( ("" variable (:type ("_Size" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17112 17119])
                    ("" variable (:type ("__bits_per_word" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17121 17138])
                    ("" variable (:type ("static_cast" type
                         (:template-specifier 
                            ( ("__storage_type" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [17139 17171])
                    ("" variable (:type ("static_cast" type
                         (:template-specifier 
                            ( ("__storage_type" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [17207 17239]))                  
                :type "int")
                nil [17094 17286])
            ("to_ulong" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long"
                :typemodifiers ("inline")
                :parent "__bitset"
                :methodconst-flag t)
                nil [17886 17992])
            ("to_ullong" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long long"
                :typemodifiers ("inline")
                :parent "__bitset"
                :methodconst-flag t)
                nil [17994 18106])
            ("__bitset" type
               (:type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [18629 18636])
                    ("difference_type" type
                       (:typedef ("ptrdiff_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [18641 18688])
                    ("size_type" type
                       (:typedef ("size_t" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [18693 18734])
                    ("__storage_type" type
                       (:typedef ("size_type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [18739 18785])
                    ("protected" label nil (reparse-symbol classsubparts) [18786 18796])
                    ("__self" type
                       (:typedef ("__bitset" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [18801 18825])
                    ("__storage_pointer" type
                       (:typedef ("__storage_type" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [18830 18879])
                    ("__const_storage_pointer" type
                       (:typedef ("__storage_type" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [18884 18939])
                    ("__bits_per_word" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "static_cast<unsigned>(sizeof(__storage_type) * CHAR_BIT)"
                        :type "unsigned int")
                        (reparse-symbol classsubparts) [18944 19041])
                    ("__bit_reference" friend nil (reparse-symbol classsubparts) [19047 19075])
                    ("__bit_const_reference" friend nil (reparse-symbol classsubparts) [19091 19125])
                    ("__bit_iterator" friend nil (reparse-symbol classsubparts) [19141 19168])
                    ("__bit_iterator" friend nil (reparse-symbol classsubparts) [19191 19218])
                    ("__bit_array" type
                       (:prototype t
                        :template-specifier 
                          ( ("__bitset" type nil nil nil))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [19247 19276])
                    ("reference" type
                       (:typedef ("__bit_reference" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [19282 19343])
                    ("const_reference" type
                       (:typedef ("__bit_const_reference" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [19348 19415])
                    ("iterator" type
                       (:typedef ("__bit_iterator" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil)
                                  ("false" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [19420 19480])
                    ("const_iterator" type
                       (:typedef ("__bit_iterator" type
                             (:template-specifier 
                                ( ("__bitset" type nil nil nil)
                                  ("true" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [19485 19551])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [19616 19626])
                    ("_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [19717 19727])
                    ("to_ulong" function
                       (:methodconst-flag t
                        :type "unsigned long")
                        (reparse-symbol classsubparts) [20509 20551])
                    ("to_ullong" function
                       (:methodconst-flag t
                        :type "unsigned long long")
                        (reparse-symbol classsubparts) [20582 20630]))                  
                :template-specifier (("0") ("0")))
                nil [18594 20859])
            ("bitset" variable (:type ("_LIBCPP_TEMPLATE_VIS" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [21013 21071])
            ("hash" type
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type "struct"
                :template-specifier 
                  ( ("bitset" type (:template-specifier 
                      ( ("_Size" type nil nil nil))                      ) nil nil))                  
                :prototype t)
                nil [21072 21124])
            ("bitset" function
               (:template 
                  ( ("_CharT" type (:type "class") nil nil))                  
                :type ("bitset" type (:type "class") nil nil)
                :arguments 
                  ( ("__str" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("_CharT" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [25665 25685])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("basic_string" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [25708 25738])
                    ("__n" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25739 25753])
                    ("__zero" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25776 25790])
                    ("__one" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [25791 25804]))                  
                :parent "bitset"
                :constructor-flag t)
                nil [25620 26395])
            ("bitset" function
               (:template 
                  ( ("_CharT" type (:type "class") nil nil)
                    ("_Traits" type (:type "class") nil nil)
                    ("_Allocator" type (:type "class") nil nil))                  
                :type ("bitset" type (:type "class") nil nil)
                :arguments 
                  ( ("__str" variable
                       (:reference 1
                        :constant-flag t
                        :type ("basic_string" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil)
                                  ("_Allocator" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26499 26552])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("basic_string" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil)
                                  ("_Allocator" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26560 26609])
                    ("__pos" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26610 26626])
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("basic_string" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil)
                                  ("_Allocator" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [26634 26683])
                    ("__n" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26684 26698])
                    ("__zero" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26706 26720])
                    ("__one" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [26721 26734]))                  
                :parent "bitset"
                :constructor-flag t)
                nil [26421 27461])
            ("set" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type ("bitset" type
                     (:template-specifier 
                        ( ("_Size" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__pos" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28763 28776])
                    ("__val" variable (:type "bool") (reparse-symbol arg-sub-list) [28777 28788]))                  
                :parent "bitset")
                nil [28705 28929])
            ("reset" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type ("bitset" type
                     (:template-specifier 
                        ( ("_Size" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__pos" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29148 29161]))                  
                :parent "bitset")
                nil [29088 29304])
            ("flip" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type ("bitset" type
                     (:template-specifier 
                        ( ("_Size" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__pos" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29632 29645]))                  
                :parent "bitset")
                nil [29573 29814])
            ("to_ulong" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long"
                :typemodifiers ("inline")
                :parent "bitset"
                :methodconst-flag t)
                nil [29816 29925])
            ("to_ullong" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type "unsigned long long"
                :typemodifiers ("inline")
                :parent "bitset"
                :methodconst-flag t)
                nil [29927 30043])
            ("to_string" function
               (:template 
                  ( ("_CharT" type (:type "class") nil nil)
                    ("_Traits" type (:type "class") nil nil)
                    ("_Allocator" type (:type "class") nil nil))                  
                :type ("basic_string" type
                     (:template-specifier 
                        ( ("_CharT" type nil nil nil)
                          ("_Traits" type nil nil nil)
                          ("_Allocator" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__zero" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30193 30207])
                    ("__one" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30208 30221]))                  
                :parent "bitset"
                :methodconst-flag t)
                nil [30069 30438])
            ("to_string" function
               (:template 
                  ( ("_CharT" type (:type "class") nil nil)
                    ("_Traits" type (:type "class") nil nil))                  
                :type ("basic_string" type
                     (:template-specifier 
                        ( ("_CharT" type nil nil nil)
                          ("_Traits" type nil nil nil)
                          ("allocator" type (:template-specifier 
                            ( ("_CharT" type nil nil nil))                            ) nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__zero" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30585 30599])
                    ("__one" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30600 30613]))                  
                :typemodifiers ("inline")
                :parent "bitset"
                :methodconst-flag t)
                nil [30464 30697])
            ("to_string" function
               (:template 
                  ( ("_CharT" type (:type "class") nil nil))                  
                :type ("basic_string" type
                     (:template-specifier 
                        ( ("_CharT" type nil nil nil)
                          ("char_traits" type (:template-specifier 
                            ( ("_CharT" type nil nil nil))                            ) nil nil)
                          ("allocator" type (:template-specifier 
                            ( ("_CharT" type nil nil nil))                            ) nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__zero" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30841 30855])
                    ("__one" variable (:type ("_CharT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30856 30869]))                  
                :typemodifiers ("inline")
                :parent "bitset"
                :methodconst-flag t)
                nil [30723 30965])
            ("to_string" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type ("basic_string" type
                     (:template-specifier 
                        ( ("char" type nil nil nil)
                          ("char_traits" type (:template-specifier 
                            ( ("char" type nil nil nil))                            ) nil nil)
                          ("allocator" type (:template-specifier 
                            ( ("char" type nil nil nil))                            ) nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__zero" variable (:type "char") (reparse-symbol arg-sub-list) [31079 31091])
                    ("__one" variable (:type "char") (reparse-symbol arg-sub-list) [31092 31103]))                  
                :typemodifiers ("inline")
                :parent "bitset"
                :methodconst-flag t)
                nil [30967 31193])
            ("test" function
               (:template 
                  ( ("size_t" type (:typevar "_Size") nil nil))                  
                :type "bool"
                :arguments 
                  ( ("__pos" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31759 31772]))                  
                :parent "bitset"
                :methodconst-flag t)
                nil [31710 31901])
            ("unary_function" variable (:type "int") nil [33150 33324])
            (">>" function
               (:template 
                  ( ("_CharT" type (:type "class") nil nil)
                    ("_Traits" type (:type "class") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type ("basic_istream" type
                     (:template-specifier 
                        ( ("_CharT" type nil nil nil)
                          ("_Traits" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__is" variable
                       (:reference 1
                        :type ("basic_istream" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [33422 33459])
                    ("__x" variable
                       (:reference 1
                        :type ("bitset" type
                             (:template-specifier 
                                ( ("_Size" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [33460 33479]))                  
                :operator-flag t
                :prototype-flag t)
                nil [33326 33480])
            ("<<" function
               (:template 
                  ( ("_CharT" type (:type "class") nil nil)
                    ("_Traits" type (:type "class") nil nil)
                    ("size_t" type (:typevar "_Size") nil nil))                  
                :type ("basic_ostream" type
                     (:template-specifier 
                        ( ("_CharT" type nil nil nil)
                          ("_Traits" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :arguments 
                  ( ("__os" variable
                       (:reference 1
                        :type ("basic_ostream" type
                             (:template-specifier 
                                ( ("_CharT" type nil nil nil)
                                  ("_Traits" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [33578 33615])
                    ("__x" variable
                       (:reference 1
                        :constant-flag t
                        :type ("bitset" type
                             (:template-specifier 
                                ( ("_Size" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [33616 33641]))                  
                :operator-flag t
                :prototype-flag t)
                nil [33482 33642]))          
      :file "bitset"
      :pointmax 33717
      :fsize 33716
      :lastmodtime '(23193 7550 0 0)
      :unmatched-syntax '((symbol 33671 . 33689) (symbol 33644 . 33669) (PUBLIC 33143 . 33149) (punctuation 33141 . 33142) (punctuation 33135 . 33136) (punctuation 33133 . 33134) (symbol 33128 . 33133) (punctuation 33127 . 33128) (symbol 33121 . 33127) (punctuation 33120 . 33121) (symbol 33116 . 33120) (symbol 33095 . 33115) (STRUCT 33088 . 33094) (punctuation 33086 . 33087) (symbol 33081 . 33086) (symbol 33074 . 33080) (punctuation 33073 . 33074) (TEMPLATE 33064 . 33072) (semantic-list 32998 . 33062) (symbol 32988 . 32997) (semantic-list 32935 . 32987) (punctuation 32934 . 32935) (OPERATOR 32926 . 32934) (punctuation 32924 . 32925) (symbol 32919 . 32924) (punctuation 32918 . 32919) (symbol 32912 . 32918) (symbol 32886 . 32911) (INLINE 32879 . 32885) (punctuation 32877 . 32878) (symbol 32872 . 32877) (symbol 32865 . 32871) (punctuation 32864 . 32865) (TEMPLATE 32855 . 32863) (semantic-list 32789 . 32853) (symbol 32779 . 32788) (semantic-list 32726 . 32778) (punctuation 32725 . 32726) (OPERATOR 32717 . 32725) (punctuation 32715 . 32716) (symbol 32710 . 32715) (punctuation 32709 . 32710) (symbol 32703 . 32709) (symbol 32677 . 32702) (INLINE 32670 . 32676) (punctuation 32668 . 32669) (symbol 32663 . 32668) (symbol 32656 . 32662) (punctuation 32655 . 32656) (TEMPLATE 32646 . 32654) (semantic-list 32580 . 32644) (symbol 32570 . 32579) (semantic-list 32517 . 32569) (punctuation 32516 . 32517) (OPERATOR 32508 . 32516) (punctuation 32506 . 32507) (symbol 32501 . 32506) (punctuation 32500 . 32501) (symbol 32494 . 32500) (symbol 32468 . 32493) (INLINE 32461 . 32467) (punctuation 32459 . 32460) (symbol 32454 . 32459) (symbol 32447 . 32453) (punctuation 32446 . 32447) (TEMPLATE 32437 . 32445) (semantic-list 32373 . 32435) (symbol 32363 . 32372) (CONST 32357 . 32362) (semantic-list 32342 . 32356) (punctuation 32341 . 32342) (punctuation 32340 . 32341) (OPERATOR 32332 . 32340) (punctuation 32331 . 32332) (punctuation 32330 . 32331) (punctuation 32329 . 32330) (symbol 32324 . 32329) (punctuation 32323 . 32324) (symbol 32317 . 32323) (punctuation 32315 . 32316) (symbol 32310 . 32315) (punctuation 32309 . 32310) (symbol 32303 . 32309) (INLINE 32296 . 32302) (punctuation 32294 . 32295) (symbol 32289 . 32294) (symbol 32282 . 32288) (punctuation 32281 . 32282) (TEMPLATE 32272 . 32280) (semantic-list 32208 . 32270) (symbol 32198 . 32207) (CONST 32192 . 32197) (semantic-list 32177 . 32191) (punctuation 32176 . 32177) (punctuation 32175 . 32176) (OPERATOR 32167 . 32175) (punctuation 32166 . 32167) (punctuation 32165 . 32166) (punctuation 32164 . 32165) (symbol 32159 . 32164) (punctuation 32158 . 32159) (symbol 32152 . 32158) (punctuation 32150 . 32151) (symbol 32145 . 32150) (punctuation 32144 . 32145) (symbol 32138 . 32144) (INLINE 32131 . 32137) (punctuation 32129 . 32130) (symbol 32124 . 32129) (symbol 32117 . 32123) (punctuation 32116 . 32117) (TEMPLATE 32107 . 32115) (semantic-list 32078 . 32105) (symbol 32068 . 32077) (CONST 32062 . 32067) (semantic-list 32059 . 32061) (symbol 32056 . 32059) (punctuation 32055 . 32056) (punctuation 32054 . 32055) (punctuation 32053 . 32054) (symbol 32048 . 32053) (punctuation 32047 . 32048) (symbol 32041 . 32047) (BOOL 32036 . 32040) (INLINE 32029 . 32035) (punctuation 32027 . 32028) (symbol 32022 . 32027) (symbol 32015 . 32021) (punctuation 32014 . 32015) (TEMPLATE 32005 . 32013) (semantic-list 31976 . 32003) (symbol 31966 . 31975) (CONST 31960 . 31965) (semantic-list 31957 . 31959) (symbol 31954 . 31957) (punctuation 31953 . 31954) (punctuation 31952 . 31953) (punctuation 31951 . 31952) (symbol 31946 . 31951) (punctuation 31945 . 31946) (symbol 31939 . 31945) (BOOL 31934 . 31938) (INLINE 31927 . 31933) (punctuation 31925 . 31926) (symbol 31920 . 31925) (symbol 31913 . 31919) (punctuation 31912 . 31913) (TEMPLATE 31903 . 31911) (semantic-list 31675 . 31708) (symbol 31665 . 31674) (CONST 31659 . 31664) (semantic-list 31637 . 31658) (punctuation 31636 . 31637) (punctuation 31635 . 31636) (OPERATOR 31627 . 31635) (punctuation 31626 . 31627) (punctuation 31625 . 31626) (punctuation 31624 . 31625) (symbol 31619 . 31624) (punctuation 31618 . 31619) (symbol 31612 . 31618) (BOOL 31607 . 31611) (INLINE 31600 . 31606) (punctuation 31598 . 31599) (symbol 31593 . 31598) (symbol 31586 . 31592) (punctuation 31585 . 31586) (TEMPLATE 31576 . 31584) (semantic-list 31476 . 31574) (symbol 31466 . 31475) (CONST 31460 . 31465) (semantic-list 31438 . 31459) (punctuation 31437 . 31438) (punctuation 31436 . 31437) (OPERATOR 31428 . 31436) (punctuation 31427 . 31428) (punctuation 31426 . 31427) (punctuation 31425 . 31426) (symbol 31420 . 31425) (punctuation 31419 . 31420) (symbol 31413 . 31419) (BOOL 31408 . 31412) (INLINE 31401 . 31407) (punctuation 31399 . 31400) (symbol 31394 . 31399) (symbol 31387 . 31393) (punctuation 31386 . 31387) (TEMPLATE 31377 . 31385) (semantic-list 31272 . 31375) (symbol 31262 . 31271) (CONST 31256 . 31261) (semantic-list 31253 . 31255) (symbol 31248 . 31253) (punctuation 31247 . 31248) (punctuation 31246 . 31247) (punctuation 31245 . 31246) (symbol 31240 . 31245) (punctuation 31239 . 31240) (symbol 31233 . 31239) (symbol 31226 . 31232) (INLINE 31219 . 31225) (punctuation 31217 . 31218) (symbol 31212 . 31217) (symbol 31205 . 31211) (punctuation 31204 . 31205) (TEMPLATE 31195 . 31203) (punctuation 30721 . 30722) (symbol 30716 . 30721) (symbol 30709 . 30715) (punctuation 30708 . 30709) (TEMPLATE 30699 . 30707) (punctuation 30462 . 30463) (symbol 30457 . 30462) (symbol 30450 . 30456) (punctuation 30449 . 30450) (TEMPLATE 30440 . 30448) (punctuation 30067 . 30068) (symbol 30062 . 30067) (symbol 30055 . 30061) (punctuation 30054 . 30055) (TEMPLATE 30045 . 30053) (semantic-list 29532 . 29571) (symbol 29522 . 29531) (semantic-list 29519 . 29521) (symbol 29515 . 29519) (punctuation 29514 . 29515) (punctuation 29513 . 29514) (punctuation 29512 . 29513) (symbol 29507 . 29512) (punctuation 29506 . 29507) (symbol 29500 . 29506) (punctuation 29498 . 29499) (punctuation 29497 . 29498) (symbol 29492 . 29497) (punctuation 29491 . 29492) (symbol 29485 . 29491) (INLINE 29478 . 29484) (punctuation 29476 . 29477) (symbol 29471 . 29476) (symbol 29464 . 29470) (punctuation 29463 . 29464) (TEMPLATE 29454 . 29462) (semantic-list 29394 . 29452) (symbol 29384 . 29393) (CONST 29378 . 29383) (semantic-list 29375 . 29377) (punctuation 29374 . 29375) (OPERATOR 29366 . 29374) (punctuation 29365 . 29366) (punctuation 29364 . 29365) (punctuation 29363 . 29364) (symbol 29358 . 29363) (punctuation 29357 . 29358) (symbol 29351 . 29357) (punctuation 29349 . 29350) (symbol 29344 . 29349) (punctuation 29343 . 29344) (symbol 29337 . 29343) (INLINE 29330 . 29336) (punctuation 29328 . 29329) (symbol 29323 . 29328) (symbol 29316 . 29322) (punctuation 29315 . 29316) (TEMPLATE 29306 . 29314) (semantic-list 29010 . 29086) (symbol 29000 . 29009) (semantic-list 28997 . 28999) (symbol 28992 . 28997) (punctuation 28991 . 28992) (punctuation 28990 . 28991) (punctuation 28989 . 28990) (symbol 28984 . 28989) (punctuation 28983 . 28984) (symbol 28977 . 28983) (punctuation 28975 . 28976) (punctuation 28974 . 28975) (symbol 28969 . 28974) (punctuation 28968 . 28969) (symbol 28962 . 28968) (INLINE 28955 . 28961) (punctuation 28953 . 28954) (symbol 28948 . 28953) (symbol 28941 . 28947) (punctuation 28940 . 28941) (TEMPLATE 28931 . 28939) (semantic-list 28628 . 28703) (symbol 28618 . 28627) (semantic-list 28615 . 28617) (symbol 28612 . 28615) (punctuation 28611 . 28612) (punctuation 28610 . 28611) (punctuation 28609 . 28610) (symbol 28604 . 28609) (punctuation 28603 . 28604) (symbol 28597 . 28603) (punctuation 28595 . 28596) (punctuation 28594 . 28595) (symbol 28589 . 28594) (punctuation 28588 . 28589) (symbol 28582 . 28588) (INLINE 28575 . 28581) (punctuation 28573 . 28574) (symbol 28568 . 28573) (symbol 28561 . 28567) (punctuation 28560 . 28561) (TEMPLATE 28551 . 28559) (semantic-list 28332 . 28549) (symbol 28322 . 28331) (semantic-list 28307 . 28321) (punctuation 28306 . 28307) (punctuation 28305 . 28306) (punctuation 28304 . 28305) (OPERATOR 28296 . 28304) (punctuation 28295 . 28296) (punctuation 28294 . 28295) (punctuation 28293 . 28294) (symbol 28288 . 28293) (punctuation 28287 . 28288) (symbol 28281 . 28287) (punctuation 28279 . 28280) (punctuation 28278 . 28279) (symbol 28273 . 28278) (punctuation 28272 . 28273) (symbol 28266 . 28272) (punctuation 28264 . 28265) (symbol 28259 . 28264) (symbol 28252 . 28258) (punctuation 28251 . 28252) (TEMPLATE 28242 . 28250) (semantic-list 28018 . 28240) (symbol 28008 . 28017) (semantic-list 27993 . 28007) (punctuation 27992 . 27993) (punctuation 27991 . 27992) (punctuation 27990 . 27991) (OPERATOR 27982 . 27990) (punctuation 27981 . 27982) (punctuation 27980 . 27981) (punctuation 27979 . 27980) (symbol 27974 . 27979) (punctuation 27973 . 27974) (symbol 27967 . 27973) (punctuation 27965 . 27966) (punctuation 27964 . 27965) (symbol 27959 . 27964) (punctuation 27958 . 27959) (symbol 27952 . 27958) (punctuation 27950 . 27951) (symbol 27945 . 27950) (symbol 27938 . 27944) (punctuation 27937 . 27938) (TEMPLATE 27928 . 27936) (semantic-list 27876 . 27926) (symbol 27866 . 27875) (semantic-list 27844 . 27865) (punctuation 27843 . 27844) (punctuation 27842 . 27843) (OPERATOR 27834 . 27842) (punctuation 27833 . 27834) (punctuation 27832 . 27833) (punctuation 27831 . 27832) (symbol 27826 . 27831) (punctuation 27825 . 27826) (symbol 27819 . 27825) (punctuation 27817 . 27818) (punctuation 27816 . 27817) (symbol 27811 . 27816) (punctuation 27810 . 27811) (symbol 27804 . 27810) (INLINE 27797 . 27803) (punctuation 27795 . 27796) (symbol 27790 . 27795) (symbol 27783 . 27789) (punctuation 27782 . 27783) (TEMPLATE 27773 . 27781) (semantic-list 27721 . 27771) (symbol 27711 . 27720) (semantic-list 27689 . 27710) (punctuation 27688 . 27689) (punctuation 27687 . 27688) (OPERATOR 27679 . 27687) (punctuation 27678 . 27679) (punctuation 27677 . 27678) (punctuation 27676 . 27677) (symbol 27671 . 27676) (punctuation 27670 . 27671) (symbol 27664 . 27670) (punctuation 27662 . 27663) (punctuation 27661 . 27662) (symbol 27656 . 27661) (punctuation 27655 . 27656) (symbol 27649 . 27655) (INLINE 27642 . 27648) (punctuation 27640 . 27641) (symbol 27635 . 27640) (symbol 27628 . 27634) (punctuation 27627 . 27628) (TEMPLATE 27618 . 27626) (semantic-list 27566 . 27616) (symbol 27556 . 27565) (semantic-list 27534 . 27555) (punctuation 27533 . 27534) (punctuation 27532 . 27533) (OPERATOR 27524 . 27532) (punctuation 27523 . 27524) (punctuation 27522 . 27523) (punctuation 27521 . 27522) (symbol 27516 . 27521) (punctuation 27515 . 27516) (symbol 27509 . 27515) (punctuation 27507 . 27508) (punctuation 27506 . 27507) (symbol 27501 . 27506) (punctuation 27500 . 27501) (symbol 27494 . 27500) (INLINE 27487 . 27493) (punctuation 27485 . 27486) (symbol 27480 . 27485) (symbol 27473 . 27479) (punctuation 27472 . 27473) (TEMPLATE 27463 . 27471) (punctuation 26683 . 26684) (punctuation 26682 . 26683) (punctuation 26609 . 26610) (punctuation 26608 . 26609) (punctuation 26419 . 26420) (symbol 26414 . 26419) (symbol 26407 . 26413) (punctuation 26406 . 26407) (TEMPLATE 26397 . 26405) (punctuation 25738 . 25739) (punctuation 25737 . 25738) (punctuation 25618 . 25619) (symbol 25613 . 25618) (symbol 25606 . 25612) (punctuation 25605 . 25606) (TEMPLATE 25596 . 25604) (punctuation 25593 . 25594) (semantic-list 21278 . 25593) (punctuation 21276 . 21277) (symbol 21271 . 21276) (punctuation 21269 . 21270) (number 21268 . 21269) (punctuation 21266 . 21267) (semantic-list 21238 . 21265) (punctuation 21236 . 21237) (semantic-list 21224 . 21235) (punctuation 21222 . 21223) (number 21220 . 21221) (punctuation 21218 . 21219) (number 21216 . 21217) (punctuation 21214 . 21215) (punctuation 21213 . 21214) (symbol 21207 . 21212) (punctuation 21206 . 21207) (symbol 21198 . 21206) (PRIVATE 21190 . 21197) (punctuation 21188 . 21189) (symbol 21177 . 21183) (symbol 21156 . 21176) (CLASS 21150 . 21155) (punctuation 21148 . 21149) (symbol 21143 . 21148) (symbol 21136 . 21142) (punctuation 21135 . 21136) (TEMPLATE 21126 . 21134) (semantic-list 21008 . 21011) (symbol 20998 . 21007) (semantic-list 20977 . 20997) (symbol 20969 . 20977) (punctuation 20968 . 20969) (punctuation 20967 . 20968) (punctuation 20966 . 20967) (number 20965 . 20966) (punctuation 20963 . 20964) (number 20962 . 20963) (punctuation 20961 . 20962) (symbol 20953 . 20961) (symbol 20935 . 20952) (INLINE 20928 . 20934) (semantic-list 20923 . 20926) (symbol 20913 . 20922) (semantic-list 20910 . 20912) (symbol 20902 . 20910) (punctuation 20901 . 20902) (punctuation 20900 . 20901) (punctuation 20899 . 20900) (number 20898 . 20899) (punctuation 20896 . 20897) (number 20895 . 20896) (punctuation 20894 . 20895) (symbol 20886 . 20894) (symbol 20868 . 20885) (INLINE 20861 . 20867) (semantic-list 20845 . 20856) (symbol 20835 . 20844) (CONST 20829 . 20834) (semantic-list 20826 . 20828) (symbol 20815 . 20826) (symbol 20808 . 20814) (symbol 20782 . 20807) (semantic-list 20761 . 20776) (symbol 20751 . 20760) (CONST 20745 . 20750) (semantic-list 20742 . 20744) (symbol 20739 . 20742) (BOOL 20734 . 20738) (symbol 20708 . 20733) (semantic-list 20689 . 20703) (symbol 20679 . 20688) (CONST 20673 . 20678) (semantic-list 20670 . 20672) (symbol 20667 . 20670) (BOOL 20662 . 20666) (symbol 20636 . 20661) (symbol 20556 . 20581) (symbol 20483 . 20508) (semantic-list 20475 . 20477) (symbol 20465 . 20474) (semantic-list 20462 . 20464) (symbol 20458 . 20462) (VOID 20453 . 20457) (symbol 20427 . 20452) (semantic-list 20419 . 20421) (symbol 20409 . 20418) (semantic-list 20391 . 20408) (punctuation 20390 . 20391) (punctuation 20389 . 20390) (OPERATOR 20381 . 20389) (VOID 20376 . 20380) (symbol 20350 . 20375) (semantic-list 20343 . 20345) (symbol 20333 . 20342) (semantic-list 20315 . 20332) (punctuation 20314 . 20315) (punctuation 20313 . 20314) (OPERATOR 20305 . 20313) (VOID 20300 . 20304) (symbol 20274 . 20299) (semantic-list 20267 . 20269) (symbol 20257 . 20266) (semantic-list 20239 . 20256) (punctuation 20238 . 20239) (punctuation 20237 . 20238) (OPERATOR 20229 . 20237) (VOID 20224 . 20228) (symbol 20198 . 20223) (semantic-list 20162 . 20192) (symbol 20144 . 20153) (CONST 20138 . 20143) (semantic-list 20129 . 20137) (symbol 20118 . 20129) (symbol 20103 . 20117) (symbol 20077 . 20102) (semantic-list 20048 . 20072) (symbol 20030 . 20039) (semantic-list 20021 . 20029) (symbol 20010 . 20021) (symbol 20001 . 20009) (symbol 19975 . 20000) (semantic-list 19939 . 19970) (symbol 19921 . 19930) (CONST 19915 . 19920) (semantic-list 19906 . 19914) (symbol 19896 . 19906) (symbol 19880 . 19895) (symbol 19862 . 19879) (symbol 19836 . 19861) (semantic-list 19806 . 19831) (symbol 19788 . 19797) (semantic-list 19779 . 19787) (symbol 19769 . 19779) (symbol 19759 . 19768) (symbol 19733 . 19758) (semantic-list 19696 . 19716) (symbol 19688 . 19696) (symbol 19670 . 19687) (EXPLICIT 19661 . 19669) (symbol 19631 . 19656) (semantic-list 19613 . 19615) (symbol 19605 . 19613) (symbol 19587 . 19604) (symbol 19557 . 19582) (FRIEND 19240 . 19246) (punctuation 19234 . 19235) (punctuation 19233 . 19234) (symbol 19229 . 19233) (punctuation 19227 . 19228) (symbol 19219 . 19227) (punctuation 19218 . 19219) (punctuation 19185 . 19186) (punctuation 19184 . 19185) (symbol 19179 . 19184) (punctuation 19177 . 19178) (symbol 19169 . 19177) (punctuation 19168 . 19169) (punctuation 19135 . 19136) (punctuation 19134 . 19135) (symbol 19126 . 19134) (punctuation 19125 . 19126) (punctuation 19085 . 19086) (punctuation 19084 . 19085) (symbol 19076 . 19084) (punctuation 19075 . 19076) (semantic-list 18568 . 18592) (symbol 18558 . 18567) (CONST 18552 . 18557) (semantic-list 18549 . 18551) (symbol 18538 . 18549) (punctuation 18537 . 18538) (punctuation 18536 . 18537) (punctuation 18535 . 18536) (symbol 18530 . 18535) (punctuation 18528 . 18529) (number 18527 . 18528) (punctuation 18526 . 18527) (symbol 18518 . 18526) (symbol 18511 . 18517) (INLINE 18504 . 18510) (punctuation 18502 . 18503) (symbol 18497 . 18502) (symbol 18490 . 18496) (punctuation 18489 . 18490) (TEMPLATE 18480 . 18488) (semantic-list 18374 . 18478) (symbol 18364 . 18373) (CONST 18358 . 18363) (semantic-list 18355 . 18357) (symbol 18352 . 18355) (punctuation 18351 . 18352) (punctuation 18350 . 18351) (punctuation 18349 . 18350) (symbol 18344 . 18349) (punctuation 18342 . 18343) (number 18341 . 18342) (punctuation 18340 . 18341) (symbol 18332 . 18340) (BOOL 18327 . 18331) (INLINE 18320 . 18326) (punctuation 18318 . 18319) (symbol 18313 . 18318) (symbol 18306 . 18312) (punctuation 18305 . 18306) (TEMPLATE 18296 . 18304) (semantic-list 18186 . 18294) (symbol 18176 . 18185) (CONST 18170 . 18175) (semantic-list 18167 . 18169) (symbol 18164 . 18167) (punctuation 18163 . 18164) (punctuation 18162 . 18163) (punctuation 18161 . 18162) (symbol 18156 . 18161) (punctuation 18154 . 18155) (number 18153 . 18154) (punctuation 18152 . 18153) (symbol 18144 . 18152) (BOOL 18139 . 18143) (INLINE 18132 . 18138) (punctuation 18130 . 18131) (symbol 18125 . 18130) (symbol 18118 . 18124) (punctuation 18117 . 18118) (TEMPLATE 18108 . 18116) (semantic-list 17760 . 17884) (symbol 17750 . 17759) (semantic-list 17747 . 17749) (symbol 17743 . 17747) (punctuation 17742 . 17743) (punctuation 17741 . 17742) (punctuation 17740 . 17741) (symbol 17735 . 17740) (punctuation 17733 . 17734) (number 17732 . 17733) (punctuation 17731 . 17732) (symbol 17723 . 17731) (VOID 17718 . 17722) (INLINE 17711 . 17717) (punctuation 17709 . 17710) (symbol 17704 . 17709) (symbol 17697 . 17703) (punctuation 17696 . 17697) (TEMPLATE 17687 . 17695) (semantic-list 17652 . 17685) (symbol 17642 . 17651) (semantic-list 17620 . 17641) (punctuation 17619 . 17620) (punctuation 17618 . 17619) (OPERATOR 17610 . 17618) (punctuation 17609 . 17610) (punctuation 17608 . 17609) (punctuation 17607 . 17608) (symbol 17602 . 17607) (punctuation 17600 . 17601) (number 17599 . 17600) (punctuation 17598 . 17599) (symbol 17590 . 17598) (VOID 17585 . 17589) (INLINE 17578 . 17584) (punctuation 17576 . 17577) (symbol 17571 . 17576) (symbol 17564 . 17570) (punctuation 17563 . 17564) (TEMPLATE 17554 . 17562) (semantic-list 17519 . 17552) (symbol 17509 . 17518) (semantic-list 17487 . 17508) (punctuation 17486 . 17487) (punctuation 17485 . 17486) (OPERATOR 17477 . 17485) (punctuation 17476 . 17477) (punctuation 17475 . 17476) (punctuation 17474 . 17475) (symbol 17469 . 17474) (punctuation 17467 . 17468) (number 17466 . 17467) (punctuation 17465 . 17466) (symbol 17457 . 17465) (VOID 17452 . 17456) (INLINE 17445 . 17451) (punctuation 17443 . 17444) (symbol 17438 . 17443) (symbol 17431 . 17437) (punctuation 17430 . 17431) (TEMPLATE 17421 . 17429) (semantic-list 17386 . 17419) (symbol 17376 . 17385) (semantic-list 17354 . 17375) (punctuation 17353 . 17354) (punctuation 17352 . 17353) (OPERATOR 17344 . 17352) (punctuation 17343 . 17344) (punctuation 17342 . 17343) (punctuation 17341 . 17342) (symbol 17336 . 17341) (punctuation 17334 . 17335) (number 17333 . 17334) (punctuation 17332 . 17333) (symbol 17324 . 17332) (VOID 17319 . 17323) (INLINE 17312 . 17318) (punctuation 17310 . 17311) (symbol 17305 . 17310) (symbol 17298 . 17304) (punctuation 17297 . 17298) (TEMPLATE 17288 . 17296) (semantic-list 17242 . 17276) (punctuation 17240 . 17241) (semantic-list 17234 . 17239) (punctuation 17205 . 17206) (semantic-list 17166 . 17171) (punctuation 17137 . 17138) (punctuation 17119 . 17120) (punctuation 17118 . 17119) (punctuation 17092 . 17093) (symbol 17078 . 17087) (semantic-list 17053 . 17077) (symbol 17045 . 17053) (punctuation 17044 . 17045) (punctuation 17043 . 17044) (punctuation 17042 . 17043) (symbol 17037 . 17042) (punctuation 17035 . 17036) (number 17034 . 17035) (punctuation 17033 . 17034) (symbol 17025 . 17033) (symbol 17007 . 17024) (INLINE 17000 . 17006) (punctuation 16998 . 16999) (symbol 16993 . 16998) (symbol 16986 . 16992) (punctuation 16985 . 16986) (TEMPLATE 16976 . 16984) (number 16968 . 16969) (punctuation 16957 . 16958) (symbol 16943 . 16952) (semantic-list 16940 . 16942) (symbol 16932 . 16940) (punctuation 16931 . 16932) (punctuation 16930 . 16931) (punctuation 16929 . 16930) (symbol 16924 . 16929) (punctuation 16922 . 16923) (number 16921 . 16922) (punctuation 16920 . 16921) (symbol 16912 . 16920) (symbol 16894 . 16911) (INLINE 16887 . 16893) (punctuation 16885 . 16886) (symbol 16880 . 16885) (symbol 16873 . 16879) (punctuation 16872 . 16873) (TEMPLATE 16863 . 16871) (semantic-list 16839 . 16841) (symbol 16828 . 16839) (symbol 16821 . 16827) (symbol 16791 . 16816) (semantic-list 16766 . 16768) (symbol 16763 . 16766) (BOOL 16758 . 16762) (symbol 16728 . 16753) (semantic-list 16704 . 16706) (symbol 16701 . 16704) (BOOL 16696 . 16700) (symbol 16666 . 16691) (symbol 16593 . 16618) (symbol 16527 . 16552) (semantic-list 16508 . 16510) (symbol 16504 . 16508) (VOID 16499 . 16503) (symbol 16469 . 16494) (semantic-list 16431 . 16452) (punctuation 16430 . 16431) (punctuation 16429 . 16430) (OPERATOR 16421 . 16429) (VOID 16416 . 16420) (symbol 16386 . 16411) (semantic-list 16349 . 16370) (punctuation 16348 . 16349) (punctuation 16347 . 16348) (OPERATOR 16339 . 16347) (VOID 16334 . 16338) (symbol 16304 . 16329) (semantic-list 16267 . 16288) (punctuation 16266 . 16267) (punctuation 16265 . 16266) (OPERATOR 16257 . 16265) (VOID 16252 . 16256) (symbol 16222 . 16247) (semantic-list 16130 . 16216) (symbol 16112 . 16121) (CONST 16106 . 16111) (semantic-list 16091 . 16105) (symbol 16080 . 16091) (symbol 16065 . 16079) (symbol 16039 . 16064) (semantic-list 15954 . 16034) (symbol 15936 . 15945) (semantic-list 15921 . 15935) (symbol 15910 . 15921) (symbol 15901 . 15909) (symbol 15875 . 15900) (semantic-list 15806 . 15870) (symbol 15788 . 15797) (CONST 15782 . 15787) (semantic-list 15767 . 15781) (symbol 15757 . 15767) (symbol 15741 . 15756) (symbol 15723 . 15740) (symbol 15697 . 15722) (semantic-list 15634 . 15692) (symbol 15616 . 15625) (semantic-list 15601 . 15615) (symbol 15591 . 15601) (symbol 15581 . 15590) (symbol 15555 . 15580) (semantic-list 15514 . 15538) (symbol 15506 . 15514) (symbol 15488 . 15505) (EXPLICIT 15479 . 15487) (symbol 15449 . 15474) (semantic-list 15431 . 15433) (symbol 15423 . 15431) (symbol 15405 . 15422) (symbol 15375 . 15400) (FRIEND 15028 . 15034) (punctuation 15022 . 15023) (punctuation 15021 . 15022) (symbol 15017 . 15021) (punctuation 15015 . 15016) (symbol 15007 . 15015) (punctuation 15006 . 15007) (punctuation 14973 . 14974) (punctuation 14972 . 14973) (symbol 14967 . 14972) (punctuation 14965 . 14966) (symbol 14957 . 14965) (punctuation 14956 . 14957) (punctuation 14923 . 14924) (punctuation 14922 . 14923) (symbol 14914 . 14922) (punctuation 14913 . 14914) (punctuation 14873 . 14874) (punctuation 14872 . 14873) (symbol 14864 . 14872) (punctuation 14863 . 14864) (semantic-list 14244 . 14364) (symbol 14234 . 14243) (CONST 14228 . 14233) (semantic-list 14225 . 14227) (symbol 14214 . 14225) (punctuation 14213 . 14214) (punctuation 14212 . 14213) (punctuation 14211 . 14212) (symbol 14206 . 14211) (punctuation 14204 . 14205) (symbol 14196 . 14204) (punctuation 14195 . 14196) (symbol 14187 . 14195) (symbol 14180 . 14186) (INLINE 14173 . 14179) (punctuation 14171 . 14172) (symbol 14166 . 14171) (symbol 14159 . 14165) (punctuation 14157 . 14158) (symbol 14149 . 14157) (symbol 14142 . 14148) (punctuation 14141 . 14142) (TEMPLATE 14132 . 14140) (semantic-list 13718 . 14130) (symbol 13708 . 13717) (CONST 13702 . 13707) (semantic-list 13699 . 13701) (symbol 13696 . 13699) (punctuation 13695 . 13696) (punctuation 13694 . 13695) (punctuation 13693 . 13694) (symbol 13688 . 13693) (punctuation 13686 . 13687) (symbol 13678 . 13686) (punctuation 13677 . 13678) (symbol 13669 . 13677) (BOOL 13664 . 13668) (punctuation 13662 . 13663) (symbol 13657 . 13662) (symbol 13650 . 13656) (punctuation 13648 . 13649) (symbol 13640 . 13648) (symbol 13633 . 13639) (punctuation 13632 . 13633) (TEMPLATE 13623 . 13631) (semantic-list 13206 . 13621) (symbol 13196 . 13205) (CONST 13190 . 13195) (semantic-list 13187 . 13189) (symbol 13184 . 13187) (punctuation 13183 . 13184) (punctuation 13182 . 13183) (punctuation 13181 . 13182) (symbol 13176 . 13181) (punctuation 13174 . 13175) (symbol 13166 . 13174) (punctuation 13165 . 13166) (symbol 13157 . 13165) (BOOL 13152 . 13156) (punctuation 13150 . 13151) (symbol 13145 . 13150) (symbol 13138 . 13144) (punctuation 13136 . 13137) (symbol 13128 . 13136) (symbol 13121 . 13127) (punctuation 13120 . 13121) (TEMPLATE 13111 . 13119) (semantic-list 11012 . 11421) (symbol 11002 . 11011) (semantic-list 10999 . 11001) (symbol 10995 . 10999) (punctuation 10994 . 10995) (punctuation 10993 . 10994) (punctuation 10992 . 10993) (symbol 10987 . 10992) (punctuation 10985 . 10986) (symbol 10977 . 10985) (punctuation 10976 . 10977) (symbol 10968 . 10976) (VOID 10963 . 10967) (punctuation 10961 . 10962) (symbol 10956 . 10961) (symbol 10949 . 10955) (punctuation 10947 . 10948) (symbol 10939 . 10947) (symbol 10932 . 10938) (punctuation 10931 . 10932) (TEMPLATE 10922 . 10930) (semantic-list 10822 . 10920) (symbol 10812 . 10821) (semantic-list 10790 . 10811) (punctuation 10789 . 10790) (punctuation 10788 . 10789) (OPERATOR 10780 . 10788) (punctuation 10779 . 10780) (punctuation 10778 . 10779) (punctuation 10777 . 10778) (symbol 10772 . 10777) (punctuation 10770 . 10771) (symbol 10762 . 10770) (punctuation 10761 . 10762) (symbol 10753 . 10761) (VOID 10748 . 10752) (INLINE 10741 . 10747) (punctuation 10739 . 10740) (symbol 10734 . 10739) (symbol 10727 . 10733) (punctuation 10725 . 10726) (symbol 10717 . 10725) (symbol 10710 . 10716) (punctuation 10709 . 10710) (TEMPLATE 10700 . 10708) (semantic-list 10600 . 10698) (symbol 10590 . 10599) (semantic-list 10568 . 10589) (punctuation 10567 . 10568) (punctuation 10566 . 10567) (OPERATOR 10558 . 10566) (punctuation 10557 . 10558) (punctuation 10556 . 10557) (punctuation 10555 . 10556) (symbol 10550 . 10555) (punctuation 10548 . 10549) (symbol 10540 . 10548) (punctuation 10539 . 10540) (symbol 10531 . 10539) (VOID 10526 . 10530) (INLINE 10519 . 10525) (punctuation 10517 . 10518) (symbol 10512 . 10517) (symbol 10505 . 10511) (punctuation 10503 . 10504) (symbol 10495 . 10503) (symbol 10488 . 10494) (punctuation 10487 . 10488) (TEMPLATE 10478 . 10486) (semantic-list 10378 . 10476) (symbol 10368 . 10377) (semantic-list 10346 . 10367) (punctuation 10345 . 10346) (punctuation 10344 . 10345) (OPERATOR 10336 . 10344) (punctuation 10335 . 10336) (punctuation 10334 . 10335) (punctuation 10333 . 10334) (symbol 10328 . 10333) (punctuation 10326 . 10327) (symbol 10318 . 10326) (punctuation 10317 . 10318) (symbol 10309 . 10317) (VOID 10304 . 10308) (INLINE 10297 . 10303) (punctuation 10295 . 10296) (symbol 10290 . 10295) (symbol 10283 . 10289) (punctuation 10281 . 10282) (symbol 10273 . 10281) (symbol 10266 . 10272) (punctuation 10265 . 10266) (TEMPLATE 10256 . 10264) (semantic-list 10120 . 10254) (symbol 10097 . 10105) (symbol 10092 . 10096) (symbol 10089 . 10091) (symbol 10082 . 10088) (symbol 10077 . 10081) (symbol 10073 . 10076) (symbol 10069 . 10072) (symbol 10057 . 10068) (symbol 10052 . 10056) (symbol 10046 . 10051) (punctuation 10045 . 10046) (symbol 9667 . 9676) (semantic-list 9642 . 9666) (symbol 9634 . 9642) (punctuation 9633 . 9634) (punctuation 9632 . 9633) (punctuation 9631 . 9632) (symbol 9626 . 9631) (punctuation 9624 . 9625) (symbol 9616 . 9624) (punctuation 9615 . 9616) (symbol 9607 . 9615) (symbol 9589 . 9606) (INLINE 9582 . 9588) (punctuation 9580 . 9581) (symbol 9575 . 9580) (symbol 9568 . 9574) (punctuation 9566 . 9567) (symbol 9558 . 9566) (symbol 9551 . 9557) (punctuation 9550 . 9551) (TEMPLATE 9541 . 9549) (semantic-list 8288 . 8382) (semantic-list 8277 . 8280) (symbol 8269 . 8277) (punctuation 8267 . 8268) (symbol 8226 . 8235) (semantic-list 8223 . 8225) (symbol 8215 . 8223) (punctuation 8214 . 8215) (punctuation 8213 . 8214) (punctuation 8212 . 8213) (symbol 8207 . 8212) (punctuation 8205 . 8206) (symbol 8197 . 8205) (punctuation 8196 . 8197) (symbol 8188 . 8196) (symbol 8170 . 8187) (INLINE 8163 . 8169) (punctuation 8161 . 8162) (symbol 8156 . 8161) (symbol 8149 . 8155) (punctuation 8147 . 8148) (symbol 8139 . 8147) (symbol 8132 . 8138) (punctuation 8131 . 8132) (TEMPLATE 8122 . 8130) (symbol 7967 . 7992) (symbol 7886 . 7911) (symbol 7759 . 7784) (semantic-list 7469 . 7471) (symbol 7458 . 7469) (symbol 7451 . 7457) (symbol 7421 . 7446) (semantic-list 7397 . 7399) (symbol 7394 . 7397) (BOOL 7389 . 7393) (semantic-list 7365 . 7367) (symbol 7362 . 7365) (BOOL 7357 . 7361) (symbol 7187 . 7212) (symbol 7030 . 7055) (semantic-list 7012 . 7014) (symbol 7008 . 7012) (VOID 7003 . 7007) (semantic-list 6965 . 6986) (punctuation 6964 . 6965) (punctuation 6963 . 6964) (OPERATOR 6955 . 6963) (VOID 6950 . 6954) (symbol 6920 . 6945) (semantic-list 6883 . 6904) (punctuation 6882 . 6883) (punctuation 6881 . 6882) (OPERATOR 6873 . 6881) (VOID 6868 . 6872) (symbol 6838 . 6863) (semantic-list 6801 . 6822) (punctuation 6800 . 6801) (punctuation 6799 . 6800) (OPERATOR 6791 . 6799) (VOID 6786 . 6790) (symbol 6756 . 6781) (semantic-list 6665 . 6750) (symbol 6647 . 6656) (CONST 6641 . 6646) (semantic-list 6626 . 6640) (symbol 6615 . 6626) (symbol 6600 . 6614) (symbol 6574 . 6599) (semantic-list 6490 . 6569) (symbol 6472 . 6481) (semantic-list 6457 . 6471) (symbol 6446 . 6457) (symbol 6437 . 6445) (symbol 6411 . 6436) (semantic-list 6299 . 6406) (symbol 6281 . 6290) (CONST 6275 . 6280) (semantic-list 6260 . 6274) (symbol 6250 . 6260) (symbol 6234 . 6249) (symbol 6216 . 6233) (symbol 6190 . 6215) (semantic-list 6084 . 6185) (symbol 6066 . 6075) (semantic-list 6051 . 6065) (symbol 6041 . 6051) (symbol 6031 . 6040) (symbol 6005 . 6030) (semantic-list 5964 . 5988) (symbol 5956 . 5964) (symbol 5938 . 5955) (EXPLICIT 5929 . 5937) (symbol 5899 . 5924) (semantic-list 5881 . 5883) (symbol 5873 . 5881) (symbol 5855 . 5872) (symbol 5825 . 5850) (FRIEND 5468 . 5474) (punctuation 5462 . 5463) (punctuation 5461 . 5462) (symbol 5457 . 5461) (punctuation 5455 . 5456) (symbol 5447 . 5455) (punctuation 5446 . 5447) (punctuation 5413 . 5414) (punctuation 5412 . 5413) (symbol 5407 . 5412) (punctuation 5405 . 5406) (symbol 5397 . 5405) (punctuation 5396 . 5397) (punctuation 5363 . 5364) (punctuation 5362 . 5363) (symbol 5354 . 5362) (punctuation 5353 . 5354) (punctuation 5313 . 5314) (punctuation 5312 . 5313) (symbol 5304 . 5312) (punctuation 5303 . 5304) (symbol 4575 . 4602) (symbol 4527 . 4546) (symbol 4505 . 4518) (symbol 4501 . 4504) (symbol 4494 . 4500) (punctuation 4493 . 4494))
      :lexical-table 
        '(("_LIBCPP_BITSET")
          )
)
    (semanticdb-table "semanticdb-table"
      :file "__config"
      :fsize 41105
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "__bit_reference"
      :fsize 52074
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "cstddef"
      :fsize 2425
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "climits"
      :fsize 894
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "string"
      :fsize 153778
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "stdexcept"
      :fsize 6566
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "iosfwd"
      :fsize 7871
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "__functional_base"
      :fsize 18034
      :lastmodtime '(23193 7550 0 0))
    (semanticdb-table "semanticdb-table"
      :file "__undef_macros"
      :fsize 1019
      :lastmodtime '(23193 7550 0 0)))
  :file "!usr!local!Cellar!llvm!6.0.0!include!c++!v1!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
