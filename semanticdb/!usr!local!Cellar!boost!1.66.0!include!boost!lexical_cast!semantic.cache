;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_LEXICAL_CAST_BAD_LEXICAL_CAST_HPP" variable (:constant-flag t) nil [864 903])
            ("boost/config.hpp" include (:system-flag t) nil [905 932])
            ("typeinfo" include (:system-flag t) nil [986 1005])
            ("exception" include (:system-flag t) nil [1006 1026])
            ("boost/throw_exception.hpp" include (:system-flag t) nil [1027 1063])
            ("boost" type
               (:members 
                  ( ("std::bad_cast" variable (:type "int") (reparse-symbol namespacesubparts) [1395 2594])
                    ("conversion" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("throw_bad_cast" function
                                       (:template 
                                          ( ("S" type (:type "class") nil nil)
                                            ("T" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [2820 2972]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [2623 2985]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2600 2986]))                  
                :type "namespace")
                nil [1065 3022]))          
      :file "bad_lexical_cast.hpp"
      :pointmax 3094
      :fsize 3093
      :lastmodtime '(23089 51066 0 0)
      :unmatched-syntax '((PUBLIC 1388 . 1394) (punctuation 1194 . 1195) (symbol 1177 . 1193) (symbol 1156 . 1176) (CLASS 1150 . 1155))
      :lexical-table 
        '(("BOOST_LEXICAL_CAST_BAD_LEXICAL_CAST_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_LEXICAL_CAST_TRY_LEXICAL_CONVERT_HPP" variable (:constant-flag t) nil [867 909])
            ("boost/config.hpp" include (:system-flag t) nil [911 938])
            ("string" include (:system-flag t) nil [1281 1298])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [1299 1328])
            ("boost/mpl/identity.hpp" include (:system-flag t) nil [1329 1362])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [1363 1390])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [1391 1431])
            ("boost/type_traits/is_arithmetic.hpp" include (:system-flag t) nil [1432 1478])
            ("boost/lexical_cast/detail/is_character.hpp" include (:system-flag t) nil [1480 1533])
            ("boost/lexical_cast/detail/converter_numeric.hpp" include (:system-flag t) nil [1534 1592])
            ("boost/lexical_cast/detail/converter_lexical.hpp" include (:system-flag t) nil [1593 1651])
            ("boost/range/iterator_range_core.hpp" include (:system-flag t) nil [1653 1699])
            ("boost/container/container_fwd.hpp" include (:system-flag t) nil [1700 1744])
            ("detail" type
               (:members 
                  ( ("is_stdstring" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [1799 1891])
                    ("is_stdstring" type
                       (:template 
                          ( ("CharT" type (:type "class") nil nil)
                            ("Traits" type (:type "class") nil nil)
                            ("Alloc" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("std::basic_string" type (:template-specifier 
                              ( ("CharT" type nil nil nil)
                                ("Traits" type nil nil nil)
                                ("Alloc" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [1901 2072])
                    ("is_booststring" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [2327 2421])
                    ("is_booststring" type
                       (:template 
                          ( ("CharT" type (:type "class") nil nil)
                            ("Traits" type (:type "class") nil nil)
                            ("Alloc" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("boost::container::basic_string" type (:template-specifier 
                              ( ("CharT" type nil nil nil)
                                ("Traits" type nil nil nil)
                                ("Alloc" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [2431 2617])
                    ("is_arithmetic_and_not_xchars" type
                       (:template 
                          ( ("Target" type (:type "class") nil nil)
                            ("Source" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [3034 3039])
                            ("BOOST_STATIC_CONSTANT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3083 3088])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3089 3140]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [3061 3142]))                          )
                        (reparse-symbol namespacesubparts) [2627 3153])
                    ("is_xchar_to_xchar" type
                       (:template 
                          ( ("Target" type (:type "class") nil nil)
                            ("Source" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [3733 3738])
                            ("BOOST_STATIC_CONSTANT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3790 3795])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3796 3847]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [3768 3849]))                          )
                        (reparse-symbol namespacesubparts) [3346 3860])
                    ("is_char_array_to_stdstring" type
                       (:template 
                          ( ("Target" type (:type "class") nil nil)
                            ("Source" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [3870 3998])
                    ("is_char_array_to_stdstring" type
                       (:template 
                          ( ("CharT" type (:type "class") nil nil)
                            ("Traits" type (:type "class") nil nil)
                            ("Alloc" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("std::basic_string" type (:template-specifier 
                              ( ("CharT" type nil nil nil)
                                ("Traits" type nil nil nil)
                                ("Alloc" type nil nil nil))                              ) nil nil)
                            ("CharT" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [4008 4201])
                    ("is_char_array_to_stdstring" type
                       (:template 
                          ( ("CharT" type (:type "class") nil nil)
                            ("Traits" type (:type "class") nil nil)
                            ("Alloc" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("std::basic_string" type (:template-specifier 
                              ( ("CharT" type nil nil nil)
                                ("Traits" type nil nil nil)
                                ("Alloc" type nil nil nil))                              ) nil nil)
                            ("CharT" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [4211 4410])
                    ("is_char_array_to_booststring" type
                       (:template 
                          ( ("Target" type (:type "class") nil nil)
                            ("Source" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::false_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [4693 4823])
                    ("is_char_array_to_booststring" type
                       (:template 
                          ( ("CharT" type (:type "class") nil nil)
                            ("Traits" type (:type "class") nil nil)
                            ("Alloc" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("boost::container::basic_string" type (:template-specifier 
                              ( ("CharT" type nil nil nil)
                                ("Traits" type nil nil nil)
                                ("Alloc" type nil nil nil))                              ) nil nil)
                            ("CharT" type (:pointer 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [4833 5041])
                    ("is_char_array_to_booststring" type
                       (:template 
                          ( ("CharT" type (:type "class") nil nil)
                            ("Traits" type (:type "class") nil nil)
                            ("Alloc" type (:type "class") nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("boost::true_type" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          
                        :template-specifier 
                          ( ("boost::container::basic_string" type (:template-specifier 
                              ( ("CharT" type nil nil nil)
                                ("Traits" type nil nil nil)
                                ("Alloc" type nil nil nil))                              ) nil nil)
                            ("CharT" type
                               (:pointer 1
                                :constant-flag t)
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [5051 5265])
                    ("copy_converter_impl" type
                       (:template 
                          ( ("Target" type (:type "class") nil nil)
                            ("Source" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("try_convert" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5658 5661])
                                    ("" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5662 5666])
                                    ("result" variable
                                       (:reference 1
                                        :type ("Target" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5667 5682]))                                  
                                :typemodifiers ("static" "inline"))
                                (reparse-symbol classsubparts) [5596 5820]))                          )
                        (reparse-symbol namespacesubparts) [5275 5997]))                  
                :type "namespace")
                nil [1768 6003])
            ("conversion" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("try_lexical_convert" function
                               (:template 
                                  ( ("Target" type (:type "class") nil nil)
                                    ("Source" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("arg" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Source" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6144 6162])
                                    ("result" variable
                                       (:reference 1
                                        :type ("Target" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6163 6178]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [6060 7914])
                            ("try_lexical_convert" function
                               (:template 
                                  ( ("Target" type (:type "class") nil nil)
                                    ("CharacterT" type (:type "class") nil nil))                                  
                                :type "bool"
                                :arguments 
                                  ( ("chars" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CharacterT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8012 8036])
                                    ("count" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8037 8055])
                                    ("result" variable
                                       (:reference 1
                                        :type ("Target" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8056 8071]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [7924 8487]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [6032 8494]))                  
                :type "namespace")
                nil [6009 8495])
            ("conversion" type
               (:members 
                  ( ("boost::conversion::detail::try_lexical_convert" variable (:type "int") (reparse-symbol namespacesubparts) [8595 8642]))                  
                :type "namespace")
                nil [8533 8648]))          
      :file "try_lexical_convert.hpp"
      :pointmax 8965
      :fsize 8964
      :lastmodtime '(23089 51066 0 0)
      :unmatched-syntax '((symbol 8899 . 8902) (symbol 8888 . 8898) (symbol 8884 . 8887) (symbol 8877 . 8883) (punctuation 8876 . 8877) (close-paren 8874 . 8875) (close-paren 8873 . 8874) (semantic-list 8835 . 8873) (punctuation 8833 . 8834) (punctuation 8832 . 8833) (number 8830 . 8831) (punctuation 8828 . 8829) (symbol "4" 8819 . 8827) (open-paren 8818 . 8819) (punctuation 8810 . 8811) (punctuation 8809 . 8810) (close-paren 8807 . 8808) (semantic-list 8800 . 8807) (symbol 8793 . 8800) (punctuation 8791 . 8792) (punctuation 8790 . 8791) (semantic-list 8782 . 8789) (symbol 8775 . 8782) (punctuation 8773 . 8774) (punctuation 8772 . 8773) (semantic-list 8764 . 8771) (symbol 8757 . 8764) (punctuation 8755 . 8756) (punctuation 8754 . 8755) (semantic-list 8735 . 8753) (symbol 8728 . 8735) (open-paren 8727 . 8728) (punctuation 8726 . 8727) (close-paren 8650 . 8651) (punctuation 8594 . 8595) (punctuation 8593 . 8594) (USING 8587 . 8592) (punctuation 5660 . 5661) (punctuation 3731 . 3732) (symbol 3709 . 3714) (punctuation 3708 . 3709) (punctuation 3707 . 3708) (punctuation 3706 . 3707) (symbol 3700 . 3706) (punctuation 3699 . 3700) (symbol 3687 . 3699) (punctuation 3686 . 3687) (punctuation 3685 . 3686) (symbol 3679 . 3685) (punctuation 3678 . 3679) (punctuation 3677 . 3678) (symbol 3672 . 3677) (punctuation 3649 . 3650) (punctuation 3648 . 3649) (symbol 3642 . 3647) (punctuation 3641 . 3642) (punctuation 3640 . 3641) (punctuation 3639 . 3640) (symbol 3633 . 3639) (punctuation 3632 . 3633) (symbol 3620 . 3632) (punctuation 3619 . 3620) (punctuation 3618 . 3619) (symbol 3612 . 3618) (punctuation 3611 . 3612) (punctuation 3610 . 3611) (symbol 3605 . 3610) (punctuation 3582 . 3583) (punctuation 3581 . 3582) (semantic-list 3574 . 3580) (SIZEOF 3568 . 3574) (punctuation 3566 . 3567) (punctuation 3565 . 3566) (semantic-list 3556 . 3564) (SIZEOF 3550 . 3556) (punctuation 3527 . 3528) (punctuation 3526 . 3527) (semantic-list 3517 . 3525) (SIZEOF 3511 . 3517) (punctuation 3509 . 3510) (punctuation 3508 . 3509) (semantic-list 3499 . 3507) (SIZEOF 3493 . 3499) (punctuation 3470 . 3471) (symbol 3465 . 3470) (punctuation 3464 . 3465) (punctuation 3463 . 3464) (symbol 3460 . 3463) (punctuation 3459 . 3460) (punctuation 3458 . 3459) (symbol 3453 . 3458) (TYPEDEF 3445 . 3452) (punctuation 3032 . 3033) (symbol 3010 . 3015) (punctuation 3009 . 3010) (punctuation 3008 . 3009) (punctuation 3007 . 3008) (symbol 3001 . 3007) (punctuation 3000 . 3001) (symbol 2987 . 3000) (punctuation 2986 . 2987) (punctuation 2985 . 2986) (symbol 2980 . 2985) (punctuation 2958 . 2959) (punctuation 2957 . 2958) (symbol 2951 . 2956) (punctuation 2950 . 2951) (punctuation 2949 . 2950) (punctuation 2948 . 2949) (symbol 2942 . 2948) (punctuation 2941 . 2942) (symbol 2928 . 2941) (punctuation 2927 . 2928) (punctuation 2926 . 2927) (symbol 2921 . 2926) (punctuation 2899 . 2900) (punctuation 2898 . 2899) (semantic-list 2853 . 2897) (punctuation 2852 . 2853) (punctuation 2830 . 2831) (punctuation 2829 . 2830) (semantic-list 2784 . 2828) (punctuation 2783 . 2784) (punctuation 2761 . 2762) (symbol 2756 . 2761) (punctuation 2755 . 2756) (punctuation 2754 . 2755) (symbol 2751 . 2754) (punctuation 2750 . 2751) (punctuation 2749 . 2750) (symbol 2744 . 2749) (TYPEDEF 2736 . 2743) (open-paren 1762 . 1763) (symbol 1756 . 1761) (NAMESPACE 1746 . 1755) (string 1255 . 1272) (symbol 1247 . 1254) (symbol 1236 . 1246) (symbol 1232 . 1235) (symbol 1225 . 1231) (punctuation 1224 . 1225) (symbol 1219 . 1223) (symbol 1208 . 1218) (symbol 1204 . 1207) (symbol 1197 . 1203) (punctuation 1196 . 1197) (close-paren 1194 . 1195) (semantic-list 1138 . 1194) (punctuation 1130 . 1131) (punctuation 1129 . 1130) (semantic-list 1047 . 1128) (punctuation 1046 . 1047))
      :lexical-table 
        '(("BOOST_LEXICAL_CAST_TRY_LEXICAL_CONVERT_HPP")
          )
))
  :file "!usr!local!Cellar!boost!1.66.0!include!boost!lexical_cast!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
