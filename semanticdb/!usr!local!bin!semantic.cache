;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("os" include nil nil [49 58])
            ("sys" include nil nil [59 69])
            ("sqlite3" include nil nil [70 84])
            ("argparse" include nil nil [85 100])
            ("shutil" include nil nil [101 114])
            ("subprocess" include nil nil [115 132])
            ("textwrap" include nil nil [133 148])
            ("shlex" include nil nil [149 161])
            ("PROGRAM_NAME" variable nil nil [163 185])
            ("PROGRAM_VERSION" variable nil nil [186 207])
            ("USER_DATA_FOLDER" code nil nil [208 266])
            ("DATABASE_PATH" code nil nil [267 320])
            ("TMPFILE_PATH" code nil nil [321 377])
            ("global" code nil nil [700 723])
            ("OpenDatabase" function nil nil [725 879])
            ("DatabaseCommandExists" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [906 915]))              ) nil [880 1041])
            ("DatabaseAddCommand" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [1066 1075])
                ("command" variable nil (reparse-symbol function_parameters) [1077 1084])
                ("description" variable nil (reparse-symbol function_parameters) [1086 1097]))              ) nil [1043 1378])
            ("DatabaseRemoveCommand" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [1406 1415]))              ) nil [1380 1577])
            ("DatabaseAddTag" function (:arguments 
              ( ("tag" variable nil (reparse-symbol function_parameters) [1598 1601])
                ("commandId" variable nil (reparse-symbol function_parameters) [1603 1612]))              ) nil [1579 1749])
            ("DatabaseCommandSimilarity" function (:arguments 
              ( ("command" variable nil (reparse-symbol function_parameters) [1781 1788]))              ) nil [1751 2050])
            ("ISTTY" variable nil nil [2053 2078])
            ("''" code nil nil [2115 2117])
            ("''" code nil nil [2155 2157])
            ("''" code nil nil [2193 2195])
            ("''" code nil nil [2234 2236])
            ("colors" variable nil nil [2237 2330])
            ("ColorPrint" function (:arguments 
              ( ("string" variable nil (reparse-symbol function_parameters) [2347 2353])
                ("mainColor" variable nil (reparse-symbol function_parameters) [2356 2365])
                ("prefix" variable nil (reparse-symbol function_parameters) [2377 2383])
                ("suffix" variable nil (reparse-symbol function_parameters) [2388 2394])
                ("backgroundColor" variable nil (reparse-symbol function_parameters) [2399 2414]))              ) nil [2331 2542])
            ("PrintCommand" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [2561 2570])
                ("command" variable nil (reparse-symbol function_parameters) [2572 2579])
                ("description" variable nil (reparse-symbol function_parameters) [2581 2592])
                ("tags" variable nil (reparse-symbol function_parameters) [2597 2601])
                ("ShowTags" variable nil (reparse-symbol function_parameters) [2606 2614]))              ) nil [2544 3410])
            ("PrintCommandFromDatabase" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [3441 3450])
                ("ShowTags" variable nil (reparse-symbol function_parameters) [3452 3460]))              ) nil [3412 3858])
            ("CheckSimilarity" function (:arguments 
              ( ("command" variable nil (reparse-symbol function_parameters) [3879 3886])
                ("description" variable nil (reparse-symbol function_parameters) [3888 3899]))              ) nil [3859 4908])
            ("COMMAND_TXT" variable nil nil [4909 4932])
            ("DESCRIPTION_TXT" variable nil nil [4933 4964])
            ("TAGS_TXT" variable nil nil [4965 5033])
            ("AddCommandFromFile" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [5058 5067])
                ("fileName" variable nil (reparse-symbol function_parameters) [5069 5077]))              ) nil [5034 5967])
            ("WriteCommandToFile" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [5992 6001])
                ("fileName" variable nil (reparse-symbol function_parameters) [6003 6011]))              ) nil [5968 6490])
            ("Uninstall" function nil nil [6491 6737])
            ("Install" function nil nil [6739 7246])
            ("Import" function (:arguments 
              ( ("fileName" variable nil (reparse-symbol function_parameters) [7364 7372]))              ) nil [7352 8787])
            ("Export" function (:arguments 
              ( ("fileName" variable nil (reparse-symbol function_parameters) [8800 8808]))              ) nil [8788 9484])
            ("Add" function nil nil [9485 9882])
            ("Remove" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [9894 9903]))              ) nil [9883 10156])
            ("Modify" function (:arguments 
              ( ("commandId" variable nil (reparse-symbol function_parameters) [10168 10177]))              ) nil [10157 10673])
            ("Show" function nil nil [10674 10970])
            ("Search" function (:arguments 
              ( ("commandTag" variable nil (reparse-symbol function_parameters) [10983 10993]))              ) nil [10971 11282])
            ("if" code nil nil [12120 14058]))          
      :file "bashelp"
      :pointmax 14058
      :fsize 14061
      :lastmodtime '(23230 7987 159260 593000)
      :unmatched-syntax nil))
  :file "!usr!local!bin!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
