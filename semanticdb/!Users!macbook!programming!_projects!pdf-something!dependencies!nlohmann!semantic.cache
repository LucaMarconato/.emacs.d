;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("NLOHMANN_JSON_HPP" variable (:constant-flag t) nil [1411 1428])
            ("NLOHMANN_JSON_VERSION_MAJOR" variable (:constant-flag t) nil [1438 1465])
            ("NLOHMANN_JSON_VERSION_MINOR" variable (:constant-flag t) nil [1476 1503])
            ("NLOHMANN_JSON_VERSION_PATCH" variable (:constant-flag t) nil [1514 1541])
            ("algorithm" include (:system-flag t) nil [1545 1565])
            ("cassert" include (:system-flag t) nil [1592 1610])
            ("ciso646" include (:system-flag t) nil [1621 1639])
            ("cstddef" include (:system-flag t) nil [1656 1674])
            ("functional" include (:system-flag t) nil [1707 1728])
            ("initializer_list" include (:system-flag t) nil [1743 1770])
            ("iosfwd" include (:system-flag t) nil [1791 1808])
            ("iterator" include (:system-flag t) nil [1829 1848])
            ("numeric" include (:system-flag t) nil [1896 1914])
            ("string" include (:system-flag t) nil [1929 1946])
            ("utility" include (:system-flag t) nil [1974 1992])
            ("nlohmann/json_fwd.hpp" include (:system-flag t) nil [2032 2064])
            ("nlohmann/detail/macro_scope.hpp" include (:system-flag t) nil [2065 2107])
            ("nlohmann/detail/meta.hpp" include (:system-flag t) nil [2108 2143])
            ("nlohmann/detail/exceptions.hpp" include (:system-flag t) nil [2144 2185])
            ("nlohmann/detail/value_t.hpp" include (:system-flag t) nil [2186 2224])
            ("nlohmann/detail/conversions/from_json.hpp" include (:system-flag t) nil [2225 2277])
            ("nlohmann/detail/conversions/to_json.hpp" include (:system-flag t) nil [2278 2328])
            ("nlohmann/detail/input/input_adapters.hpp" include (:system-flag t) nil [2329 2380])
            ("nlohmann/detail/input/lexer.hpp" include (:system-flag t) nil [2381 2423])
            ("nlohmann/detail/input/parser.hpp" include (:system-flag t) nil [2424 2467])
            ("nlohmann/detail/iterators/primitive_iterator.hpp" include (:system-flag t) nil [2468 2527])
            ("nlohmann/detail/iterators/internal_iterator.hpp" include (:system-flag t) nil [2528 2586])
            ("nlohmann/detail/iterators/iter_impl.hpp" include (:system-flag t) nil [2587 2637])
            ("nlohmann/detail/iterators/iteration_proxy.hpp" include (:system-flag t) nil [2638 2694])
            ("nlohmann/detail/iterators/json_reverse_iterator.hpp" include (:system-flag t) nil [2695 2757])
            ("nlohmann/detail/output/output_adapters.hpp" include (:system-flag t) nil [2758 2811])
            ("nlohmann/detail/input/binary_reader.hpp" include (:system-flag t) nil [2812 2862])
            ("nlohmann/detail/output/binary_writer.hpp" include (:system-flag t) nil [2863 2914])
            ("nlohmann/detail/output/serializer.hpp" include (:system-flag t) nil [2915 2963])
            ("nlohmann/detail/json_ref.hpp" include (:system-flag t) nil [2964 3003])
            ("nlohmann/detail/json_pointer.hpp" include (:system-flag t) nil [3004 3047])
            ("nlohmann/adl_serializer.hpp" include (:system-flag t) nil [3048 3086])
            ("nlohmann" type
               (:members 
                  ( ("basic_json" type
                       (:members 
                          ( ("private" label nil (reparse-symbol classsubparts) [7278 7286])
                            ("external_constructor" type
                               (:template 
                                  ( ("detail::value_t" type nil nil nil))                                  
                                :type "struct"
                                :prototype t
                                :parent "detail")
                                (reparse-symbol classsubparts) [7291 7360])
                            ("nlohmann::json_pointer" variable (:type "int") (reparse-symbol classsubparts) [7374 7409])
                            ("nlohmann::detail::parser" variable (:type "int") (reparse-symbol classsubparts) [7423 7460])
                            ("nlohmann::detail::serializer" variable (:type "int") (reparse-symbol classsubparts) [7474 7515])
                            ("nlohmann::detail::iter_impl" variable (:type "int") (reparse-symbol classsubparts) [7572 7600])
                            ("nlohmann::detail::binary_writer" variable (:type "int") (reparse-symbol classsubparts) [7676 7708])
                            ("nlohmann::detail::binary_reader" variable (:type "int") (reparse-symbol classsubparts) [7765 7797])
                            ("basic_json_t" variable
                               (:default-value "NLOHMANN_BASIC_JSON_TPL"
                                :type "int")
                                (reparse-symbol classsubparts) [7842 7881])
                            ("nlohmann::detail::lexer" variable (:type "int") (reparse-symbol classsubparts) [7970 8006])
                            ("nlohmann::detail::parser" variable (:type "int") (reparse-symbol classsubparts) [8028 8065])
                            ("nlohmann::detail::primitive_iterator_t" variable (:type "int") (reparse-symbol classsubparts) [8102 8141])
                            ("nlohmann::detail::internal_iterator" variable (:type "int") (reparse-symbol classsubparts) [8211 8262])
                            ("nlohmann::detail::iter_impl" variable (:type "int") (reparse-symbol classsubparts) [8324 8367])
                            ("nlohmann::detail::iteration_proxy" variable (:type "int") (reparse-symbol classsubparts) [8430 8474])
                            ("nlohmann::detail::json_reverse_iterator" variable (:type "int") (reparse-symbol classsubparts) [8535 8581])
                            ("nlohmann::detail::output_adapter_t" variable (:type "int") (reparse-symbol classsubparts) [8646 8691])
                            ("nlohmann::detail::binary_reader" variable (:type "int") (reparse-symbol classsubparts) [8721 8765])
                            ("nlohmann::detail::binary_writer" variable (:type "int") (reparse-symbol classsubparts) [8822 8876])
                            ("nlohmann::detail::serializer" variable (:type "int") (reparse-symbol classsubparts) [8903 8944])
                            ("public" label nil (reparse-symbol classsubparts) [8948 8955])
                            ("detail::value_t" variable (:type "int") (reparse-symbol classsubparts) [8976 8992])
                            ("nlohmann::json_pointer" variable (:type "int") (reparse-symbol classsubparts) [9060 9095])
                            ("JSONSerializer" variable (:type "int") (reparse-symbol classsubparts) [9166 9192])
                            ("std::initializer_list" variable (:type "int") (reparse-symbol classsubparts) [9287 9339])
                            ("detail::exception" variable (:type "int") (reparse-symbol classsubparts) [9553 9571])
                            ("detail::parse_error" variable (:type "int") (reparse-symbol classsubparts) [9633 9653])
                            ("detail::invalid_iterator" variable (:type "int") (reparse-symbol classsubparts) [9725 9750])
                            ("detail::type_error" variable (:type "int") (reparse-symbol classsubparts) [9810 9829])
                            ("detail::out_of_range" variable (:type "int") (reparse-symbol classsubparts) [9893 9914])
                            ("detail::other_error" variable (:type "int") (reparse-symbol classsubparts) [9976 9996])
                            ("value_type" variable
                               (:default-value "basic_json"
                                :type "int")
                                (reparse-symbol classsubparts) [10294 10318])
                            ("std::ptrdiff_t" variable (:type "int") (reparse-symbol classsubparts) [10577 10592])
                            ("std::size_t" variable (:type "int") (reparse-symbol classsubparts) [10659 10671])
                            ("AllocatorType" variable (:type "int") (reparse-symbol classsubparts) [10727 10753])
                            ("std::allocator_traits::pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [10814 10870])
                            ("std::allocator_traits::const_pointer" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [10942 11004])
                            ("iter_impl" variable (:type "int") (reparse-symbol classsubparts) [11074 11096])
                            ("iter_impl" variable (:type "int") (reparse-symbol classsubparts) [11176 11204])
                            ("get_allocator" function
                               (:typemodifiers ("static")
                                :type ("allocator_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [11593 11675])
                            ("meta" function
                               (:typemodifiers ("static")
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13059 15197])
                            ("std::less" variable (:type "int") (reparse-symbol classsubparts) [15753 15775])
                            ("ObjectType" variable (:type "int") (reparse-symbol classsubparts) [19329 19481])
                            ("ArrayType" variable (:type "int") (reparse-symbol classsubparts) [20937 20986])
                            ("string_t" variable
                               (:default-value "StringType"
                                :type "int")
                                (reparse-symbol classsubparts) [22917 22939])
                            ("boolean_t" variable
                               (:default-value "BooleanType"
                                :type "int")
                                (reparse-symbol classsubparts) [23548 23572])
                            ("number_integer_t" variable
                               (:default-value "NumberIntegerType"
                                :type "int")
                                (reparse-symbol classsubparts) [26617 26654])
                            ("number_unsigned_t" variable
                               (:default-value "NumberUnsignedType"
                                :type "int")
                                (reparse-symbol classsubparts) [29730 29769])
                            ("number_float_t" variable
                               (:default-value "NumberFloatType"
                                :type "int")
                                (reparse-symbol classsubparts) [32610 32643])
                            ("private" label nil (reparse-symbol classsubparts) [32659 32667])
                            ("create" function
                               (:pointer 1
                                :typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [32783 32789])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32794 32799]))                                  
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [32766 33290])
                            ("json_value" type
                               (:members 
                                  ( ("object" variable
                                       (:pointer 1
                                        :type ("object_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [34446 34463])
                                    ("array" variable
                                       (:pointer 1
                                        :type ("array_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [34528 34543])
                                    ("string" variable
                                       (:pointer 1
                                        :type ("string_t" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [34609 34626])
                                    ("boolean" variable (:type ("boolean_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34655 34673])
                                    ("number_integer" variable (:type ("number_integer_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34711 34743])
                                    ("number_unsigned" variable (:type ("number_unsigned_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34790 34824])
                                    ("number_float" variable (:type ("number_float_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34869 34897])
                                    ("boolean" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35069 35071]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [35061 35074])
                                    ("number_integer" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35186 35188]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [35171 35191])
                                    ("number_unsigned" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35306 35308]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [35290 35311])
                                    ("number_float" function
                                       (:arguments 
                                          ( ("" variable (:type ("v" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35426 35428]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [35413 35431])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("t" variable (:type ("value_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35508 35518]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [35497 37252])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37309 37331]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [37298 37397])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("string_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37461 37471])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37472 37478]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [37450 37555])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37612 37634]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [37601 37700])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("object_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37764 37774])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37775 37781]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [37753 37858])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37914 37935]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [37903 37999])
                                    ("json_value" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("array_t" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [38062 38071])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38072 38078]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [38051 38153]))                                  
                                :type "union")
                                (reparse-symbol classsubparts) [34358 39338])
                            ("public" label nil (reparse-symbol classsubparts) [40003 40010])
                            ("parser::parse_event_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [40815 40846])
                            ("parser::parser_callback_t" variable
                               (:typemodifiers ("typename")
                                :type "int")
                                (reparse-symbol classsubparts) [43758 43793])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("v" variable
                                       (:constant-flag t
                                        :type ("value_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44904 44920]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [44893 44992])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("value_t::null" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45641 45655]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [45630 45695])
                            ("noexcept" function
                               (:arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [48693 48855]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [48684 48974])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("BasicJsonType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50234 50259]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50223 52243])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("init" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55699 55723])
                                    ("type_deduction" variable
                                       (:default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [55739 55765])
                                    ("manual_type" variable
                                       (:default-value "value_t"
                                        :type ("value_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55782 55811])
                                    ("" variable (:type ("array" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [55813 55819]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [55688 57622])
                            ("array" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("init" variable
                                       (:default-value "{}"
                                        :type ("initializer_list_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [59104 59132]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [59080 59201])
                            ("object" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("init" variable
                                       (:default-value "{}"
                                        :type ("initializer_list_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60815 60843]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [60790 60913])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("cnt" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61642 61656])
                                    ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61657 61679]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [61631 61803])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("first" variable (:type ("InputIT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64807 64821])
                                    ("last" variable (:type ("InputIT" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64822 64835]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [64796 67512])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("ref" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("detail::json_ref" type
                                             (:template-specifier 
                                                ( ("basic_json" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [67680 67720]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [67669 67771])
                            ("basic_json" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [68490 68514]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [68479 69738])
                            ("m_type" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("std::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [70640 70663]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [70633 70925])
                            ("noexcept" function
                               (:arguments 
                                  ( ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71757 71823])
                                    ("and" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71820 71883])
                                    ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71880 71949])
                                    ("" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [71946 72002]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [71738 72243])
                            ("public" label nil (reparse-symbol classsubparts) [72758 72765])
                            ("dump" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("indent" variable
                                       (:constant-flag t
                                        :default-value "-1"
                                        :type "int")
                                        (reparse-symbol arg-sub-list) [74468 74489])
                                    ("indent_char" variable
                                       (:constant-flag t
                                        :default-value "' '"
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [74491 74519])
                                    ("ensure_ascii" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [74539 74570]))                                  
                                :type ("string_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [74454 74933])
                            ("private" label nil (reparse-symbol classsubparts) [85931 85939])
                            ("get_impl" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("" variable
                                       (:pointer 1
                                        :type ("boolean_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [86066 86088]))                                  
                                :type ("boolean_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [86047 86307])
                            ("get_ref_impl" function
                               (:template 
                                  ( ("ReferenceType" type (:type "class") nil nil)
                                    ("ThisType" type (:type "class") nil nil))                                  
                                :type ("ReferenceType" type (:type "class") nil nil)
                                :arguments 
                                  ( ("obj" variable
                                       (:reference 1
                                        :type ("ThisType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [89592 89606]))                                  
                                :typemodifiers ("static"))
                                (reparse-symbol classsubparts) [89502 89976])
                            ("public" label nil (reparse-symbol classsubparts) [89980 89987])
                            ("get" function
                               (:methodconst-flag t
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [90556 90612])
                            ("get" function
                               (:methodconst-flag t
                                :type ("BasicJsonType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [91209 91268])
                            ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [93277 93428]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [93262 94046])
                            ("noexcept" function
                               (:constant-flag t
                                :arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [95548 95673]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [95533 95914])
                            ("get_ref" function (:type ("ReferenceType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [101808 101935])
                            ("get_ref" function
                               (:methodconst-flag t
                                :type ("ReferenceType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [102254 102387])
                            ("ValueType" function
                               (:methodconst-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [104411 104519])
                            ("at" function
                               (:arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [105603 105617]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [105590 106193])
                            ("at" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [107126 107140]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [107107 107722])
                            ("at" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [108844 108883]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [108831 109434])
                            ("at" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [110569 110608]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [110550 111165])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [112077 112091]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [112056 112913])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("idx" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [113510 113524]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [113483 113804])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [114816 114855]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [114795 115349])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [116387 116426]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [116360 116783])
                            ("[]" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("reference" type (:type "class") nil nil)
                                :arguments 
                                  ( ("key" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [117820 117827]))                                  
                                :operator-flag t)
                                (reparse-symbol classsubparts) [117774 118288])
                            ("[]" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("const_reference" type (:type "class") nil nil)
                                :arguments 
                                  ( ("key" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [119351 119358]))                                  
                                :operator-flag t
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [119299 119701])
                            ("value" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [121664 121703])
                                    ("default_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ValueType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [121704 121735]))                                  
                                :type ("ValueType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [121648 122187])
                            ("value" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [122367 122406])
                                    ("default_value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [122407 122433]))                                  
                                :type ("string_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [122352 122503])
                            ("value" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [124135 124159])
                                    ("default_value" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("ValueType" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [124160 124191]))                                  
                                :type ("ValueType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [124119 124680])
                            ("value" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [124845 124869])
                                    ("default_value" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "char")
                                        (reparse-symbol arg-sub-list) [124870 124896]))                                  
                                :type ("string_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [124830 124966])
                            ("front" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [125819 125873])
                            ("front" function
                               (:methodconst-flag t
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [125927 125994])
                            ("back" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [126937 127027])
                            ("back" function
                               (:methodconst-flag t
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [127080 127183])
                            ("erase" function
                               (:arguments 
                                  ( ("pos" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [129365 129382]))                                  
                                :type ("IteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [129346 131087])
                            ("erase" function
                               (:arguments 
                                  ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133405 133424])
                                    ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [133425 133443]))                                  
                                :type ("IteratorType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [133386 135400])
                            ("erase" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::key_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [136461 136500]))                                  
                                :type ("size_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [136445 136763])
                            ("erase" function
                               (:arguments 
                                  ( ("idx" variable
                                       (:constant-flag t
                                        :type ("size_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [137653 137673]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [137642 138206])
                            ("find" function
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type ("iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [139095 139101])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139102 139106]))                                  )
                                (reparse-symbol classsubparts) [139053 139306])
                            ("find" function
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type ("const_iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [139445 139451])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [139452 139456]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [139397 139663])
                            ("count" function
                               (:template 
                                  ( ("KeyT" type (:type "class") nil nil))                                  
                                :type ("size_type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("KeyT" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [140422 140428])
                                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [140429 140433]))                                  
                                :methodconst-flag t)
                                (reparse-symbol classsubparts) [140378 140576])
                            ("public" label nil (reparse-symbol classsubparts) [148666 148673])
                            ("push_back" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [162112 162124])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162125 162129]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [162097 162748])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [162864 162876])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [162877 162881]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [162843 162950])
                            ("push_back" function
                               (:arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [163060 163082]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [163045 163608])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [163724 163746]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [163703 163804])
                            ("push_back" function
                               (:arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [164548 164589]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [164533 165118])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("val" variable
                                       (:reference 1
                                        :typemodifiers ("typename")
                                        :constant-flag t
                                        :type ("object_t::value_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [165259 165300]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [165238 165358])
                            ("push_back" function
                               (:arguments 
                                  ( ("init" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166434 166458]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [166419 166864])
                            ("+=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("init" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [166987 167011]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [166966 167070])
                            ("emplace_back" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [167928 167934])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [167939 167944]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [167910 168524])
                            ("emplace" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("Args" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [169813 169819])
                                    ("" variable (:type ("args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [169824 169829]))                                  
                                :type ("std::pair" type
                                     (:template-specifier 
                                        ( ("iterator" type nil nil nil)
                                          ("bool" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [169779 170639])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [171385 171404])
                                    ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [171405 171427]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [171369 172086])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172205 172224])
                                    ("" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [172225 172237])
                                    ("" variable (:type ("val" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [172238 172242]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [172189 172287])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173147 173166])
                                    ("cnt" variable (:type ("size_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [173167 173181])
                                    ("val" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [173182 173204]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [173131 173868])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175106 175125])
                                    ("first" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175126 175147])
                                    ("last" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [175148 175168]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [175090 176375])
                            ("insert" function
                               (:arguments 
                                  ( ("pos" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [177239 177258])
                                    ("ilist" variable (:type ("initializer_list_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [177259 177284]))                                  
                                :type ("iterator" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [177223 177940])
                            ("insert" function
                               (:arguments 
                                  ( ("first" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178805 178826])
                                    ("last" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [178827 178847]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [178793 179621])
                            ("update" function
                               (:arguments 
                                  ( ("j" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [180247 180265]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [180235 180983])
                            ("update" function
                               (:arguments 
                                  ( ("first" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [181999 182020])
                                    ("last" variable (:type ("const_iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [182021 182041]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [181987 183101])
                            ("noexcept" function
                               (:arguments 
                                  ( ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [183671 183737])
                                    ("and" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [183734 183797])
                                    ("and" variable (:type ("std::is_nothrow_move_constructible::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [183794 183863])
                                    ("" variable (:type ("std::is_nothrow_move_assignable::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [183860 183916]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [183652 184040])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("array_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [184667 184682]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [184657 184973])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("object_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [185605 185621]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [185595 185915])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("string_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [186547 186563]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [186537 186857])
                            ("public" label nil (reparse-symbol classsubparts) [186873 186880])
                            ("<<" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("o" variable
                                       (:reference 1
                                        :type ("std::ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [203543 203559])
                                    ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [203560 203580]))                                  
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [203511 204072])
                            (">>" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [204508 204528])
                                    ("o" variable
                                       (:reference 1
                                        :type ("std::ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [204529 204545]))                                  
                                :type ("std::ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [204476 204580])
                            ("parse" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("i" variable (:type ("detail::input_adapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [207570 207594])
                                    ("cb" variable
                                       (:constant-flag t
                                        :default-value "nullptr"
                                        :type ("parser_callback_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [207623 207659])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [207689 207723]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [207546 207847])
                            ("parse" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("i" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [207970 207995])
                                    ("cb" variable
                                       (:constant-flag t
                                        :default-value "nullptr"
                                        :type ("parser_callback_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [208024 208060])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [208090 208124]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [207946 208248])
                            ("accept" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("i" variable (:type ("detail::input_adapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [208273 208297]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [208254 208348])
                            ("accept" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("i" variable
                                       (:reference 1
                                        :type ("detail::input_adapter" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [208373 208398]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [208354 208449])
                            ("parse" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [210993 211012])
                                    ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [211013 211031])
                                    ("cb" variable
                                       (:constant-flag t
                                        :default-value "nullptr"
                                        :type ("parser_callback_t" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [211060 211096])
                                    ("allow_exceptions" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [211126 211160]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [210969 211317])
                            ("accept" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("first" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [211597 211616])
                                    ("last" variable (:type ("IteratorType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [211617 211635]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [211578 211719])
                            ("<<" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [212154 212168])
                                    ("i" variable
                                       (:reference 1
                                        :type ("std::istream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [212169 212185]))                                  
                                :type ("std::istream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [212122 212230])
                            (">>" function
                               (:operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("i" variable
                                       (:reference 1
                                        :type ("std::istream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [213139 213155])
                                    ("j" variable
                                       (:reference 1
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [213156 213170]))                                  
                                :type ("std::istream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [213107 213258])
                            ("private" label nil (reparse-symbol classsubparts) [215073 215081])
                            ("value_t::null" variable (:type "int") (reparse-symbol classsubparts) [215225 215239])
                            ("m_value" variable
                               (:default-value "{}"
                                :type ("json_value" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [215286 215310])
                            ("public" label nil (reparse-symbol classsubparts) [215527 215534])
                            ("to_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [221606 221626]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("uint8_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [221570 221726])
                            ("to_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [221752 221772])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("uint8_t" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [221773 221807]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [221732 221868])
                            ("to_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [221894 221914])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [221915 221946]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [221874 222004])
                            ("to_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [226638 226658]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("uint8_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [226599 226761])
                            ("to_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [226790 226810])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("uint8_t" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [226811 226845]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [226767 226909])
                            ("to_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [226938 226958])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [226959 226990]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [226915 227051])
                            ("to_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [231500 231520])
                                    ("use_size" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [231563 231590])
                                    ("use_type" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [231634 231661]))                                  
                                :type ("std::vector" type
                                     (:template-specifier 
                                        ( ("uint8_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [231462 231784])
                            ("to_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [231812 231832])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("uint8_t" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [231833 231867])
                                    ("use_size" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [231894 231921])
                                    ("use_type" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [231923 231950]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [231790 232034])
                            ("to_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [232062 232082])
                                    ("o" variable (:type ("detail::output_adapter" type
                                         (:template-specifier 
                                            ( ("char" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [232083 232114])
                                    ("use_size" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [232141 232168])
                                    ("use_type" variable
                                       (:constant-flag t
                                        :default-value "false"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [232170 232197]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [232040 232278])
                            ("from_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("i" variable (:type ("detail::input_adapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [236721 236745])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [236778 236802]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [236693 236867])
                            ("from_cbor" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [237117 237122])
                                    ("" variable (:type ("a1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [237123 237126])
                                    ("" variable
                                       (:reference 1
                                        :type ("A2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [237127 237132])
                                    ("" variable (:type ("a2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [237133 237136])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [237137 237161]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [237089 237290])
                            ("from_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("i" variable (:type ("detail::input_adapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [240599 240623])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [240659 240683]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [240568 240751])
                            ("from_msgpack" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [241007 241012])
                                    ("" variable (:type ("a1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [241013 241016])
                                    ("" variable
                                       (:reference 1
                                        :type ("A2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [241017 241022])
                                    ("" variable (:type ("a2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [241023 241026])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [241027 241051]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [240976 241183])
                            ("from_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("i" variable (:type ("detail::input_adapter" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [243688 243712])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [243747 243771]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [243658 243838])
                            ("from_ubjson" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("A1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [244017 244022])
                                    ("" variable (:type ("a1" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [244023 244026])
                                    ("" variable
                                       (:reference 1
                                        :type ("A2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [244027 244032])
                                    ("" variable (:type ("a2" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [244033 244036])
                                    ("strict" variable
                                       (:constant-flag t
                                        :default-value "true"
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [244037 244061]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [243987 244192])
                            ("[]" function
                               (:operator-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [245646 245670]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [245625 245722])
                            ("[]" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [246599 246623]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [246572 246681])
                            ("at" function
                               (:arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [248041 248065]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [248028 248115])
                            ("at" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("ptr" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("json_pointer" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [249493 249517]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [249474 249573])
                            ("flatten" function
                               (:methodconst-flag t
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [250358 250513])
                            ("unflatten" function
                               (:methodconst-flag t
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [251674 251761])
                            ("patch" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("json_patch" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [253764 253793]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [253747 263360])
                            ("diff" function
                               (:typemodifiers ("static")
                                :arguments 
                                  ( ("source" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [264474 264499])
                                    ("target" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [264500 264525])
                                    ("path" variable
                                       (:reference 1
                                        :constant-flag t
                                        :default-value "\"\""
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [264553 264581]))                                  
                                :type ("basic_json" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [264451 269135])
                            ("merge_patch" function
                               (:arguments 
                                  ( ("patch" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("basic_json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [270711 270735]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [270694 271286]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [7257 271301]))                  
                :type "namespace")
                nil [3184 271303])
            ("std" type
               (:members 
                  ( ("noexcept" function
                       (:arguments 
                          ( ("" variable (:type ("is_nothrow_move_constructible" type
                                 (:template-specifier 
                                    ( ("nlohmann::json" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [271655 271701])
                            ("and" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [271702 271759])
                            ("" variable (:type ("is_nothrow_move_assignable" type
                                 (:template-specifier 
                                    ( ("nlohmann::json" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [271733 271776])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [271777 271801]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [271624 271822])
                    ("hash" type
                       (:type "struct"
                        :members 
                          ( ("()" function
                               (:methodconst-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("j" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("nlohmann::json" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [272014 272038]))                                  
                                :type ("std::size_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [271991 272199]))                          
                        :template-specifier 
                          ( ("nlohmann::json" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [271856 272202]))                  
                :type "namespace")
                nil [271446 272675])
            ("_json" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [273115 273129])
                    ("n" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [273130 273144]))                  
                :type "int")
                nil [273109 273192])
            ("_json_pointer" function
               (:arguments 
                  ( ("s" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [273664 273678])
                    ("n" variable (:type ("std::size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [273679 273693]))                  
                :type "int")
                nil [273650 273757])
            ("nlohmann/detail/macro_unscope.hpp" include (:system-flag t) nil [273759 273803]))          
      :file "json.hpp"
      :pointmax 273812
      :fsize 273811
      :lastmodtime '(23254 8838 661484 430000)
      :unmatched-syntax '((string 273647 . 273649) (OPERATOR 273638 . 273646) (symbol 273625 . 273637) (punctuation 273624 . 273625) (punctuation 273623 . 273624) (symbol 273619 . 273623) (punctuation 273618 . 273619) (punctuation 273617 . 273618) (symbol 273609 . 273617) (INLINE 273602 . 273608) (string 273106 . 273108) (OPERATOR 273097 . 273105) (symbol 273092 . 273096) (punctuation 273091 . 273092) (punctuation 273090 . 273091) (symbol 273082 . 273090) (INLINE 273075 . 273081) (punctuation 272671 . 272672) (semantic-list 272402 . 272671) (punctuation 272400 . 272401) (symbol 272393 . 272400) (punctuation 272392 . 272393) (punctuation 272391 . 272392) (symbol 272385 . 272391) (punctuation 272384 . 272385) (punctuation 272383 . 272384) (symbol 272375 . 272383) (punctuation 272374 . 272375) (punctuation 272373 . 272374) (punctuation 272371 . 272372) (symbol 272367 . 272371) (STRUCT 272360 . 272366) (punctuation 272358 . 272359) (punctuation 272357 . 272358) (TEMPLATE 272349 . 272357) (punctuation 271776 . 271777) (punctuation 271775 . 271776) (punctuation 271701 . 271702) (punctuation 271700 . 271701) (semantic-list 271566 . 271623) (symbol 271562 . 271566) (VOID 271557 . 271561) (INLINE 271550 . 271556) (punctuation 271548 . 271549) (punctuation 271547 . 271548) (TEMPLATE 271539 . 271547) (punctuation 244031 . 244032) (punctuation 244021 . 244022) (punctuation 243981 . 243982) (number 243980 . 243981) (punctuation 243978 . 243979) (punctuation 243976 . 243977) (INT 243973 . 243976) (punctuation 243971 . 243972) (symbol 243966 . 243971) (punctuation 243965 . 243966) (punctuation 243964 . 243965) (punctuation 243963 . 243964) (symbol 243961 . 243963) (punctuation 243959 . 243960) (symbol 243957 . 243959) (punctuation 243955 . 243956) (symbol 243942 . 243955) (punctuation 243941 . 243942) (punctuation 243940 . 243941) (symbol 243934 . 243940) (punctuation 243933 . 243934) (symbol 243917 . 243933) (punctuation 243916 . 243917) (punctuation 243915 . 243916) (symbol 243912 . 243915) (punctuation 243911 . 243912) (symbol 243900 . 243911) (punctuation 243899 . 243900) (punctuation 243898 . 243899) (symbol 243892 . 243898) (punctuation 243877 . 243878) (symbol 243875 . 243877) (TYPENAME 243866 . 243874) (punctuation 243864 . 243865) (symbol 243862 . 243864) (TYPENAME 243853 . 243861) (punctuation 243852 . 243853) (TEMPLATE 243844 . 243852) (punctuation 241021 . 241022) (punctuation 241011 . 241012) (punctuation 240970 . 240971) (number 240969 . 240970) (punctuation 240967 . 240968) (punctuation 240965 . 240966) (INT 240962 . 240965) (punctuation 240960 . 240961) (symbol 240955 . 240960) (punctuation 240954 . 240955) (punctuation 240953 . 240954) (punctuation 240952 . 240953) (symbol 240950 . 240952) (punctuation 240948 . 240949) (symbol 240946 . 240948) (punctuation 240944 . 240945) (symbol 240931 . 240944) (punctuation 240930 . 240931) (punctuation 240929 . 240930) (symbol 240923 . 240929) (punctuation 240922 . 240923) (symbol 240906 . 240922) (punctuation 240905 . 240906) (punctuation 240904 . 240905) (symbol 240901 . 240904) (punctuation 240900 . 240901) (symbol 240889 . 240900) (punctuation 240888 . 240889) (punctuation 240887 . 240888) (symbol 240881 . 240887) (punctuation 240866 . 240867) (symbol 240864 . 240866) (TYPENAME 240855 . 240863) (punctuation 240853 . 240854) (symbol 240851 . 240853) (TYPENAME 240842 . 240850) (punctuation 240841 . 240842) (TEMPLATE 240833 . 240841) (punctuation 237131 . 237132) (punctuation 237121 . 237122) (punctuation 237083 . 237084) (number 237082 . 237083) (punctuation 237080 . 237081) (punctuation 237078 . 237079) (INT 237075 . 237078) (punctuation 237073 . 237074) (symbol 237068 . 237073) (punctuation 237067 . 237068) (punctuation 237066 . 237067) (punctuation 237065 . 237066) (symbol 237063 . 237065) (punctuation 237061 . 237062) (symbol 237059 . 237061) (punctuation 237057 . 237058) (symbol 237044 . 237057) (punctuation 237043 . 237044) (punctuation 237042 . 237043) (symbol 237036 . 237042) (punctuation 237035 . 237036) (symbol 237019 . 237035) (punctuation 237018 . 237019) (punctuation 237017 . 237018) (symbol 237014 . 237017) (punctuation 237013 . 237014) (symbol 237002 . 237013) (punctuation 237001 . 237002) (punctuation 237000 . 237001) (symbol 236994 . 237000) (punctuation 236979 . 236980) (symbol 236977 . 236979) (TYPENAME 236968 . 236976) (punctuation 236966 . 236967) (symbol 236964 . 236966) (TYPENAME 236955 . 236963) (punctuation 236954 . 236955) (TEMPLATE 236946 . 236954) (punctuation 215223 . 215224) (symbol 215216 . 215222) (symbol 215208 . 215215) (semantic-list 214471 . 215068) (symbol 214458 . 214466) (CONST 214452 . 214457) (semantic-list 214449 . 214451) (symbol 214440 . 214449) (punctuation 214438 . 214439) (CHAR 214434 . 214438) (CONST 214428 . 214433) (symbol 212102 . 212117) (punctuation 211572 . 211573) (number 211571 . 211572) (punctuation 211569 . 211570) (symbol 211564 . 211568) (punctuation 211563 . 211564) (punctuation 211562 . 211563) (punctuation 211561 . 211562) (INT 211558 . 211561) (punctuation 211556 . 211557) (symbol 211551 . 211556) (punctuation 211550 . 211551) (punctuation 211549 . 211550) (punctuation 211548 . 211549) (symbol 211531 . 211548) (punctuation 211530 . 211531) (punctuation 211529 . 211530) (punctuation 211528 . 211529) (symbol 211516 . 211528) (punctuation 211515 . 211516) (symbol 211500 . 211515) (punctuation 211499 . 211500) (punctuation 211498 . 211499) (symbol 211495 . 211498) (TYPENAME 211486 . 211494) (punctuation 211463 . 211464) (symbol 211437 . 211463) (punctuation 211436 . 211437) (punctuation 211435 . 211436) (symbol 211432 . 211435) (punctuation 211409 . 211410) (symbol 211399 . 211409) (punctuation 211398 . 211399) (punctuation 211397 . 211398) (symbol 211394 . 211397) (punctuation 211375 . 211376) (symbol 211366 . 211375) (punctuation 211365 . 211366) (punctuation 211364 . 211365) (symbol 211361 . 211364) (TYPENAME 211352 . 211360) (punctuation 211350 . 211351) (symbol 211338 . 211350) (CLASS 211332 . 211337) (punctuation 211331 . 211332) (TEMPLATE 211323 . 211331) (punctuation 210963 . 210964) (number 210962 . 210963) (punctuation 210960 . 210961) (symbol 210955 . 210959) (punctuation 210954 . 210955) (punctuation 210953 . 210954) (punctuation 210952 . 210953) (INT 210949 . 210952) (punctuation 210947 . 210948) (symbol 210942 . 210947) (punctuation 210941 . 210942) (punctuation 210940 . 210941) (punctuation 210939 . 210940) (symbol 210922 . 210939) (punctuation 210921 . 210922) (punctuation 210920 . 210921) (punctuation 210919 . 210920) (symbol 210907 . 210919) (punctuation 210906 . 210907) (symbol 210891 . 210906) (punctuation 210890 . 210891) (punctuation 210889 . 210890) (symbol 210886 . 210889) (TYPENAME 210877 . 210885) (punctuation 210854 . 210855) (symbol 210828 . 210854) (punctuation 210827 . 210828) (punctuation 210826 . 210827) (symbol 210823 . 210826) (punctuation 210800 . 210801) (symbol 210790 . 210800) (punctuation 210789 . 210790) (punctuation 210788 . 210789) (symbol 210785 . 210788) (punctuation 210766 . 210767) (symbol 210757 . 210766) (punctuation 210756 . 210757) (punctuation 210755 . 210756) (symbol 210752 . 210755) (TYPENAME 210743 . 210751) (punctuation 210741 . 210742) (symbol 210729 . 210741) (CLASS 210723 . 210728) (punctuation 210722 . 210723) (TEMPLATE 210714 . 210722) (symbol 204456 . 204471) (semantic-list 202110 . 202158) (symbol 202097 . 202105) (semantic-list 202053 . 202096) (punctuation 202052 . 202053) (punctuation 202051 . 202052) (OPERATOR 202043 . 202051) (BOOL 202038 . 202042) (FRIEND 202031 . 202037) (punctuation 202025 . 202026) (number 202024 . 202025) (punctuation 202022 . 202023) (symbol 202017 . 202021) (punctuation 202016 . 202017) (punctuation 202015 . 202016) (punctuation 202014 . 202015) (INT 202011 . 202014) (punctuation 202009 . 202010) (symbol 202004 . 202009) (punctuation 202003 . 202004) (punctuation 202002 . 202003) (punctuation 202001 . 202002) (symbol 201991 . 202001) (punctuation 201990 . 201991) (symbol 201981 . 201990) (punctuation 201980 . 201981) (punctuation 201979 . 201980) (symbol 201976 . 201979) (punctuation 201957 . 201958) (symbol 201948 . 201957) (punctuation 201947 . 201948) (punctuation 201946 . 201947) (symbol 201943 . 201946) (TYPENAME 201934 . 201942) (punctuation 201932 . 201933) (symbol 201922 . 201932) (TYPENAME 201913 . 201921) (punctuation 201912 . 201913) (TEMPLATE 201904 . 201912) (semantic-list 201732 . 201780) (symbol 201719 . 201727) (semantic-list 201675 . 201718) (punctuation 201674 . 201675) (punctuation 201673 . 201674) (OPERATOR 201665 . 201673) (BOOL 201660 . 201664) (FRIEND 201653 . 201659) (punctuation 201647 . 201648) (number 201646 . 201647) (punctuation 201644 . 201645) (symbol 201639 . 201643) (punctuation 201638 . 201639) (punctuation 201637 . 201638) (punctuation 201636 . 201637) (INT 201633 . 201636) (punctuation 201631 . 201632) (symbol 201626 . 201631) (punctuation 201625 . 201626) (punctuation 201624 . 201625) (punctuation 201623 . 201624) (symbol 201613 . 201623) (punctuation 201612 . 201613) (symbol 201603 . 201612) (punctuation 201602 . 201603) (punctuation 201601 . 201602) (symbol 201598 . 201601) (punctuation 201579 . 201580) (symbol 201570 . 201579) (punctuation 201569 . 201570) (punctuation 201568 . 201569) (symbol 201565 . 201568) (TYPENAME 201556 . 201564) (punctuation 201554 . 201555) (symbol 201544 . 201554) (TYPENAME 201535 . 201543) (punctuation 201534 . 201535) (TEMPLATE 201526 . 201534) (semantic-list 201363 . 201402) (symbol 201350 . 201358) (semantic-list 201307 . 201349) (punctuation 201306 . 201307) (punctuation 201305 . 201306) (OPERATOR 201297 . 201305) (BOOL 201292 . 201296) (FRIEND 201285 . 201291) (semantic-list 200648 . 200695) (symbol 200635 . 200643) (semantic-list 200591 . 200634) (punctuation 200590 . 200591) (OPERATOR 200582 . 200590) (BOOL 200577 . 200581) (FRIEND 200570 . 200576) (punctuation 200564 . 200565) (number 200563 . 200564) (punctuation 200561 . 200562) (symbol 200556 . 200560) (punctuation 200555 . 200556) (punctuation 200554 . 200555) (punctuation 200553 . 200554) (INT 200550 . 200553) (punctuation 200548 . 200549) (symbol 200543 . 200548) (punctuation 200542 . 200543) (punctuation 200541 . 200542) (punctuation 200540 . 200541) (symbol 200530 . 200540) (punctuation 200529 . 200530) (symbol 200520 . 200529) (punctuation 200519 . 200520) (punctuation 200518 . 200519) (symbol 200515 . 200518) (punctuation 200496 . 200497) (symbol 200487 . 200496) (punctuation 200486 . 200487) (punctuation 200485 . 200486) (symbol 200482 . 200485) (TYPENAME 200473 . 200481) (punctuation 200471 . 200472) (symbol 200461 . 200471) (TYPENAME 200452 . 200460) (punctuation 200451 . 200452) (TEMPLATE 200443 . 200451) (semantic-list 200282 . 200329) (symbol 200269 . 200277) (semantic-list 200225 . 200268) (punctuation 200224 . 200225) (OPERATOR 200216 . 200224) (BOOL 200211 . 200215) (FRIEND 200204 . 200210) (punctuation 200198 . 200199) (number 200197 . 200198) (punctuation 200195 . 200196) (symbol 200190 . 200194) (punctuation 200189 . 200190) (punctuation 200188 . 200189) (punctuation 200187 . 200188) (INT 200184 . 200187) (punctuation 200182 . 200183) (symbol 200177 . 200182) (punctuation 200176 . 200177) (punctuation 200175 . 200176) (punctuation 200174 . 200175) (symbol 200164 . 200174) (punctuation 200163 . 200164) (symbol 200154 . 200163) (punctuation 200153 . 200154) (punctuation 200152 . 200153) (symbol 200149 . 200152) (punctuation 200130 . 200131) (symbol 200121 . 200130) (punctuation 200120 . 200121) (punctuation 200119 . 200120) (symbol 200116 . 200119) (TYPENAME 200107 . 200115) (punctuation 200105 . 200106) (symbol 200095 . 200105) (TYPENAME 200086 . 200094) (punctuation 200085 . 200086) (TEMPLATE 200077 . 200085) (semantic-list 199923 . 199963) (symbol 199910 . 199918) (semantic-list 199867 . 199909) (punctuation 199866 . 199867) (OPERATOR 199858 . 199866) (BOOL 199853 . 199857) (FRIEND 199846 . 199852) (semantic-list 199240 . 199288) (symbol 199227 . 199235) (semantic-list 199183 . 199226) (punctuation 199182 . 199183) (punctuation 199181 . 199182) (OPERATOR 199173 . 199181) (BOOL 199168 . 199172) (FRIEND 199161 . 199167) (punctuation 199155 . 199156) (number 199154 . 199155) (punctuation 199152 . 199153) (symbol 199147 . 199151) (punctuation 199146 . 199147) (punctuation 199145 . 199146) (punctuation 199144 . 199145) (INT 199141 . 199144) (punctuation 199139 . 199140) (symbol 199134 . 199139) (punctuation 199133 . 199134) (punctuation 199132 . 199133) (punctuation 199131 . 199132) (symbol 199121 . 199131) (punctuation 199120 . 199121) (symbol 199111 . 199120) (punctuation 199110 . 199111) (punctuation 199109 . 199110) (symbol 199106 . 199109) (punctuation 199087 . 199088) (symbol 199078 . 199087) (punctuation 199077 . 199078) (punctuation 199076 . 199077) (symbol 199073 . 199076) (TYPENAME 199064 . 199072) (punctuation 199062 . 199063) (symbol 199052 . 199062) (TYPENAME 199043 . 199051) (punctuation 199042 . 199043) (TEMPLATE 199034 . 199042) (semantic-list 198865 . 198913) (symbol 198852 . 198860) (semantic-list 198808 . 198851) (punctuation 198807 . 198808) (punctuation 198806 . 198807) (OPERATOR 198798 . 198806) (BOOL 198793 . 198797) (FRIEND 198786 . 198792) (punctuation 198780 . 198781) (number 198779 . 198780) (punctuation 198777 . 198778) (symbol 198772 . 198776) (punctuation 198771 . 198772) (punctuation 198770 . 198771) (punctuation 198769 . 198770) (INT 198766 . 198769) (punctuation 198764 . 198765) (symbol 198759 . 198764) (punctuation 198758 . 198759) (punctuation 198757 . 198758) (punctuation 198756 . 198757) (symbol 198746 . 198756) (punctuation 198745 . 198746) (symbol 198736 . 198745) (punctuation 198735 . 198736) (punctuation 198734 . 198735) (symbol 198731 . 198734) (punctuation 198712 . 198713) (symbol 198703 . 198712) (punctuation 198702 . 198703) (punctuation 198701 . 198702) (symbol 198698 . 198701) (TYPENAME 198689 . 198697) (punctuation 198687 . 198688) (symbol 198677 . 198687) (TYPENAME 198668 . 198676) (punctuation 198667 . 198668) (TEMPLATE 198659 . 198667) (semantic-list 198499 . 198538) (symbol 198486 . 198494) (semantic-list 198443 . 198485) (punctuation 198442 . 198443) (punctuation 198441 . 198442) (OPERATOR 198433 . 198441) (BOOL 198428 . 198432) (FRIEND 198421 . 198427) (semantic-list 197798 . 197845) (symbol 197785 . 197793) (semantic-list 197741 . 197784) (punctuation 197740 . 197741) (OPERATOR 197732 . 197740) (BOOL 197727 . 197731) (FRIEND 197720 . 197726) (punctuation 197714 . 197715) (number 197713 . 197714) (punctuation 197711 . 197712) (symbol 197706 . 197710) (punctuation 197705 . 197706) (punctuation 197704 . 197705) (punctuation 197703 . 197704) (INT 197700 . 197703) (punctuation 197698 . 197699) (symbol 197693 . 197698) (punctuation 197692 . 197693) (punctuation 197691 . 197692) (punctuation 197690 . 197691) (symbol 197680 . 197690) (punctuation 197679 . 197680) (symbol 197670 . 197679) (punctuation 197669 . 197670) (punctuation 197668 . 197669) (symbol 197665 . 197668) (punctuation 197646 . 197647) (symbol 197637 . 197646) (punctuation 197636 . 197637) (punctuation 197635 . 197636) (symbol 197632 . 197635) (TYPENAME 197623 . 197631) (punctuation 197621 . 197622) (symbol 197611 . 197621) (TYPENAME 197602 . 197610) (punctuation 197601 . 197602) (TEMPLATE 197593 . 197601) (semantic-list 197435 . 197482) (symbol 197422 . 197430) (semantic-list 197378 . 197421) (punctuation 197377 . 197378) (OPERATOR 197369 . 197377) (BOOL 197364 . 197368) (FRIEND 197357 . 197363) (punctuation 197351 . 197352) (number 197350 . 197351) (punctuation 197348 . 197349) (symbol 197343 . 197347) (punctuation 197342 . 197343) (punctuation 197341 . 197342) (punctuation 197340 . 197341) (INT 197337 . 197340) (punctuation 197335 . 197336) (symbol 197330 . 197335) (punctuation 197329 . 197330) (punctuation 197328 . 197329) (punctuation 197327 . 197328) (symbol 197317 . 197327) (punctuation 197316 . 197317) (symbol 197307 . 197316) (punctuation 197306 . 197307) (punctuation 197305 . 197306) (symbol 197302 . 197305) (punctuation 197283 . 197284) (symbol 197274 . 197283) (punctuation 197273 . 197274) (punctuation 197272 . 197273) (symbol 197269 . 197272) (TYPENAME 197260 . 197268) (punctuation 197258 . 197259) (symbol 197248 . 197258) (TYPENAME 197239 . 197247) (punctuation 197238 . 197239) (TEMPLATE 197230 . 197238) (semantic-list 194399 . 197119) (symbol 194386 . 194394) (semantic-list 194343 . 194385) (punctuation 194342 . 194343) (OPERATOR 194334 . 194342) (BOOL 194329 . 194333) (FRIEND 194322 . 194328) (semantic-list 193344 . 193392) (symbol 193331 . 193339) (semantic-list 193287 . 193330) (punctuation 193286 . 193287) (punctuation 193285 . 193286) (OPERATOR 193277 . 193285) (BOOL 193272 . 193276) (FRIEND 193265 . 193271) (punctuation 193259 . 193260) (number 193258 . 193259) (punctuation 193256 . 193257) (symbol 193251 . 193255) (punctuation 193250 . 193251) (punctuation 193249 . 193250) (punctuation 193248 . 193249) (INT 193245 . 193248) (punctuation 193243 . 193244) (symbol 193238 . 193243) (punctuation 193237 . 193238) (punctuation 193236 . 193237) (punctuation 193235 . 193236) (symbol 193225 . 193235) (punctuation 193224 . 193225) (symbol 193215 . 193224) (punctuation 193214 . 193215) (punctuation 193213 . 193214) (symbol 193210 . 193213) (punctuation 193191 . 193192) (symbol 193182 . 193191) (punctuation 193181 . 193182) (punctuation 193180 . 193181) (symbol 193177 . 193180) (TYPENAME 193168 . 193176) (punctuation 193166 . 193167) (symbol 193156 . 193166) (TYPENAME 193147 . 193155) (punctuation 193146 . 193147) (TEMPLATE 193138 . 193146) (semantic-list 192978 . 193026) (symbol 192965 . 192973) (semantic-list 192921 . 192964) (punctuation 192920 . 192921) (punctuation 192919 . 192920) (OPERATOR 192911 . 192919) (BOOL 192906 . 192910) (FRIEND 192899 . 192905) (punctuation 192893 . 192894) (number 192892 . 192893) (punctuation 192890 . 192891) (symbol 192885 . 192889) (punctuation 192884 . 192885) (punctuation 192883 . 192884) (punctuation 192882 . 192883) (INT 192879 . 192882) (punctuation 192877 . 192878) (symbol 192872 . 192877) (punctuation 192871 . 192872) (punctuation 192870 . 192871) (punctuation 192869 . 192870) (symbol 192859 . 192869) (punctuation 192858 . 192859) (symbol 192849 . 192858) (punctuation 192848 . 192849) (punctuation 192847 . 192848) (symbol 192844 . 192847) (punctuation 192825 . 192826) (symbol 192816 . 192825) (punctuation 192815 . 192816) (punctuation 192814 . 192815) (symbol 192811 . 192814) (TYPENAME 192802 . 192810) (punctuation 192800 . 192801) (symbol 192790 . 192800) (TYPENAME 192781 . 192789) (punctuation 192780 . 192781) (TEMPLATE 192772 . 192780) (semantic-list 192620 . 192660) (symbol 192607 . 192615) (semantic-list 192564 . 192606) (punctuation 192563 . 192564) (punctuation 192562 . 192563) (OPERATOR 192554 . 192562) (BOOL 192549 . 192553) (FRIEND 192542 . 192548) (semantic-list 191968 . 192016) (symbol 191955 . 191963) (semantic-list 191911 . 191954) (punctuation 191910 . 191911) (punctuation 191909 . 191910) (OPERATOR 191901 . 191909) (BOOL 191896 . 191900) (FRIEND 191889 . 191895) (punctuation 191883 . 191884) (number 191882 . 191883) (punctuation 191880 . 191881) (symbol 191875 . 191879) (punctuation 191874 . 191875) (punctuation 191873 . 191874) (punctuation 191872 . 191873) (INT 191869 . 191872) (punctuation 191867 . 191868) (symbol 191862 . 191867) (punctuation 191861 . 191862) (punctuation 191860 . 191861) (punctuation 191859 . 191860) (symbol 191849 . 191859) (punctuation 191848 . 191849) (symbol 191839 . 191848) (punctuation 191838 . 191839) (punctuation 191837 . 191838) (symbol 191834 . 191837) (punctuation 191815 . 191816) (symbol 191806 . 191815) (punctuation 191805 . 191806) (punctuation 191804 . 191805) (symbol 191801 . 191804) (TYPENAME 191792 . 191800) (punctuation 191790 . 191791) (symbol 191780 . 191790) (TYPENAME 191771 . 191779) (punctuation 191770 . 191771) (TEMPLATE 191762 . 191770) (semantic-list 191606 . 191654) (symbol 191593 . 191601) (semantic-list 191549 . 191592) (punctuation 191548 . 191549) (punctuation 191547 . 191548) (OPERATOR 191539 . 191547) (BOOL 191534 . 191538) (FRIEND 191527 . 191533) (punctuation 191521 . 191522) (number 191520 . 191521) (punctuation 191518 . 191519) (symbol 191513 . 191517) (punctuation 191512 . 191513) (punctuation 191511 . 191512) (punctuation 191510 . 191511) (INT 191507 . 191510) (punctuation 191505 . 191506) (symbol 191500 . 191505) (punctuation 191499 . 191500) (punctuation 191498 . 191499) (punctuation 191497 . 191498) (symbol 191487 . 191497) (punctuation 191486 . 191487) (symbol 191477 . 191486) (punctuation 191476 . 191477) (punctuation 191475 . 191476) (symbol 191472 . 191475) (punctuation 191453 . 191454) (symbol 191444 . 191453) (punctuation 191443 . 191444) (punctuation 191442 . 191443) (symbol 191439 . 191442) (TYPENAME 191430 . 191438) (punctuation 191428 . 191429) (symbol 191418 . 191428) (TYPENAME 191409 . 191417) (punctuation 191408 . 191409) (TEMPLATE 191400 . 191408) (semantic-list 188763 . 191292) (symbol 188750 . 188758) (semantic-list 188707 . 188749) (punctuation 188706 . 188707) (punctuation 188705 . 188706) (OPERATOR 188697 . 188705) (BOOL 188692 . 188696) (FRIEND 188685 . 188691) (semantic-list 183634 . 183651) (symbol 183630 . 183634) (VOID 183625 . 183629) (punctuation 172236 . 172237) (punctuation 169822 . 169823) (punctuation 169821 . 169822) (punctuation 169820 . 169821) (punctuation 169818 . 169819) (punctuation 169773 . 169774) (symbol 169769 . 169773) (punctuation 169767 . 169768) (punctuation 169766 . 169767) (punctuation 169765 . 169766) (CLASS 169760 . 169765) (punctuation 169759 . 169760) (TEMPLATE 169751 . 169759) (punctuation 167937 . 167938) (punctuation 167936 . 167937) (punctuation 167935 . 167936) (punctuation 167933 . 167934) (punctuation 167904 . 167905) (symbol 167900 . 167904) (punctuation 167898 . 167899) (punctuation 167897 . 167898) (punctuation 167896 . 167897) (CLASS 167891 . 167896) (punctuation 167890 . 167891) (TEMPLATE 167882 . 167890) (punctuation 162875 . 162876) (punctuation 162123 . 162124) (semantic-list 160405 . 161421) (symbol 160392 . 160400) (semantic-list 160389 . 160391) (symbol 160384 . 160389) (VOID 160379 . 160383) (semantic-list 158692 . 159223) (symbol 158679 . 158687) (CONST 158673 . 158678) (semantic-list 158670 . 158672) (symbol 158662 . 158670) (symbol 158652 . 158661) (semantic-list 156455 . 157079) (symbol 156442 . 156450) (CONST 156436 . 156441) (semantic-list 156433 . 156435) (symbol 156429 . 156433) (symbol 156419 . 156428) (semantic-list 154294 . 154930) (symbol 154281 . 154289) (CONST 154275 . 154280) (semantic-list 154272 . 154274) (symbol 154267 . 154272) (BOOL 154262 . 154266) (semantic-list 152603 . 152665) (symbol 152590 . 152598) (CONST 152584 . 152589) (semantic-list 152581 . 152583) (symbol 152576 . 152581) (punctuation 152574 . 152575) (symbol 152560 . 152574) (punctuation 152559 . 152560) (symbol 152544 . 152559) (semantic-list 152446 . 152502) (symbol 152433 . 152441) (semantic-list 152430 . 152432) (symbol 152425 . 152430) (punctuation 152423 . 152424) (symbol 152415 . 152423) (punctuation 152414 . 152415) (symbol 152399 . 152414) (semantic-list 150808 . 150843) (symbol 150795 . 150803) (semantic-list 150773 . 150794) (symbol 150757 . 150773) (punctuation 150755 . 150756) (symbol 150741 . 150755) (punctuation 150740 . 150741) (symbol 150725 . 150740) (STATIC 150718 . 150724) (symbol 150698 . 150713) (semantic-list 150601 . 150636) (symbol 150588 . 150596) (semantic-list 150572 . 150587) (symbol 150556 . 150572) (punctuation 150554 . 150555) (symbol 150546 . 150554) (punctuation 150545 . 150546) (symbol 150530 . 150545) (STATIC 150523 . 150529) (symbol 150503 . 150518) (semantic-list 148606 . 148662) (symbol 148593 . 148601) (CONST 148587 . 148592) (semantic-list 148584 . 148586) (symbol 148579 . 148584) (symbol 148556 . 148578) (semantic-list 147620 . 147674) (symbol 147607 . 147615) (CONST 147601 . 147606) (semantic-list 147598 . 147600) (symbol 147591 . 147598) (symbol 147568 . 147590) (semantic-list 146675 . 146706) (symbol 146662 . 146670) (CONST 146656 . 146661) (semantic-list 146653 . 146655) (symbol 146649 . 146653) (symbol 146626 . 146648) (semantic-list 146523 . 146572) (symbol 146510 . 146518) (semantic-list 146507 . 146509) (symbol 146503 . 146507) (symbol 146486 . 146502) (semantic-list 145615 . 145648) (symbol 145602 . 145610) (CONST 145596 . 145601) (semantic-list 145593 . 145595) (symbol 145587 . 145593) (symbol 145564 . 145586) (semantic-list 145461 . 145508) (symbol 145448 . 145456) (semantic-list 145445 . 145447) (symbol 145439 . 145445) (symbol 145422 . 145438) (semantic-list 144501 . 144594) (symbol 144488 . 144496) (CONST 144482 . 144487) (semantic-list 144479 . 144481) (symbol 144475 . 144479) (symbol 144460 . 144474) (semantic-list 143588 . 143618) (symbol 143575 . 143583) (CONST 143569 . 143574) (semantic-list 143566 . 143568) (symbol 143563 . 143566) (symbol 143548 . 143562) (semantic-list 143408 . 143495) (symbol 143395 . 143403) (semantic-list 143392 . 143394) (symbol 143389 . 143392) (symbol 143380 . 143388) (semantic-list 142528 . 142623) (symbol 142515 . 142523) (CONST 142509 . 142514) (semantic-list 142506 . 142508) (symbol 142500 . 142506) (symbol 142485 . 142499) (semantic-list 141634 . 141666) (symbol 141621 . 141629) (CONST 141615 . 141620) (semantic-list 141612 . 141614) (symbol 141607 . 141612) (symbol 141592 . 141606) (semantic-list 141448 . 141537) (symbol 141435 . 141443) (semantic-list 141432 . 141434) (symbol 141427 . 141432) (symbol 141418 . 141426) (punctuation 140427 . 140428) (punctuation 139450 . 139451) (punctuation 139100 . 139101) (punctuation 133380 . 133381) (number 133379 . 133380) (punctuation 133377 . 133378) (symbol 133359 . 133363) (punctuation 133358 . 133359) (punctuation 133357 . 133358) (punctuation 133356 . 133357) (INT 133353 . 133356) (punctuation 133351 . 133352) (symbol 133346 . 133351) (punctuation 133345 . 133346) (punctuation 133344 . 133345) (punctuation 133343 . 133344) (symbol 133329 . 133343) (punctuation 133328 . 133329) (punctuation 133327 . 133328) (symbol 133315 . 133327) (TYPENAME 133306 . 133314) (punctuation 133304 . 133305) (symbol 133292 . 133304) (punctuation 133291 . 133292) (symbol 133284 . 133291) (punctuation 133283 . 133284) (punctuation 133282 . 133283) (symbol 133279 . 133282) (symbol 133259 . 133261) (symbol 133253 . 133258) (punctuation 133252 . 133253) (punctuation 133251 . 133252) (punctuation 133250 . 133251) (symbol 133242 . 133250) (punctuation 133241 . 133242) (punctuation 133240 . 133241) (symbol 133228 . 133240) (TYPENAME 133219 . 133227) (punctuation 133217 . 133218) (symbol 133205 . 133217) (punctuation 133204 . 133205) (symbol 133197 . 133204) (punctuation 133196 . 133197) (punctuation 133195 . 133196) (symbol 133192 . 133195) (punctuation 133173 . 133174) (symbol 133164 . 133173) (punctuation 133163 . 133164) (punctuation 133162 . 133163) (symbol 133159 . 133162) (TYPENAME 133150 . 133158) (punctuation 133148 . 133149) (symbol 133136 . 133148) (CLASS 133130 . 133135) (punctuation 133129 . 133130) (TEMPLATE 133121 . 133129) (punctuation 129340 . 129341) (number 129339 . 129340) (punctuation 129337 . 129338) (symbol 129319 . 129323) (punctuation 129318 . 129319) (punctuation 129317 . 129318) (punctuation 129316 . 129317) (INT 129313 . 129316) (punctuation 129311 . 129312) (symbol 129306 . 129311) (punctuation 129305 . 129306) (punctuation 129304 . 129305) (punctuation 129303 . 129304) (symbol 129289 . 129303) (punctuation 129288 . 129289) (punctuation 129287 . 129288) (symbol 129275 . 129287) (TYPENAME 129266 . 129274) (punctuation 129264 . 129265) (symbol 129252 . 129264) (punctuation 129251 . 129252) (symbol 129244 . 129251) (punctuation 129243 . 129244) (punctuation 129242 . 129243) (symbol 129239 . 129242) (symbol 129219 . 129221) (symbol 129213 . 129218) (punctuation 129212 . 129213) (punctuation 129211 . 129212) (punctuation 129210 . 129211) (symbol 129202 . 129210) (punctuation 129201 . 129202) (punctuation 129200 . 129201) (symbol 129188 . 129200) (TYPENAME 129179 . 129187) (punctuation 129177 . 129178) (symbol 129165 . 129177) (punctuation 129164 . 129165) (symbol 129157 . 129164) (punctuation 129156 . 129157) (punctuation 129155 . 129156) (symbol 129152 . 129155) (punctuation 129133 . 129134) (symbol 129124 . 129133) (punctuation 129123 . 129124) (punctuation 129122 . 129123) (symbol 129119 . 129122) (TYPENAME 129110 . 129118) (punctuation 129108 . 129109) (symbol 129096 . 129108) (CLASS 129090 . 129095) (punctuation 129089 . 129090) (TEMPLATE 129081 . 129089) (punctuation 124113 . 124114) (number 124112 . 124113) (punctuation 124110 . 124111) (symbol 124105 . 124109) (punctuation 124104 . 124105) (punctuation 124103 . 124104) (punctuation 124102 . 124103) (INT 124099 . 124102) (punctuation 124097 . 124098) (symbol 124092 . 124097) (punctuation 124091 . 124092) (punctuation 124090 . 124091) (punctuation 124089 . 124090) (symbol 124080 . 124089) (punctuation 124078 . 124079) (symbol 124066 . 124078) (punctuation 124065 . 124066) (symbol 124051 . 124065) (punctuation 124050 . 124051) (punctuation 124049 . 124050) (symbol 124046 . 124049) (punctuation 124027 . 124028) (symbol 124018 . 124027) (punctuation 124017 . 124018) (punctuation 124016 . 124017) (symbol 124013 . 124016) (TYPENAME 124004 . 124012) (punctuation 124002 . 124003) (symbol 123993 . 124002) (CLASS 123987 . 123992) (punctuation 123986 . 123987) (TEMPLATE 123978 . 123986) (punctuation 121642 . 121643) (number 121641 . 121642) (punctuation 121639 . 121640) (symbol 121634 . 121638) (punctuation 121633 . 121634) (punctuation 121632 . 121633) (punctuation 121631 . 121632) (INT 121628 . 121631) (punctuation 121626 . 121627) (symbol 121621 . 121626) (punctuation 121620 . 121621) (punctuation 121619 . 121620) (punctuation 121618 . 121619) (symbol 121609 . 121618) (punctuation 121607 . 121608) (symbol 121595 . 121607) (punctuation 121594 . 121595) (symbol 121580 . 121594) (punctuation 121579 . 121580) (punctuation 121578 . 121579) (symbol 121575 . 121578) (punctuation 121556 . 121557) (symbol 121547 . 121556) (punctuation 121546 . 121547) (punctuation 121545 . 121546) (symbol 121542 . 121545) (TYPENAME 121533 . 121541) (punctuation 121531 . 121532) (symbol 121522 . 121531) (CLASS 121516 . 121521) (punctuation 121515 . 121516) (TEMPLATE 121507 . 121515) (OPERATOR 104402 . 104410) (punctuation 104396 . 104397) (number 104394 . 104395) (punctuation 104392 . 104393) (symbol 104387 . 104391) (punctuation 104386 . 104387) (punctuation 104385 . 104386) (punctuation 104384 . 104385) (INT 104380 . 104383) (punctuation 104378 . 104379) (symbol 104225 . 104230) (punctuation 104224 . 104225) (punctuation 104223 . 104224) (punctuation 104222 . 104223) (punctuation 104221 . 104222) (symbol 104211 . 104221) (punctuation 104210 . 104211) (punctuation 104209 . 104210) (symbol 104201 . 104209) (TYPENAME 104192 . 104200) (punctuation 104191 . 104192) (symbol 104175 . 104191) (punctuation 104174 . 104175) (punctuation 104173 . 104174) (symbol 104170 . 104173) (punctuation 104168 . 104169) (symbol 104159 . 104168) (punctuation 104158 . 104159) (symbol 104151 . 104158) (punctuation 104150 . 104151) (punctuation 104149 . 104150) (symbol 104146 . 104149) (symbol 104142 . 104145) (symbol 104138 . 104141) (symbol 104039 . 104044) (punctuation 104038 . 104039) (punctuation 104037 . 104038) (punctuation 104036 . 104037) (symbol 104027 . 104036) (punctuation 104026 . 104027) (symbol 104013 . 104026) (punctuation 104012 . 104013) (punctuation 104011 . 104012) (symbol 104005 . 104011) (symbol 104001 . 104004) (symbol 103978 . 103981) (symbol 103972 . 103977) (punctuation 103971 . 103972) (punctuation 103970 . 103971) (punctuation 103969 . 103970) (symbol 103959 . 103969) (punctuation 103958 . 103959) (punctuation 103957 . 103958) (symbol 103949 . 103957) (TYPENAME 103940 . 103948) (punctuation 103938 . 103939) (symbol 103929 . 103938) (punctuation 103928 . 103929) (symbol 103921 . 103928) (punctuation 103920 . 103921) (punctuation 103919 . 103920) (symbol 103916 . 103919) (symbol 103912 . 103915) (symbol 103889 . 103892) (symbol 103883 . 103888) (punctuation 103882 . 103883) (punctuation 103881 . 103882) (punctuation 103880 . 103881) (punctuation 103879 . 103880) (symbol 103869 . 103879) (punctuation 103868 . 103869) (symbol 103860 . 103868) (punctuation 103859 . 103860) (punctuation 103858 . 103859) (symbol 103852 . 103858) (punctuation 103850 . 103851) (symbol 103841 . 103850) (punctuation 103840 . 103841) (symbol 103833 . 103840) (punctuation 103832 . 103833) (punctuation 103831 . 103832) (symbol 103828 . 103831) (symbol 103824 . 103827) (symbol 103801 . 103804) (symbol 103795 . 103800) (punctuation 103794 . 103795) (punctuation 103793 . 103794) (punctuation 103792 . 103793) (symbol 103783 . 103792) (punctuation 103782 . 103783) (symbol 103772 . 103782) (punctuation 103771 . 103772) (punctuation 103770 . 103771) (symbol 103767 . 103770) (symbol 103763 . 103766) (punctuation 103742 . 103743) (symbol 103732 . 103741) (punctuation 103731 . 103732) (punctuation 103730 . 103731) (symbol 103727 . 103730) (TYPENAME 103718 . 103726) (punctuation 103716 . 103717) (symbol 103707 . 103716) (TYPENAME 103698 . 103706) (punctuation 103696 . 103697) (TEMPLATE 103687 . 103695) (punctuation 102248 . 102249) (number 102247 . 102248) (punctuation 102245 . 102246) (symbol 102240 . 102244) (punctuation 102239 . 102240) (punctuation 102238 . 102239) (punctuation 102237 . 102238) (INT 102234 . 102237) (punctuation 102232 . 102233) (symbol 102227 . 102232) (punctuation 102226 . 102227) (punctuation 102225 . 102226) (punctuation 102224 . 102225) (symbol 102220 . 102224) (punctuation 102219 . 102220) (punctuation 102218 . 102219) (punctuation 102217 . 102218) (symbol 102204 . 102217) (punctuation 102203 . 102204) (symbol 102187 . 102203) (punctuation 102186 . 102187) (punctuation 102185 . 102186) (symbol 102182 . 102185) (TYPENAME 102173 . 102181) (punctuation 102172 . 102173) (symbol 102164 . 102172) (punctuation 102163 . 102164) (punctuation 102162 . 102163) (symbol 102159 . 102162) (symbol 102138 . 102141) (symbol 102132 . 102137) (punctuation 102131 . 102132) (punctuation 102130 . 102131) (punctuation 102129 . 102130) (symbol 102116 . 102129) (punctuation 102115 . 102116) (symbol 102103 . 102115) (punctuation 102102 . 102103) (punctuation 102101 . 102102) (symbol 102098 . 102101) (punctuation 102079 . 102080) (symbol 102070 . 102079) (punctuation 102069 . 102070) (punctuation 102068 . 102069) (symbol 102065 . 102068) (TYPENAME 102056 . 102064) (punctuation 102054 . 102055) (symbol 102041 . 102054) (TYPENAME 102032 . 102040) (punctuation 102031 . 102032) (TEMPLATE 102023 . 102031) (punctuation 101802 . 101803) (number 101801 . 101802) (punctuation 101799 . 101800) (symbol 101794 . 101798) (punctuation 101793 . 101794) (punctuation 101792 . 101793) (punctuation 101791 . 101792) (INT 101788 . 101791) (punctuation 101786 . 101787) (symbol 101781 . 101786) (punctuation 101780 . 101781) (punctuation 101779 . 101780) (punctuation 101778 . 101779) (symbol 101765 . 101778) (punctuation 101764 . 101765) (symbol 101752 . 101764) (punctuation 101751 . 101752) (punctuation 101750 . 101751) (symbol 101747 . 101750) (punctuation 101728 . 101729) (symbol 101719 . 101728) (punctuation 101718 . 101719) (punctuation 101717 . 101718) (symbol 101714 . 101717) (TYPENAME 101705 . 101713) (punctuation 101703 . 101704) (symbol 101690 . 101703) (TYPENAME 101681 . 101689) (punctuation 101680 . 101681) (TEMPLATE 101672 . 101680) (semantic-list 99860 . 100787) (symbol 99847 . 99855) (CONST 99841 . 99846) (semantic-list 99838 . 99840) (symbol 99831 . 99838) (symbol 99819 . 99830) (CONST 99813 . 99818) (symbol 99803 . 99812) (punctuation 99797 . 99798) (number 99796 . 99797) (punctuation 99794 . 99795) (symbol 99789 . 99793) (punctuation 99788 . 99789) (punctuation 99787 . 99788) (punctuation 99786 . 99787) (INT 99783 . 99786) (punctuation 99781 . 99782) (symbol 99776 . 99781) (punctuation 99775 . 99776) (punctuation 99774 . 99775) (punctuation 99773 . 99774) (symbol 99769 . 99773) (punctuation 99768 . 99769) (punctuation 99767 . 99768) (punctuation 99766 . 99767) (symbol 99755 . 99766) (punctuation 99754 . 99755) (symbol 99740 . 99754) (punctuation 99739 . 99740) (punctuation 99738 . 99739) (symbol 99735 . 99738) (TYPENAME 99726 . 99734) (punctuation 99725 . 99726) (symbol 99717 . 99725) (punctuation 99716 . 99717) (punctuation 99715 . 99716) (symbol 99712 . 99715) (symbol 99691 . 99694) (symbol 99685 . 99690) (punctuation 99684 . 99685) (punctuation 99683 . 99684) (punctuation 99682 . 99683) (symbol 99671 . 99682) (punctuation 99670 . 99671) (symbol 99660 . 99670) (punctuation 99659 . 99660) (punctuation 99658 . 99659) (symbol 99655 . 99658) (punctuation 99636 . 99637) (symbol 99627 . 99636) (punctuation 99626 . 99627) (punctuation 99625 . 99626) (symbol 99622 . 99625) (TYPENAME 99613 . 99621) (punctuation 99611 . 99612) (symbol 99600 . 99611) (TYPENAME 99591 . 99599) (punctuation 99590 . 99591) (TEMPLATE 99582 . 99590) (semantic-list 98575 . 99496) (symbol 98562 . 98570) (semantic-list 98559 . 98561) (symbol 98552 . 98559) (symbol 98540 . 98551) (punctuation 98534 . 98535) (number 98533 . 98534) (punctuation 98531 . 98532) (symbol 98526 . 98530) (punctuation 98525 . 98526) (punctuation 98524 . 98525) (punctuation 98523 . 98524) (INT 98520 . 98523) (punctuation 98518 . 98519) (symbol 98513 . 98518) (punctuation 98512 . 98513) (punctuation 98511 . 98512) (punctuation 98510 . 98511) (symbol 98499 . 98510) (punctuation 98498 . 98499) (symbol 98488 . 98498) (punctuation 98487 . 98488) (punctuation 98486 . 98487) (symbol 98483 . 98486) (punctuation 98464 . 98465) (symbol 98455 . 98464) (punctuation 98454 . 98455) (punctuation 98453 . 98454) (symbol 98450 . 98453) (TYPENAME 98441 . 98449) (punctuation 98439 . 98440) (symbol 98428 . 98439) (TYPENAME 98419 . 98427) (punctuation 98418 . 98419) (TEMPLATE 98410 . 98418) (semantic-list 97390 . 97476) (symbol 97377 . 97385) (CONST 97371 . 97376) (semantic-list 97368 . 97370) (symbol 97365 . 97368) (symbol 97353 . 97364) (CONST 97347 . 97352) (symbol 97337 . 97346) (punctuation 97331 . 97332) (number 97330 . 97331) (punctuation 97328 . 97329) (symbol 97323 . 97327) (punctuation 97322 . 97323) (punctuation 97321 . 97322) (punctuation 97320 . 97321) (INT 97317 . 97320) (punctuation 97315 . 97316) (symbol 97310 . 97315) (punctuation 97309 . 97310) (punctuation 97308 . 97309) (punctuation 97307 . 97308) (symbol 97296 . 97307) (punctuation 97295 . 97296) (symbol 97285 . 97295) (punctuation 97284 . 97285) (punctuation 97283 . 97284) (symbol 97280 . 97283) (punctuation 97261 . 97262) (symbol 97252 . 97261) (punctuation 97251 . 97252) (punctuation 97250 . 97251) (symbol 97247 . 97250) (TYPENAME 97238 . 97246) (punctuation 97236 . 97237) (symbol 97225 . 97236) (TYPENAME 97216 . 97224) (punctuation 97215 . 97216) (TEMPLATE 97207 . 97215) (semantic-list 97039 . 97125) (symbol 97026 . 97034) (semantic-list 97023 . 97025) (symbol 97020 . 97023) (symbol 97008 . 97019) (punctuation 97002 . 97003) (number 97001 . 97002) (punctuation 96999 . 97000) (symbol 96994 . 96998) (punctuation 96993 . 96994) (punctuation 96992 . 96993) (punctuation 96991 . 96992) (INT 96988 . 96991) (punctuation 96986 . 96987) (symbol 96981 . 96986) (punctuation 96980 . 96981) (punctuation 96979 . 96980) (punctuation 96978 . 96979) (symbol 96967 . 96978) (punctuation 96966 . 96967) (symbol 96956 . 96966) (punctuation 96955 . 96956) (punctuation 96954 . 96955) (symbol 96951 . 96954) (punctuation 96932 . 96933) (symbol 96923 . 96932) (punctuation 96922 . 96923) (punctuation 96921 . 96922) (symbol 96918 . 96921) (TYPENAME 96909 . 96917) (punctuation 96907 . 96908) (symbol 96896 . 96907) (TYPENAME 96887 . 96895) (punctuation 96886 . 96887) (TEMPLATE 96878 . 96886) (semantic-list 95556 . 95673) (semantic-list 95530 . 95532) (symbol 95527 . 95530) (symbol 95517 . 95526) (punctuation 95511 . 95512) (number 95510 . 95511) (punctuation 95508 . 95509) (punctuation 95506 . 95507) (INT 95503 . 95506) (punctuation 95468 . 95469) (symbol 95463 . 95468) (punctuation 95462 . 95463) (punctuation 95461 . 95462) (punctuation 95460 . 95461) (symbol 95451 . 95460) (punctuation 95449 . 95450) (symbol 95437 . 95449) (punctuation 95436 . 95437) (symbol 95411 . 95436) (punctuation 95410 . 95411) (punctuation 95409 . 95410) (symbol 95403 . 95409) (symbol 95366 . 95369) (symbol 95360 . 95365) (punctuation 95359 . 95360) (punctuation 95358 . 95359) (punctuation 95357 . 95358) (symbol 95348 . 95357) (punctuation 95346 . 95347) (symbol 95334 . 95346) (punctuation 95333 . 95334) (symbol 95326 . 95333) (punctuation 95325 . 95326) (punctuation 95324 . 95325) (symbol 95321 . 95324) (symbol 95317 . 95320) (punctuation 95316 . 95317) (symbol 95305 . 95316) (punctuation 95304 . 95305) (punctuation 95303 . 95304) (symbol 95297 . 95303) (punctuation 95282 . 95283) (punctuation 95281 . 95282) (symbol 95270 . 95281) (punctuation 95269 . 95270) (symbol 95260 . 95269) (punctuation 95259 . 95260) (punctuation 95258 . 95259) (symbol 95252 . 95258) (punctuation 95250 . 95251) (symbol 95240 . 95249) (TYPENAME 95231 . 95239) (punctuation 95229 . 95230) (symbol 95218 . 95229) (TYPENAME 95209 . 95217) (punctuation 95208 . 95209) (TEMPLATE 95200 . 95208) (semantic-list 93285 . 93428) (semantic-list 93259 . 93261) (symbol 93256 . 93259) (symbol 93246 . 93255) (punctuation 93240 . 93241) (number 93239 . 93240) (punctuation 93237 . 93238) (punctuation 93235 . 93236) (INT 93232 . 93235) (punctuation 93213 . 93214) (symbol 93208 . 93213) (punctuation 93207 . 93208) (punctuation 93206 . 93207) (punctuation 93205 . 93206) (symbol 93196 . 93205) (punctuation 93194 . 93195) (symbol 93182 . 93194) (punctuation 93181 . 93182) (symbol 93156 . 93181) (punctuation 93155 . 93156) (punctuation 93154 . 93155) (symbol 93148 . 93154) (symbol 93144 . 93147) (symbol 93123 . 93126) (symbol 93117 . 93122) (punctuation 93116 . 93117) (punctuation 93115 . 93116) (punctuation 93114 . 93115) (symbol 93105 . 93114) (punctuation 93103 . 93104) (symbol 93091 . 93103) (punctuation 93090 . 93091) (symbol 93077 . 93090) (punctuation 93076 . 93077) (punctuation 93075 . 93076) (symbol 93069 . 93075) (symbol 93048 . 93051) (symbol 93042 . 93047) (punctuation 93041 . 93042) (punctuation 93040 . 93041) (punctuation 93039 . 93040) (symbol 93030 . 93039) (punctuation 93029 . 93030) (symbol 93016 . 93029) (punctuation 93015 . 93016) (punctuation 93014 . 93015) (symbol 93008 . 93014) (symbol 93004 . 93007) (punctuation 92985 . 92986) (symbol 92973 . 92984) (punctuation 92972 . 92973) (punctuation 92971 . 92972) (symbol 92965 . 92971) (punctuation 92950 . 92951) (punctuation 92949 . 92950) (symbol 92938 . 92949) (punctuation 92937 . 92938) (symbol 92928 . 92937) (punctuation 92927 . 92928) (punctuation 92926 . 92927) (symbol 92920 . 92926) (punctuation 92918 . 92919) (symbol 92908 . 92917) (TYPENAME 92899 . 92907) (punctuation 92897 . 92898) (symbol 92886 . 92897) (TYPENAME 92877 . 92885) (punctuation 92876 . 92877) (TEMPLATE 92868 . 92876) (punctuation 91203 . 91204) (number 91202 . 91203) (punctuation 91200 . 91201) (punctuation 91198 . 91199) (INT 91195 . 91198) (punctuation 91193 . 91194) (symbol 91188 . 91193) (punctuation 91187 . 91188) (punctuation 91186 . 91187) (punctuation 91185 . 91186) (symbol 91172 . 91185) (punctuation 91171 . 91172) (symbol 91158 . 91171) (punctuation 91157 . 91158) (punctuation 91156 . 91157) (symbol 91150 . 91156) (symbol 91129 . 91132) (symbol 91123 . 91128) (punctuation 91122 . 91123) (punctuation 91121 . 91122) (punctuation 91120 . 91121) (symbol 91110 . 91120) (punctuation 91108 . 91109) (symbol 91095 . 91108) (punctuation 91094 . 91095) (symbol 91087 . 91094) (punctuation 91086 . 91087) (punctuation 91085 . 91086) (symbol 91082 . 91085) (symbol 91078 . 91081) (punctuation 91059 . 91060) (symbol 91048 . 91059) (punctuation 91047 . 91048) (punctuation 91046 . 91047) (symbol 91040 . 91046) (punctuation 91038 . 91039) (symbol 91025 . 91038) (TYPENAME 91016 . 91024) (punctuation 91015 . 91016) (TEMPLATE 91007 . 91015) (punctuation 90550 . 90551) (number 90549 . 90550) (punctuation 90547 . 90548) (punctuation 90545 . 90546) (INT 90542 . 90545) (punctuation 90523 . 90524) (symbol 90518 . 90523) (punctuation 90517 . 90518) (punctuation 90516 . 90517) (punctuation 90515 . 90516) (symbol 90503 . 90515) (punctuation 90501 . 90502) (symbol 90497 . 90501) (punctuation 90496 . 90497) (punctuation 90495 . 90496) (punctuation 90494 . 90495) (symbol 90481 . 90494) (punctuation 90480 . 90481) (symbol 90468 . 90480) (punctuation 90467 . 90468) (punctuation 90466 . 90467) (symbol 90463 . 90466) (TYPENAME 90454 . 90462) (punctuation 90453 . 90454) (symbol 90446 . 90453) (punctuation 90445 . 90446) (punctuation 90444 . 90445) (symbol 90441 . 90444) (punctuation 90422 . 90423) (symbol 90411 . 90422) (punctuation 90410 . 90411) (punctuation 90409 . 90410) (symbol 90403 . 90409) (punctuation 90401 . 90402) (symbol 90388 . 90401) (TYPENAME 90379 . 90387) (punctuation 90378 . 90379) (TEMPLATE 90370 . 90378) (semantic-list 89064 . 89139) (symbol 89051 . 89059) (CONST 89045 . 89050) (semantic-list 89010 . 89044) (symbol 88998 . 89010) (punctuation 88996 . 88997) (symbol 88982 . 88996) (CONST 88976 . 88981) (symbol 88966 . 88975) (semantic-list 88826 . 88901) (symbol 88813 . 88821) (semantic-list 88784 . 88812) (symbol 88772 . 88784) (punctuation 88770 . 88771) (symbol 88756 . 88770) (semantic-list 88610 . 88691) (symbol 88597 . 88605) (CONST 88591 . 88596) (semantic-list 88553 . 88590) (symbol 88541 . 88553) (punctuation 88539 . 88540) (symbol 88522 . 88539) (CONST 88516 . 88521) (symbol 88506 . 88515) (semantic-list 88366 . 88447) (symbol 88353 . 88361) (semantic-list 88321 . 88352) (symbol 88309 . 88321) (punctuation 88307 . 88308) (symbol 88290 . 88307) (semantic-list 88152 . 88231) (symbol 88139 . 88147) (CONST 88133 . 88138) (semantic-list 88096 . 88132) (symbol 88084 . 88096) (punctuation 88082 . 88083) (symbol 88066 . 88082) (CONST 88060 . 88065) (symbol 88050 . 88059) (semantic-list 87913 . 87992) (symbol 87900 . 87908) (semantic-list 87869 . 87899) (symbol 87857 . 87869) (punctuation 87855 . 87856) (symbol 87839 . 87855) (semantic-list 87716 . 87781) (symbol 87703 . 87711) (CONST 87697 . 87702) (semantic-list 87667 . 87696) (symbol 87655 . 87667) (punctuation 87653 . 87654) (symbol 87644 . 87653) (CONST 87638 . 87643) (symbol 87628 . 87637) (semantic-list 87512 . 87577) (symbol 87499 . 87507) (semantic-list 87475 . 87498) (symbol 87463 . 87475) (punctuation 87461 . 87462) (symbol 87452 . 87461) (semantic-list 87339 . 87401) (symbol 87326 . 87334) (CONST 87320 . 87325) (semantic-list 87291 . 87319) (symbol 87279 . 87291) (punctuation 87277 . 87278) (symbol 87269 . 87277) (CONST 87263 . 87268) (symbol 87253 . 87262) (semantic-list 87141 . 87203) (symbol 87128 . 87136) (semantic-list 87105 . 87127) (symbol 87093 . 87105) (punctuation 87091 . 87092) (symbol 87083 . 87091) (semantic-list 86973 . 87033) (symbol 86960 . 86968) (CONST 86954 . 86959) (semantic-list 86926 . 86953) (symbol 86914 . 86926) (punctuation 86912 . 86913) (symbol 86905 . 86912) (CONST 86899 . 86904) (symbol 86889 . 86898) (semantic-list 86780 . 86840) (symbol 86767 . 86775) (semantic-list 86745 . 86766) (symbol 86733 . 86745) (punctuation 86731 . 86732) (symbol 86724 . 86731) (semantic-list 86613 . 86675) (symbol 86600 . 86608) (CONST 86594 . 86599) (semantic-list 86565 . 86593) (symbol 86553 . 86565) (punctuation 86551 . 86552) (symbol 86543 . 86551) (CONST 86537 . 86542) (symbol 86527 . 86536) (semantic-list 86415 . 86477) (symbol 86402 . 86410) (semantic-list 86379 . 86401) (symbol 86367 . 86379) (punctuation 86365 . 86366) (symbol 86357 . 86365) (semantic-list 85885 . 85915) (symbol 85872 . 85880) (CONST 85866 . 85871) (semantic-list 85863 . 85865) (symbol 85856 . 85863) (OPERATOR 85847 . 85855) (symbol 85837 . 85846) (semantic-list 85180 . 85234) (symbol 85167 . 85175) (CONST 85161 . 85166) (semantic-list 85158 . 85160) (symbol 85146 . 85158) (BOOL 85141 . 85145) (symbol 85131 . 85140) (semantic-list 84323 . 84374) (symbol 84310 . 84318) (CONST 84304 . 84309) (semantic-list 84301 . 84303) (symbol 84292 . 84301) (BOOL 84287 . 84291) (symbol 84277 . 84286) (semantic-list 83786 . 83836) (symbol 83773 . 83781) (CONST 83767 . 83772) (semantic-list 83764 . 83766) (symbol 83756 . 83764) (BOOL 83751 . 83755) (symbol 83741 . 83750) (semantic-list 83252 . 83303) (symbol 83239 . 83247) (CONST 83233 . 83238) (semantic-list 83230 . 83232) (symbol 83221 . 83230) (BOOL 83216 . 83220) (symbol 83206 . 83215) (semantic-list 82706 . 82763) (symbol 82693 . 82701) (CONST 82687 . 82692) (semantic-list 82684 . 82686) (symbol 82669 . 82684) (BOOL 82664 . 82668) (symbol 82654 . 82663) (semantic-list 81828 . 81888) (symbol 81815 . 81823) (CONST 81809 . 81814) (semantic-list 81806 . 81808) (symbol 81788 . 81806) (BOOL 81783 . 81787) (symbol 81773 . 81782) (semantic-list 80873 . 80970) (symbol 80860 . 80868) (CONST 80854 . 80859) (semantic-list 80851 . 80853) (symbol 80834 . 80851) (BOOL 80829 . 80833) (symbol 80819 . 80828) (semantic-list 79968 . 80032) (symbol 79955 . 79963) (CONST 79949 . 79954) (semantic-list 79946 . 79948) (symbol 79937 . 79946) (BOOL 79932 . 79936) (symbol 79922 . 79931) (semantic-list 79022 . 79074) (symbol 79009 . 79017) (CONST 79003 . 79008) (semantic-list 79000 . 79002) (symbol 78990 . 79000) (BOOL 78985 . 78989) (symbol 78975 . 78984) (semantic-list 78480 . 78529) (symbol 78467 . 78475) (CONST 78461 . 78466) (semantic-list 78458 . 78460) (symbol 78451 . 78458) (BOOL 78446 . 78450) (symbol 78436 . 78445) (semantic-list 77960 . 78009) (symbol 77947 . 77955) (CONST 77941 . 77946) (semantic-list 77938 . 77940) (symbol 77925 . 77938) (BOOL 77920 . 77924) (symbol 77910 . 77919) (semantic-list 77145 . 77224) (symbol 77132 . 77140) (CONST 77126 . 77131) (semantic-list 77123 . 77125) (symbol 77111 . 77123) (BOOL 77106 . 77110) (symbol 77096 . 77105) (semantic-list 76198 . 76228) (symbol 76185 . 76193) (CONST 76179 . 76184) (semantic-list 76176 . 76178) (symbol 76172 . 76176) (symbol 76164 . 76171) (symbol 76154 . 76163) (semantic-list 72674 . 72742) (symbol 72661 . 72669) (semantic-list 72658 . 72660) (symbol 72648 . 72658) (punctuation 72647 . 72648) (semantic-list 71719 . 71737) (punctuation 71718 . 71719) (OPERATOR 71710 . 71718) (punctuation 71708 . 71709) (symbol 71699 . 71708) (semantic-list 70649 . 70663) (punctuation 70631 . 70632) (symbol 70614 . 70622) (semantic-list 70593 . 70613) (symbol 70583 . 70593) (punctuation 70605 . 70606) (punctuation 64790 . 64791) (number 64789 . 64790) (punctuation 64787 . 64788) (symbol 64782 . 64786) (punctuation 64781 . 64782) (punctuation 64780 . 64781) (punctuation 64779 . 64780) (INT 64776 . 64779) (punctuation 64774 . 64775) (symbol 64769 . 64774) (punctuation 64768 . 64769) (punctuation 64767 . 64768) (punctuation 64766 . 64767) (symbol 64752 . 64766) (punctuation 64751 . 64752) (punctuation 64750 . 64751) (symbol 64738 . 64750) (TYPENAME 64729 . 64737) (punctuation 64727 . 64728) (symbol 64720 . 64727) (punctuation 64719 . 64720) (symbol 64712 . 64719) (punctuation 64711 . 64712) (punctuation 64710 . 64711) (symbol 64707 . 64710) (symbol 64687 . 64689) (symbol 64681 . 64686) (punctuation 64680 . 64681) (punctuation 64679 . 64680) (punctuation 64678 . 64679) (symbol 64670 . 64678) (punctuation 64669 . 64670) (punctuation 64668 . 64669) (symbol 64656 . 64668) (TYPENAME 64647 . 64655) (punctuation 64645 . 64646) (symbol 64638 . 64645) (punctuation 64637 . 64638) (symbol 64630 . 64637) (punctuation 64629 . 64630) (punctuation 64628 . 64629) (symbol 64625 . 64628) (punctuation 64606 . 64607) (symbol 64597 . 64606) (punctuation 64596 . 64597) (punctuation 64595 . 64596) (symbol 64592 . 64595) (TYPENAME 64583 . 64591) (punctuation 64581 . 64582) (symbol 64574 . 64581) (CLASS 64568 . 64573) (punctuation 64567 . 64568) (TEMPLATE 64559 . 64567) (punctuation 55812 . 55813) (punctuation 55811 . 55812) (punctuation 50217 . 50218) (number 50216 . 50217) (punctuation 50214 . 50215) (punctuation 50212 . 50213) (INT 50209 . 50212) (punctuation 50207 . 50208) (symbol 50202 . 50207) (punctuation 50201 . 50202) (punctuation 50200 . 50201) (punctuation 50199 . 50200) (symbol 50186 . 50199) (punctuation 50184 . 50185) (symbol 50174 . 50184) (punctuation 50173 . 50174) (symbol 50166 . 50173) (punctuation 50165 . 50166) (punctuation 50164 . 50165) (symbol 50161 . 50164) (symbol 50157 . 50160) (symbol 50153 . 50156) (symbol 50147 . 50152) (punctuation 50146 . 50147) (punctuation 50145 . 50146) (punctuation 50144 . 50145) (symbol 50131 . 50144) (punctuation 50130 . 50131) (symbol 50117 . 50130) (punctuation 50116 . 50117) (punctuation 50115 . 50116) (symbol 50109 . 50115) (punctuation 50089 . 50090) (symbol 50078 . 50089) (punctuation 50077 . 50078) (punctuation 50076 . 50077) (symbol 50070 . 50076) (punctuation 50054 . 50055) (symbol 50041 . 50054) (TYPENAME 50032 . 50040) (punctuation 50031 . 50032) (TEMPLATE 50022 . 50030) (semantic-list 48701 . 48855) (semantic-list 48660 . 48683) (symbol 48650 . 48660) (punctuation 48677 . 48678) (punctuation 48644 . 48645) (number 48643 . 48644) (punctuation 48641 . 48642) (punctuation 48639 . 48640) (INT 48636 . 48639) (punctuation 48634 . 48635) (symbol 48629 . 48634) (punctuation 48628 . 48629) (punctuation 48627 . 48628) (punctuation 48626 . 48627) (symbol 48625 . 48626) (punctuation 48623 . 48624) (symbol 48611 . 48623) (punctuation 48610 . 48611) (symbol 48592 . 48610) (punctuation 48591 . 48592) (punctuation 48590 . 48591) (symbol 48584 . 48590) (punctuation 48564 . 48565) (symbol 48553 . 48564) (punctuation 48552 . 48553) (punctuation 48551 . 48552) (symbol 48545 . 48551) (punctuation 48529 . 48530) (punctuation 48528 . 48529) (symbol 48514 . 48528) (punctuation 48513 . 48514) (symbol 48504 . 48513) (punctuation 48503 . 48504) (punctuation 48502 . 48503) (symbol 48496 . 48502) (punctuation 48494 . 48495) (symbol 48492 . 48493) (TYPENAME 48483 . 48491) (punctuation 48467 . 48468) (symbol 48453 . 48467) (TYPENAME 48444 . 48452) (punctuation 48443 . 48444) (TEMPLATE 48434 . 48442) (punctuation 45628 . 45629) (symbol 45611 . 45619) (semantic-list 45584 . 45610) (symbol 45574 . 45584) (punctuation 43756 . 43757) (symbol 43738 . 43755) (USING 43732 . 43737) (punctuation 40813 . 40814) (symbol 40799 . 40812) (USING 40793 . 40798) (semantic-list 39778 . 39999) (symbol 39765 . 39773) (CONST 39759 . 39764) (semantic-list 39756 . 39758) (symbol 39740 . 39756) (VOID 39735 . 39739) (semantic-list 38204 . 39331) (symbol 38187 . 38195) (semantic-list 38175 . 38186) (symbol 38168 . 38175) (VOID 38163 . 38167) (punctuation 38070 . 38071) (punctuation 37773 . 37774) (punctuation 37470 . 37471) (punctuation 35411 . 35412) (symbol 35402 . 35410) (semantic-list 35383 . 35401) (symbol 35373 . 35383) (punctuation 35288 . 35289) (symbol 35279 . 35287) (semantic-list 35257 . 35278) (symbol 35247 . 35257) (punctuation 35169 . 35170) (symbol 35160 . 35168) (semantic-list 35139 . 35159) (symbol 35129 . 35139) (punctuation 35059 . 35060) (symbol 35050 . 35058) (semantic-list 35036 . 35049) (symbol 35026 . 35036) (punctuation 34979 . 34980) (DEFAULT 34972 . 34979) (punctuation 34970 . 34971) (semantic-list 34967 . 34969) (symbol 34957 . 34967) (semantic-list 38204 . 39331) (symbol 38187 . 38195) (semantic-list 38175 . 38186) (symbol 38168 . 38175) (VOID 38163 . 38167) (punctuation 38070 . 38071) (punctuation 37773 . 37774) (punctuation 37470 . 37471) (punctuation 35411 . 35412) (symbol 35402 . 35410) (semantic-list 35383 . 35401) (symbol 35373 . 35383) (punctuation 35288 . 35289) (symbol 35279 . 35287) (semantic-list 35257 . 35278) (symbol 35247 . 35257) (punctuation 35169 . 35170) (symbol 35160 . 35168) (semantic-list 35139 . 35159) (symbol 35129 . 35139) (punctuation 35059 . 35060) (symbol 35050 . 35058) (semantic-list 35036 . 35049) (symbol 35026 . 35036) (punctuation 34979 . 34980) (DEFAULT 34972 . 34979) (punctuation 34970 . 34971) (semantic-list 34967 . 34969) (symbol 34957 . 34967) (punctuation 32792 . 32793) (punctuation 32791 . 32792) (punctuation 32790 . 32791) (punctuation 32788 . 32789) (punctuation 32760 . 32761) (symbol 32756 . 32760) (punctuation 32754 . 32755) (punctuation 32753 . 32754) (punctuation 32752 . 32753) (TYPENAME 32744 . 32752) (punctuation 32742 . 32743) (symbol 32741 . 32742) (TYPENAME 32732 . 32740) (punctuation 32731 . 32732) (TEMPLATE 32723 . 32731) (USING 32604 . 32609) (USING 29724 . 29729) (USING 26611 . 26616) (USING 23542 . 23547) (USING 22911 . 22916) (punctuation 20935 . 20936) (symbol 20927 . 20934) (USING 20921 . 20926) (punctuation 19327 . 19328) (symbol 19318 . 19326) (USING 19312 . 19317) (punctuation 15751 . 15752) (symbol 15731 . 15750) (USING 15725 . 15730) (punctuation 11495 . 11496) (punctuation 11494 . 11495) (symbol 11480 . 11494) (punctuation 11479 . 11480) (punctuation 11478 . 11479) (symbol 11468 . 11478) (TYPENAME 11459 . 11467) (punctuation 11458 . 11459) (symbol 11437 . 11458) (punctuation 11435 . 11436) (symbol 11412 . 11434) (USING 11406 . 11411) (punctuation 11340 . 11341) (punctuation 11339 . 11340) (symbol 11331 . 11339) (punctuation 11330 . 11331) (punctuation 11329 . 11330) (symbol 11319 . 11329) (TYPENAME 11310 . 11318) (punctuation 11309 . 11310) (symbol 11288 . 11309) (punctuation 11286 . 11287) (symbol 11269 . 11285) (USING 11263 . 11268) (punctuation 11174 . 11175) (symbol 11159 . 11173) (USING 11153 . 11158) (punctuation 11072 . 11073) (symbol 11063 . 11071) (USING 11057 . 11062) (punctuation 10940 . 10941) (symbol 10926 . 10939) (USING 10920 . 10925) (punctuation 10812 . 10813) (symbol 10804 . 10811) (USING 10798 . 10803) (punctuation 10725 . 10726) (symbol 10710 . 10724) (USING 10704 . 10709) (punctuation 10657 . 10658) (symbol 10647 . 10656) (USING 10641 . 10646) (punctuation 10575 . 10576) (symbol 10559 . 10574) (USING 10553 . 10558) (punctuation 10488 . 10489) (punctuation 10487 . 10488) (symbol 10477 . 10487) (CONST 10471 . 10476) (punctuation 10469 . 10470) (symbol 10453 . 10468) (USING 10447 . 10452) (punctuation 10394 . 10395) (punctuation 10393 . 10394) (symbol 10383 . 10393) (punctuation 10381 . 10382) (symbol 10371 . 10380) (USING 10365 . 10370) (USING 10288 . 10293) (punctuation 9974 . 9975) (symbol 9962 . 9973) (USING 9956 . 9961) (punctuation 9891 . 9892) (symbol 9878 . 9890) (USING 9872 . 9877) (punctuation 9808 . 9809) (symbol 9797 . 9807) (USING 9791 . 9796) (punctuation 9723 . 9724) (symbol 9706 . 9722) (USING 9700 . 9705) (punctuation 9631 . 9632) (symbol 9619 . 9630) (USING 9613 . 9618) (punctuation 9551 . 9552) (symbol 9541 . 9550) (USING 9535 . 9540) (punctuation 9285 . 9286) (symbol 9266 . 9284) (USING 9260 . 9265) (punctuation 9164 . 9165) (symbol 9148 . 9163) (USING 9142 . 9147) (punctuation 9136 . 9137) (symbol 9130 . 9136) (TYPENAME 9121 . 9129) (punctuation 9119 . 9120) (symbol 9118 . 9119) (TYPENAME 9109 . 9117) (punctuation 9108 . 9109) (TEMPLATE 9100 . 9108) (punctuation 9059 . 9060) (punctuation 9058 . 9059) (punctuation 9056 . 9057) (symbol 9043 . 9055) (USING 9037 . 9042) (punctuation 8974 . 8975) (symbol 8966 . 8973) (USING 8960 . 8965) (punctuation 8902 . 8903) (punctuation 8901 . 8902) (punctuation 8899 . 8900) (symbol 8888 . 8898) (USING 8882 . 8887) (punctuation 8821 . 8822) (punctuation 8820 . 8821) (punctuation 8818 . 8819) (symbol 8804 . 8817) (USING 8798 . 8803) (punctuation 8796 . 8797) (symbol 8788 . 8796) (TYPENAME 8779 . 8787) (punctuation 8778 . 8779) (TEMPLATE 8770 . 8778) (punctuation 8720 . 8721) (punctuation 8719 . 8720) (punctuation 8717 . 8718) (symbol 8703 . 8716) (USING 8697 . 8702) (punctuation 8645 . 8646) (punctuation 8644 . 8645) (punctuation 8642 . 8643) (symbol 8625 . 8641) (USING 8619 . 8624) (punctuation 8613 . 8614) (symbol 8605 . 8613) (TYPENAME 8596 . 8604) (punctuation 8595 . 8596) (TEMPLATE 8587 . 8595) (punctuation 8534 . 8535) (punctuation 8533 . 8534) (punctuation 8531 . 8532) (symbol 8509 . 8530) (USING 8503 . 8508) (punctuation 8501 . 8502) (symbol 8497 . 8501) (TYPENAME 8488 . 8496) (punctuation 8487 . 8488) (TEMPLATE 8479 . 8487) (punctuation 8429 . 8430) (punctuation 8428 . 8429) (punctuation 8426 . 8427) (symbol 8410 . 8425) (USING 8404 . 8409) (punctuation 8398 . 8399) (symbol 8390 . 8398) (TYPENAME 8381 . 8389) (punctuation 8380 . 8381) (TEMPLATE 8372 . 8380) (punctuation 8323 . 8324) (punctuation 8322 . 8323) (punctuation 8320 . 8321) (symbol 8310 . 8319) (USING 8304 . 8309) (punctuation 8298 . 8299) (symbol 8285 . 8298) (TYPENAME 8276 . 8284) (punctuation 8275 . 8276) (TEMPLATE 8267 . 8275) (punctuation 8210 . 8211) (punctuation 8209 . 8210) (punctuation 8207 . 8208) (symbol 8189 . 8206) (USING 8183 . 8188) (punctuation 8177 . 8178) (symbol 8164 . 8177) (TYPENAME 8155 . 8163) (punctuation 8154 . 8155) (TEMPLATE 8146 . 8154) (punctuation 8101 . 8102) (punctuation 8100 . 8101) (punctuation 8098 . 8099) (symbol 8077 . 8097) (USING 8071 . 8076) (punctuation 8027 . 8028) (punctuation 8026 . 8027) (punctuation 8024 . 8025) (symbol 8017 . 8023) (USING 8011 . 8016) (punctuation 7969 . 7970) (punctuation 7968 . 7969) (punctuation 7966 . 7967) (symbol 7960 . 7965) (USING 7954 . 7959) (USING 7836 . 7841) (punctuation 7764 . 7765) (punctuation 7763 . 7764) (CLASS 7757 . 7762) (FRIEND 7750 . 7756) (punctuation 7744 . 7745) (symbol 7731 . 7744) (TYPENAME 7722 . 7730) (punctuation 7721 . 7722) (TEMPLATE 7713 . 7721) (punctuation 7675 . 7676) (punctuation 7674 . 7675) (CLASS 7668 . 7673) (FRIEND 7661 . 7667) (punctuation 7655 . 7656) (symbol 7647 . 7655) (TYPENAME 7638 . 7646) (punctuation 7636 . 7637) (symbol 7623 . 7636) (TYPENAME 7614 . 7622) (punctuation 7613 . 7614) (TEMPLATE 7605 . 7613) (punctuation 7571 . 7572) (punctuation 7570 . 7571) (CLASS 7564 . 7569) (FRIEND 7557 . 7563) (punctuation 7551 . 7552) (symbol 7538 . 7551) (TYPENAME 7529 . 7537) (punctuation 7528 . 7529) (TEMPLATE 7520 . 7528) (punctuation 7473 . 7474) (punctuation 7472 . 7473) (FRIEND 7465 . 7471) (punctuation 7422 . 7423) (punctuation 7421 . 7422) (FRIEND 7414 . 7420) (punctuation 7373 . 7374) (punctuation 7372 . 7373) (FRIEND 7365 . 7371) (symbol 7221 . 7256))
      :lexical-table 
        '(("NLOHMANN_JSON_HPP")
          ("NLOHMANN_JSON_VERSION_MAJOR" . ((number "3" 1466 . 1467)))
          ("NLOHMANN_JSON_VERSION_PATCH" . ((number "2" 1542 . 1543)))
          ("NLOHMANN_JSON_VERSION_MINOR" . ((number "1" 1504 . 1505)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("NLOHMANN_JSON_FWD_HPP" variable (:constant-flag t) nil [39 60])
            ("cstdint" include (:system-flag t) nil [62 80])
            ("map" include (:system-flag t) nil [102 116])
            ("memory" include (:system-flag t) nil [124 141])
            ("string" include (:system-flag t) nil [155 172])
            ("vector" include (:system-flag t) nil [183 200])
            ("nlohmann" type
               (:members 
                  ( ("adl_serializer" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [584 606])
                    ("basic_json" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1163 1180])
                    ("json_pointer" type
                       (:template 
                          ( ("BasicJsonType" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1492 1544])
                    ("basic_json" variable (:type "int") (reparse-symbol namespacesubparts) [1724 1737]))                  
                :type "namespace")
                nil [308 1739]))          
      :file "json_fwd.hpp"
      :pointmax 1748
      :fsize 1747
      :lastmodtime '(23254 8838 662102 144000)
      :unmatched-syntax '((punctuation 1722 . 1723) (symbol 1717 . 1721) (USING 1711 . 1716) (punctuation 1161 . 1162) (symbol 1147 . 1161) (punctuation 1136 . 1137) (symbol 1121 . 1135) (CLASS 1115 . 1120) (punctuation 1113 . 1114) (VOID 1109 . 1113) (punctuation 1107 . 1108) (symbol 1100 . 1106) (TYPENAME 1091 . 1099) (punctuation 1089 . 1090) (symbol 1088 . 1089) (TYPENAME 1079 . 1087) (punctuation 1078 . 1079) (TEMPLATE 1070 . 1078) (punctuation 1059 . 1060) (symbol 1050 . 1059) (punctuation 1049 . 1050) (punctuation 1048 . 1049) (symbol 1045 . 1048) (punctuation 1043 . 1044) (symbol 1029 . 1042) (CLASS 1023 . 1028) (punctuation 1021 . 1022) (symbol 1020 . 1021) (TYPENAME 1011 . 1019) (punctuation 1010 . 1011) (TEMPLATE 1002 . 1010) (punctuation 991 . 992) (DOUBLE 985 . 991) (punctuation 983 . 984) (symbol 967 . 982) (CLASS 961 . 966) (punctuation 950 . 951) (symbol 942 . 950) (punctuation 941 . 942) (punctuation 940 . 941) (symbol 937 . 940) (punctuation 935 . 936) (symbol 916 . 934) (CLASS 910 . 915) (punctuation 899 . 900) (symbol 892 . 899) (punctuation 891 . 892) (punctuation 890 . 891) (symbol 887 . 890) (punctuation 885 . 886) (symbol 867 . 884) (CLASS 861 . 866) (punctuation 850 . 851) (BOOL 846 . 850) (punctuation 844 . 845) (symbol 832 . 843) (CLASS 826 . 831) (punctuation 824 . 825) (symbol 818 . 824) (punctuation 817 . 818) (punctuation 816 . 817) (symbol 813 . 816) (punctuation 811 . 812) (symbol 800 . 810) (CLASS 794 . 799) (punctuation 783 . 784) (symbol 777 . 783) (punctuation 776 . 777) (punctuation 775 . 776) (symbol 772 . 775) (punctuation 770 . 771) (symbol 760 . 769) (CLASS 754 . 759) (punctuation 752 . 753) (symbol 748 . 752) (punctuation 746 . 747) (punctuation 745 . 746) (punctuation 744 . 745) (TYPENAME 736 . 744) (punctuation 734 . 735) (symbol 733 . 734) (TYPENAME 724 . 732) (punctuation 723 . 724) (TEMPLATE 715 . 723) (punctuation 704 . 705) (symbol 701 . 704) (punctuation 700 . 701) (punctuation 699 . 700) (symbol 696 . 699) (punctuation 685 . 686) (symbol 674 . 684) (CLASS 668 . 673) (punctuation 666 . 667) (symbol 662 . 666) (punctuation 660 . 661) (punctuation 659 . 660) (punctuation 658 . 659) (TYPENAME 650 . 658) (punctuation 648 . 649) (symbol 647 . 648) (TYPENAME 638 . 646) (punctuation 636 . 637) (symbol 635 . 636) (TYPENAME 626 . 634) (punctuation 625 . 626) (TEMPLATE 617 . 625) (punctuation 616 . 617) (TEMPLATE 608 . 616) (punctuation 582 . 583) (VOID 578 . 582) (punctuation 576 . 577) (TYPENAME 567 . 575) (punctuation 565 . 566) (VOID 561 . 565) (punctuation 559 . 560) (TYPENAME 550 . 558) (punctuation 549 . 550) (TEMPLATE 541 . 549))
      :lexical-table 
        '(("NLOHMANN_JSON_FWD_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("utility" include (:system-flag t) nil [15 33])
            ("nlohmann/detail/conversions/from_json.hpp" include (:system-flag t) nil [35 87])
            ("nlohmann/detail/conversions/to_json.hpp" include (:system-flag t) nil [88 138])
            ("nlohmann" type
               (:members 
                  ( ("adl_serializer" type
                       (:members 
                          ( ("noexcept" function
                               (:arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [648 716]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [630 797])
                            ("noexcept" function
                               (:arguments 
                                  ( ("" variable (:type ("noexcept" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1177 1239]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [1159 1314]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [190 1317]))                  
                :type "namespace")
                nil [140 1319]))          
      :file "adl_serializer.hpp"
      :pointmax 1320
      :fsize 1319
      :lastmodtime '(23254 8838 641570 545000)
      :unmatched-syntax '((semantic-list 1185 . 1239) (semantic-list 1123 . 1158) (symbol 1116 . 1123) (punctuation 1152 . 1153) (VOID 1111 . 1115) (punctuation 1152 . 1153) (STATIC 1104 . 1110) (punctuation 1152 . 1153) (punctuation 1098 . 1099) (symbol 1089 . 1098) (TYPENAME 1080 . 1088) (punctuation 1078 . 1079) (symbol 1065 . 1078) (TYPENAME 1056 . 1064) (punctuation 1055 . 1056) (TEMPLATE 1047 . 1055) (punctuation 1152 . 1153) (semantic-list 656 . 716) (semantic-list 594 . 629) (symbol 585 . 594) (punctuation 609 . 610) (VOID 580 . 584) (punctuation 609 . 610) (STATIC 573 . 579) (punctuation 609 . 610) (punctuation 567 . 568) (symbol 558 . 567) (TYPENAME 549 . 557) (punctuation 547 . 548) (symbol 534 . 547) (TYPENAME 525 . 533) (punctuation 524 . 525) (TEMPLATE 516 . 524) (punctuation 609 . 610) (punctuation 188 . 189) (TYPENAME 180 . 188) (punctuation 178 . 179) (TYPENAME 170 . 178) (punctuation 169 . 170) (TEMPLATE 161 . 169) (symbol 9 . 13) (symbol 2 . 8) (punctuation 1 . 2))))
  :file "!Users!macbook!programming!_projects!pdf-something!dependencies!nlohmann!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
